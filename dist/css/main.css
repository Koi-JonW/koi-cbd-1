/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

@font-face {
  font-family: 'Recolata Regular';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../../../dist/fonts/Recoleta-Regular.eot") format("eot");
}

@font-face {
  font-family: 'Recolata Regular';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../../../dist/fonts/Recoleta-Regular.ttf") format("ttf");
}

@font-face {
  font-family: 'Recolata Regular';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../../../dist/fonts/Recoleta-Regular.woff") format("woff");
}

@font-face {
  font-family: 'Recolata Regular';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../../../dist/fonts/Recoleta-Regular.woff2") format("woff2");
}

@font-face {
  font-family: 'Recolata Regular';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../../../dist/fonts/RecoletaRegular.otf") format("otf");
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: Arial, Helvetica, sans-serif;
  min-width: 320px;
  font-family: sans-serif;
  line-height: 1.4;
  min-height: 5000px;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Recoleta Regular", serif;
  font-weight: 300;
  line-height: 1;
}

.k-headline--sm {
  font-size: 1.5em;
}

.k-headline--md {
  font-size: 2.2em;
}

.k-headline--lg {
  font-size: 3em;
}

.k-headline--fake {
  font-size: 1em;
  font-family: sans-serif;
  line-height: 1.4;
}

.k-weight--sm {
  font-weight: 300;
}

.k-weight--md {
  font-weight: 400;
}

.k-weight--lg {
  font-weight: 700;
}

.k-accent-text {
  color: #cccccc;
}

.k-rte-content a {
  color: #080907;
}

.k-rte-content a:hover {
  color: #f4b13e;
  text-decoration: underline;
}

a {
  text-decoration: none;
  transition: color 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
}

a:hover {
  color: #f4b13e !important;
}

.k-upcase {
  text-transform: uppercase;
}

@media (min-width: 767px) {
  .k-headline--md {
    font-size: 2.8em;
  }
  .k-headline--lg {
    font-size: 3.5em;
  }
}

@media (min-width: 992px) {
  .k-headline--md {
    font-size: 3em;
  }
  .k-headline--lg {
    font-size: 3.8em;
  }
}

@media (min-width: 992px) {
  .k-headline--md {
    font-size: 3.5em;
  }
  .k-headline--lg {
    font-size: 4.5em;
  }
}

@media (min-width: 1199px) {
  .k-headline--md {
    font-size: 3.8em;
  }
  .k-headline--lg {
    font-size: 5em;
  }
}

@media (min-width: 1440px) {
  .k-headline--sm {
    font-size: 1.85em;
  }
  .k-headline--md {
    font-size: 4.33em;
  }
  .k-headline--lg {
    font-size: 6em;
  }
}

@media (min-width: 1800px) {
  body {
    font-size: .89vw;
    transition: font-size 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
  }
  .k-headline--sm {
    font-size: 2.15em;
  }
  .k-headline--md {
    font-size: 4.8em;
  }
  .k-headline--lg {
    font-size: 6.55em;
  }
}

.k-block--md {
  padding: 5.8595em 0;
}

.k-inner {
  margin: auto;
}

.k-inner--sm, .k-inner--md, .k-inner--lg {
  width: 90%;
}

.k-inner--sm {
  max-width: 58.33em;
}

@media (min-width: 767px) {
  .k-block--md {
    padding: 7.8125em 0;
  }
  .k-inner--md {
    width: 80%;
  }
}

@media (min-width: 1199px) {
  .k-block--md {
    padding: 11.7187em 0;
  }
  .k-inner--lg {
    width: 88%;
  }
}

.k-figure {
  margin: 0;
  padding: 0;
  position: relative;
  overflow: hidden;
}

.k-figure--rounded .k-figure--liner {
  border-radius: .667em;
  overflow: hidden;
}

.k-figure--img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.koi-bg {
  position: absolute;
  z-index: -1;
  height: 100%;
  width: auto;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.koi-bg path {
  fill: #e6e6e6;
}

.k-header {
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 99;
  background: #fff;
  box-shadow: 0 0 5px -3px #080907;
}

.k-header.is-open .k-header--nav {
  transform: translateY(0);
}

.k-header.is-open .k-header--navtoggle__line:first-child, .k-header.is-open .k-header--navtoggle__line:last-child {
  top: 50%;
}

.k-header.is-open .k-header--navtoggle__line:nth-child(2) {
  opacity: 0;
}

.k-header.is-open .k-header--navtoggle__line:first-child {
  transform: translateY(-50%) rotate(45deg);
}

.k-header.is-open .k-header--navtoggle__line:last-child {
  transform: translateY(-50%) rotate(-45deg);
}

.k-header--top {
  background: #080907;
  color: #fff;
  text-align: right;
}

.k-header--top .k-inner {
  padding: .25em 0;
}

.k-header--top span {
  font-size: 70%;
}

.k-header--main {
  background: #fff;
}

.k-header--main .k-inner {
  padding: .5em 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #fff;
}

.k-header--logo {
  max-width: 3.5em;
}

.k-header--logo img {
  display: block;
  max-width: 100%;
}

.k-header--nav {
  text-align: right;
  position: absolute;
  width: 100%;
  transition: transform 1s cubic-bezier(0.075, 0.82, 0.165, 1);
  transform: translateY(-150%);
  z-index: -1;
  background: #fff;
}

.k-header--nav__content {
  padding: 2em 5% 2em 0;
}

.k-header--nav ul {
  padding: 0;
  margin: 0;
  list-style-type: none;
}

.k-header--nav li {
  margin-bottom: 1em;
}

.k-header--nav a {
  color: #080907;
  font-size: 125%;
}

.k-header--navtoggle {
  width: 2em;
  height: 1.5em;
  position: relative;
}

.k-header--navtoggle__line {
  position: absolute;
  height: 2px;
  width: 100%;
  background: #080907;
  transform: translateY(-50%);
  transition: transform 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-header--navtoggle__line:nth-child(2) {
  top: 50%;
  transition: opacity 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-header--navtoggle__line:nth-child(3) {
  top: 100%;
}

@media (min-width: 767px) {
  .k-header--top .k-inner {
    display: flex;
    justify-content: space-between;
    padding: .75em 0;
  }
  .k-header--main {
    position: relative;
  }
  .k-header--logo {
    max-width: 6.25em;
  }
  .k-header--nav {
    z-index: 2;
    width: 90%;
    top: 50%;
    left: 5%;
    transform: translateY(-50%);
    text-align: left;
    background: transparent;
  }
  .k-header--nav__content {
    padding: 0;
    display: flex;
    justify-content: flex-end;
  }
  .k-header--nav ul {
    padding: 0;
  }
  .k-header--nav ul li:first-child {
    margin-left: 0;
  }
  .k-header--nav li {
    display: inline-block;
    margin-bottom: 0;
    margin-right: .75em;
  }
  .k-header--nav a {
    font-size: 100%;
  }
  .k-header--navtoggle {
    display: none;
  }
}

@media (min-width: 992px) {
  .k-header--main .k-inner {
    padding: 0;
  }
  .k-header--logo {
    margin: auto;
    transform: translateY(-1.125em);
  }
  .k-header--nav__content {
    justify-content: space-between;
  }
  .k-header--nav ul li:last-child {
    margin-right: 0;
  }
  .k-header--nav li {
    display: inline-block;
    margin-right: 1em;
  }
  .k-header--nav a {
    font-size: 110%;
  }
}

@media (min-width: 1199px) {
  .k-header--nav {
    width: 88%;
    left: 6%;
  }
}

.k-hero {
  position: relative;
}

.k-hero--default .k-inner {
  padding: 5.8595em 0;
}

.k-hero--default .k-hero--text {
  padding-bottom: 4em;
}

.k-hero--default .k-hero--text h1, .k-hero--default .k-hero--text h2 {
  margin: 0;
}

.k-hero--on-dark {
  color: #fff;
}

.k-hero--bgimg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  z-index: -1;
}

.k-hero--bigtext {
  margin-top: 1em;
}

.k-hero--bigtext h1,
.k-hero--bigtext .k-headline--fake {
  font-size: 120%;
}

.k-hero--action .k-button:last-child {
  margin-top: 1em;
}

@media (min-width: 767px) {
  .k-hero--action {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .k-hero--action .k-button {
    flex-basis: 50%;
    margin-right: .5em;
  }
  .k-hero--action .k-button:last-child {
    margin: 0;
    margin-left: .5em;
  }
}

@media (min-width: 992px) {
  .k-hero--center {
    text-align: center;
  }
  .k-hero--default .k-hero--text h1 {
    width: 50%;
    max-width: 34.375em;
    margin: auto;
  }
  .k-hero--action .k-button {
    flex-basis: auto;
  }
  .k-hero--bigtext {
    margin-top: 2em;
  }
  .k-hero--bigtext h1,
  .k-hero--bigtext .k-headline--fake {
    font-size: 155%;
  }
}

@media (min-width: 1199px) {
  .k-hero--default .k-inner {
    padding: 7.8125em 0;
  }
}

@media (min-width: 1440px) {
  .k-hero--default .k-inner {
    padding: 11.7187em 0;
  }
}

.k-button {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  display: block;
  color: #fff;
  padding: 1.4em 1.5em;
  border-radius: .4em;
  text-align: center;
  border: 1px solid;
  transition: background 1s cubic-bezier(0.075, 0.82, 0.165, 1), color 1s cubic-bezier(0.075, 0.82, 0.165, 1), border-color 1s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-button:hover {
  cursor: pointer;
  background: #fff;
  color: #f4b13e;
}

.k-button--primary {
  background: #f4b13e;
  border-color: #f4b13e;
}

.k-button--secondary {
  background: transparent;
}

.k-button--default {
  background: #fff;
  color: #f4b13e;
  border-color: #cccccc;
}

.k-button--default:hover {
  background: #f4b13e;
  color: #fff;
}

@media (min-width: 580px) {
  .k-button {
    padding: 1.4em 3.25em;
    display: inline-block;
  }
}

.k-productcard .k-figure {
  width: 50%;
  margin: auto;
}

.k-productcard .k-figure--liner {
  padding-bottom: 147.77%;
}

.k-productcard--title {
  text-align: center;
  margin-top: 2em;
}

.k-productcard--title h3 {
  margin: 0;
}

.k-productcard--action {
  margin-top: 2em;
}

.k-productcard--action .k-button {
  display: block;
}

.k-productcard--reviews {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.k-productcard--reviews .k-accent-text {
  font-size: 80%;
  flex-basis: 33%;
}

.k-productcard--reviews ul {
  flex-basis: 66.6667%;
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.k-productcard--reviews li {
  display: inline-block;
}

.k-productcard--reviews svg {
  width: 1em;
}

.k-promoslider .k-productcard {
  width: 100%;
  margin-right: 1.5em;
}

@media (min-width: 767px) {
  .k-promoslider .k-productcard {
    width: 50%;
  }
}

@media (min-width: 992px) {
  .k-promoslider .k-productcard {
    width: 33.3333%;
  }
}

@media (min-width: 1199px) {
  .k-promoslider .k-productcard {
    width: 25%;
  }
}

.k-testimonialslider--slide {
  text-align: center;
  width: 100%;
  margin-right: 2em;
}

.k-testimonialslider--slide .k-figure {
  max-width: 8.05em;
  margin: auto;
}

.k-testimonialslider--slide .k-figure--liner {
  padding-bottom: 100%;
}

.k-overview {
  position: relative;
  overflow: hidden;
}

.k-overview--item {
  margin-bottom: 2em;
}

.k-overview--item .k-figure {
  width: 90%;
  overflow: visible;
}

.k-overview--intro .k-preheading span {
  color: #c0d8be;
}

.k-overview--intro__text {
  margin-bottom: 1.5em;
}

.k-overview--intro__card {
  position: relative;
}

.k-overview--intro__card .k-figure--liner {
  padding-bottom: 144.23%;
}

.k-overview--intro__card .k-cornerimg {
  bottom: -2.5em;
  right: -10%;
  width: 40%;
}

.k-overview .k-cornerimg {
  position: absolute;
}

.k-overview--topicals .k-figure--liner {
  padding-bottom: 62.96%;
}

.k-overview--topicals .k-cornerimg {
  bottom: -2.5em;
  right: -10%;
  width: 50%;
}

.k-overview--pets .k-figure {
  margin-bottom: -20%;
  width: 100%;
  overflow: hidden;
}

.k-overview--pets .k-figure--liner {
  padding-bottom: 61.63%;
}

.k-overview--edibles .k-figure--liner {
  padding-bottom: 58.82%;
}

.k-overview--edibles .k-cornerimg {
  bottom: -2.5em;
  right: -25%;
  width: 50%;
}

.k-overview--vape__card {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.k-overview--vape .k-figure {
  flex-basis: 40%;
}

.k-overview--vape .k-figure--liner {
  padding-bottom: 144.64%;
}

.k-overview--vape__text {
  flex-basis: 50%;
}

.k-overview--vape__text .k-headline {
  margin-top: 0;
}

.k-overview--vape .k-cornerimg {
  bottom: -2.5em;
  right: -10%;
  width: 40%;
}

@media (min-width: 767px) {
  .k-overview--item {
    margin-bottom: 0;
  }
  .k-overview--item .k-figure {
    width: 100%;
  }
  .k-overview--intro {
    display: flex;
    justify-content: space-between;
  }
  .k-overview--intro__text {
    flex-basis: 55%;
    margin-bottom: 0;
  }
  .k-overview--intro__card {
    flex-basis: 40%;
  }
  .k-overview--intro__card .k-cornerimg {
    right: -16.5%;
  }
  .k-overview--intro .k-textbody {
    margin-bottom: 2em;
  }
  .k-overview--topicals {
    width: 55%;
    margin-top: -8em;
  }
  .k-overview--pets {
    margin: -8em 0 2em 60%;
  }
  .k-overview--edibles {
    width: 55%;
  }
  .k-overview--edibles__text {
    max-width: 24.72em;
  }
  .k-overview--vape {
    margin: 2em 0 0 33.33%;
    width: auto;
  }
}

@media (min-width: 1199px) {
  .k-overview--intro__text {
    max-width: 38em;
  }
  .k-overview--intro__card {
    max-width: 28em;
  }
  .k-overview--topicals {
    margin-top: -12em;
    max-width: 30em;
  }
  .k-overview--pets {
    margin: 0 0 0 auto;
    max-width: 21.66em;
  }
  .k-overview--edibles {
    max-width: 42em;
    margin-top: -10em;
  }
  .k-overview--vape {
    margin-left: 33.33em;
    max-width: 44.16em;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
