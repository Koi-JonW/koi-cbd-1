/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

@font-face {
  font-family: 'Recoleta Regular';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../../dist/fonts/Recoleta-Regular.eot") format("eot");
}

@font-face {
  font-family: 'Recoleta Regular';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../../dist/fonts/Recoleta-Regular.ttf") format("ttf");
}

@font-face {
  font-family: 'Recoleta Regular';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../../dist/fonts/Recoleta-Regular.woff") format("woff");
}

@font-face {
  font-family: 'Recoleta Regular';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../../dist/fonts/Recoleta-Regular.woff2") format("woff2");
}

@font-face {
  font-family: 'Recoleta Regular';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../../dist/fonts/RecoletaRegular.otf") format("otf");
}

@font-face {
  font-family: 'GT America';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url("../../dist/fonts/GT-America-Light.otf") format("otf");
}

@font-face {
  font-family: 'GT America';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url("../../dist/fonts/gt-america-light-webfont.woff") format("woff");
}

@font-face {
  font-family: 'GT America';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url("../../dist/fonts/gt-america-light-webfont.woff2") format("woff2");
}

@font-face {
  font-family: 'GT America';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../../dist/fonts/GT-America-Regular.otf") format("otf");
}

@font-face {
  font-family: 'GT America';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../../dist/fonts/gt-america-regular-webfont.woff") format("woff");
}

@font-face {
  font-family: 'GT America';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../../dist/fonts/gt-america-regular-webfont.woff2") format("woff2");
}

@font-face {
  font-family: 'GT America';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url("../../dist/fonts/GT-America-Medium.otf") format("otf");
}

@font-face {
  font-family: 'GT America';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url("../../dist/fonts/gt-america-medium-webfont.woff") format("woff");
}

@font-face {
  font-family: 'GT America';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url("../../dist/fonts/gt-america-medium-webfont.woff2") format("woff2");
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

html,
body {
  scroll-behavior: smooth;
}

body {
  position: relative;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: Arial, Helvetica, sans-serif;
  min-width: 320px;
  font-family: "GT America", sans-serif;
  line-height: 1.85;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Recoleta Regular", serif;
  line-height: 1;
  font-weight: 400;
}

h2 {
  font-size: 1.8em;
}

.k-headline {
  font-family: "Recoleta Regular", serif;
  line-height: 1.225;
}

.k-headline--xs {
  font-size: 1.5em;
}

.k-headline--sm {
  font-size: 1.9em;
}

.k-headline--md {
  font-size: 2.2em;
}

.k-headline--lg {
  font-size: 3em;
}

.k-headline--fake {
  font-size: 1em;
  font-family: "GT America", sans-serif;
  line-height: 1.4;
  font-weight: 400;
}

.k-headline--body {
  font-family: "GT America", sans-serif;
}

.k-weight--sm {
  font-weight: 300;
}

.k-weight--md {
  font-weight: 400;
}

.k-weight--lg {
  font-weight: 500;
}

.k-accent-text {
  color: #cccccc;
}

.k-underline {
  text-decoration: underline;
}

.k-rte-content h1:first-child, .k-rte-content h2:first-child, .k-rte-content h3:first-child, .k-rte-content h4:first-child, .k-rte-content h5:first-child, .k-rte-content h6:first-child {
  margin-top: 0;
}

.k-rte-content a {
  color: #080907;
  text-decoration: underline;
}

.k-rte-content a:hover {
  color: #f4b13e;
  text-decoration: underline;
}

.k-rte-content .k-button {
  text-decoration: none;
}

.k-rte-content .k-button--dark {
  color: #fff;
}

.k-rte-content .k-button:hover {
  text-decoration: none;
}

.k-rte-content img {
  display: block;
  max-width: 100%;
  min-width: 100%;
}

.k-rte-content p:first-child {
  margin-top: 0;
}

.k-rte-content p:last-child {
  margin-bottom: 0;
}

.on-dark h1, .on-dark h2, .on-dark h3, .on-dark h4, .on-dark h5, .on-dark h6,
.on-dark a,
.on-dark p,
.on-dark ul,
.on-dark li,
.on-dark span,
.on-dark .k-headline {
  color: #fff;
}

.on-dark a:hover {
  color: #f4b13e;
}

.k-align--left {
  text-align: left;
}

.k-align--center {
  text-align: center;
}

.k-align--right {
  text-align: right;
}

a,
.k-fakelink {
  text-decoration: none;
  transition: color 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
}

a:hover,
.k-fakelink:hover {
  cursor: pointer;
  color: #f4b13e !important;
}

.k-upcase {
  text-transform: uppercase;
}

.k-bg-dark {
  background: #f2f2f2;
}

@media (min-width: 767px) {
  .k-headline--md {
    font-size: 2.8em;
  }
  .k-headline--lg {
    font-size: 3.5em;
  }
}

@media (min-width: 992px) {
  .k-headline--md {
    font-size: 3em;
  }
  .k-headline--lg {
    font-size: 3.8em;
  }
}

@media (min-width: 992px) {
  .k-headline--md {
    font-size: 3.5em;
  }
  .k-headline--lg {
    font-size: 4.5em;
  }
}

@media (min-width: 1199px) {
  .k-headline--sm {
    font-size: 2.5em;
  }
  .k-headline--md {
    font-size: 3.8em;
  }
  .k-headline--lg {
    font-size: 5em;
  }
}

@media (min-width: 1440px) {
  .k-headline--xs {
    font-size: 1.85em;
  }
  .k-headline--sm {
    font-size: 2.8em;
  }
  .k-headline--lg {
    font-size: 6em;
  }
}

@media (min-width: 1800px) {
  body {
    font-size: 0.89vw;
    transition: font-size 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
  }
  .k-headline--xs {
    font-size: 1.9em;
  }
  .k-headline--sm {
    font-size: 3.2em;
  }
  .k-headline--lg {
    font-size: 6.55em;
  }
}

.k-block--sm {
  padding: 3em 0;
}

.k-block--md {
  padding: 5.8595em 0;
}

.k-block--lg {
  padding: 7.8125em 0;
}

.k-inner {
  margin: auto;
}

.k-inner--sm, .k-inner--md, .k-inner--lg, .k-inner--xl {
  width: 90%;
}

.k-inner--sm {
  max-width: 58.33em;
}

.k-no-padding--top {
  padding-top: 0 !important;
}

.k-no-padding--bottom {
  padding-bottom: 0 !important;
}

.k-half-padding--top {
  padding-top: 4.75em !important;
}

.k-half-padding--bottom {
  padding-bottom: 4.75em !important;
}

@media (min-width: 767px) {
  .k-block--md {
    padding: 7.8125em 0;
  }
  .k-block--lg {
    padding: 11.7187em 0;
  }
  .k-inner--md {
    width: 80%;
  }
  .k-inner--xl .k-inner--md {
    width: 88.889%;
  }
}

@media (min-width: 1199px) {
  .k-block--md {
    padding: 11.7187em 0;
  }
  .k-block--lg {
    padding: 15.625em 0;
  }
  .k-inner--lg {
    width: 88%;
  }
  .k-inner--xl {
    width: 94.44%;
  }
  .k-inner--xl .k-inner--md {
    width: 84.711%;
  }
}

.fade {
  opacity: 0;
  transition: opacity 0.35s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.is-ie11 #k-backdrop {
  display: none;
}

body.cart-sidebar-open {
  height: 100vh;
  overflow: hidden;
  position: fixed;
}

#k-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #080907;
  z-index: -100;
  opacity: 0;
  transition: opacity 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
  pointer-events: none;
  -ms-user-select: none;
  user-select: none;
}

#k-backdrop.active {
  z-index: 100;
  opacity: 0.9;
  pointer-events: all;
}

img[data-src] {
  opacity: 0;
  transform: scale(1.1);
  transition: opacity 0.3s cubic-bezier(0.6, 0.04, 0.98, 0.335), transform 1s cubic-bezier(0.075, 0.82, 0.165, 1);
}

img[data-src].lazyload--complete {
  opacity: 1;
  transform: scale(1);
}

.k-blog-breadcrumb {
  display: none;
  text-align: right;
}

.k-blog-breadcrumb > .k-inner {
  border-bottom: 1px solid #ddd;
}

.k-blog-breadcrumb--content {
  padding: 1.5em 15% 1.5em 0;
}

.k-blog-breadcrumb ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.k-blog-breadcrumb li {
  display: inline-block;
  font-size: 85%;
}

.k-blog-breadcrumb a {
  color: #080907;
}

.k-blog-breadcrumb a:hover {
  color: #f4b13e;
}

.k-header--cart {
  position: relative;
}

#k-cartnum {
  position: absolute;
  top: 33%;
  left: 3em;
  line-height: 0;
  font-size: 75%;
  color: #fff;
  opacity: 0;
  transform: translate(-50%, 100%);
  transition: opacity 1s cubic-bezier(0.075, 0.82, 0.165, 1), transform 1s cubic-bezier(0.075, 0.82, 0.165, 1);
}

#k-cartnum.k-has-value {
  opacity: 1;
  transform: translate(-50%, 0);
}

#k-cartnum:after {
  display: block;
  content: '';
  position: absolute;
  top: 0%;
  left: 50%;
  width: 1.5em;
  height: 1.5em;
  background: #f4b13e;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  z-index: -1;
}

.k-figure {
  margin: 0;
  padding: 0;
  position: relative;
  overflow: hidden;
}

.k-figure--rounded {
  border-radius: 0.667em;
}

.k-figure--fpo {
  background: #f4b13e;
}

.k-figure--fpo:after {
  display: block;
  content: 'F P O';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  text-align: center;
  transform: translate(-50%, -50%);
  font-family: "Recoleta Regular", serif;
  font-size: 400%;
  color: #fff;
}

.k-figure--img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.koi-bg {
  position: absolute;
  z-index: -1;
  height: 100%;
  width: auto;
  max-width: 100%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.koi-bg path {
  fill: #e6e6e6;
}

.koi-svg {
  position: relative;
}

.koi-svg svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.has-play-button {
  position: relative;
}

.has-play-button:after {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: block;
  content: '';
  width: 0;
  height: 0;
  border-top: 0.67em solid transparent;
  border-bottom: 0.67em solid transparent;
  border-left: 1em solid #080907;
  pointer-events: none;
  -ms-user-select: none;
  user-select: none;
  z-index: 3;
}

.k-play-button {
  fill: #fff;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: transform 0.6s cubic-bezier(0.075, 0.82, 0.165, 1);
  width: 30%;
  max-width: 7.8125em;
}

.k-play-button:hover {
  cursor: pointer;
  transform: translate(-50%, -50%) rotate(360deg) scale(0.8, 0.8);
}

.k-goldstar {
  display: inline-block;
  width: 1em;
  position: relative;
}

.k-goldstar--liner {
  padding-bottom: 100%;
}

.k-goldstar svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.k-arrow {
  width: 1.5em;
  position: relative;
}

.k-arrow--liner {
  padding-bottom: 100%;
}

.k-arrow svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.k-arrow svg circle,
.k-arrow svg polyline,
.k-arrow svg line {
  stroke: #cccccc;
  transition: stroke 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-arrow:hover {
  cursor: pointer;
}

.k-arrow:hover svg circle,
.k-arrow:hover svg polyline,
.k-arrow:hover svg line {
  stroke: #222222;
}

@media (min-width: 767px) {
  #k-cartnum {
    top: -1.15em;
    left: 50%;
    right: auto;
  }
}

@media (min-width: 992px) {
  .k-blog-breadcrumb {
    display: block;
  }
}

form h3 {
  font-size: 2em;
}

form fieldset {
  margin: 0;
  padding: 0;
  border: 0;
}

form label,
form input,
form textarea,
form select {
  display: block;
  min-width: 100%;
  max-width: 100%;
}

form label {
  font-weight: 500;
}

form label abbr {
  color: red;
}

form input {
  appearance: none;
  background: 0;
  border: 0;
  border-bottom: 1px solid #ddd;
  border-radius: 0;
  padding: 1.5em 0 0.5em 0;
}

form textarea {
  min-height: 12.5em;
  resize: none;
  padding: 1em;
  margin-top: 1em;
}

form select {
  margin-top: 1em;
  appearance: none;
  background: none;
  border: none;
  border-bottom: 1px solid #dedede;
  border-radius: 0 !important;
}

form select::-ms-expand {
  display: none;
}

form abbr[title] {
  text-decoration: none;
}

form span.required {
  color: red;
}

form input[type='checkbox'],
form input[type='radio'] {
  position: absolute;
  opacity: 0;
}

form input[type='checkbox']:hover,
form input[type='radio']:hover {
  cursor: pointer !important;
}

form input[type='checkbox']:checked + label:before,
form input[type='radio']:checked + label:before {
  background: #f4b13e;
}

form input[type='checkbox'] + label,
form input[type='radio'] + label {
  display: inline-block;
  min-width: auto;
  position: relative;
  font-weight: 400;
  margin-left: 2em;
}

form input[type='checkbox'] + label:before,
form input[type='radio'] + label:before {
  display: block;
  content: '';
  position: absolute;
  top: 49%;
  left: -2em;
  width: 1em;
  height: 1em;
  border: 1px solid #ddd;
  background: #fff;
  transition: background 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  transform: translateY(-50%);
}

form input[type='checkbox'] + label:hover,
form input[type='radio'] + label:hover {
  cursor: pointer;
}

.k-form__radiobutton {
  position: relative;
}

.k-form__group {
  position: relative;
}

.k-form__fileupload {
  position: relative;
}

.k-input + label {
  -ms-user-select: none;
  user-select: none;
  pointer-events: none;
  transition: transform 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-input.has-value + label, .k-input:focus + label {
  transform: translateY(-100%);
}

.k-header {
  position: sticky;
  top: -2.75em;
  width: 100%;
  z-index: 101;
  background: #fff;
}

.k-header__skip-to-main {
  position: fixed;
  top: 0;
  left: 50%;
  transform: translate(-50%, -105%);
  z-index: 99;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  transition: background 1s cubic-bezier(0.075, 0.82, 0.165, 1), color 1s cubic-bezier(0.075, 0.82, 0.165, 1), border-color 1s cubic-bezier(0.075, 0.82, 0.165, 1), transform 0.35s cubic-bezier(0.075, 0.82, 0.165, 1) !important;
}

.k-header__skip-to-main--focused {
  transform: translate(-50%, 0);
}

.k-header .k-has-dropdown {
  position: relative;
}

.k-header .k-has-dropdown > a {
  position: relative;
}

.k-header .k-has-dropdown > a span {
  font-size: 50%;
  position: absolute;
  top: 50%;
  right: -2em;
  transform: translateY(-50%);
  color: #c0d8be;
}

.k-header .k-dropdown {
  height: 0;
  overflow: hidden;
  transition: height 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
  padding-left: 1em;
}

.k-header .k-dropdown--liner {
  padding: 1em 0;
}

.k-header .k-dropdown li {
  font-size: 80%;
  margin-right: 0;
  white-space: nowrap;
  display: block;
  margin-bottom: 1em;
}

.k-header--traveling {
  box-shadow: 0 0 3px -2px #222222;
}

.k-header.is-open {
  position: fixed;
}

.k-header.is-open .k-header--nav {
  transform: translateY(0);
}

.k-header.is-open .k-header--nav__content {
  border-bottom: 0.125em solid #f4b13e;
}

.k-header.is-open .k-header--navtoggle__line:first-child, .k-header.is-open .k-header--navtoggle__line:last-child {
  top: 50%;
}

.k-header.is-open .k-header--navtoggle__line:nth-child(2) {
  opacity: 0;
}

.k-header.is-open .k-header--navtoggle__line:first-child {
  transform: translateY(-50%) rotate(45deg);
}

.k-header.is-open .k-header--navtoggle__line:last-child {
  transform: translateY(-50%) rotate(-45deg);
}

.k-header--top {
  background: #080907;
  color: #fff;
  text-align: right;
}

.k-header--top .k-inner {
  padding: 0.25em 0;
}

.k-header--top span {
  font-size: 70%;
}

.k-header__newsletter-signup {
  display: none;
  background: #080907;
}

.k-header__newsletter-signup form {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-pack: center;
  justify-content: center;
  text-align: right;
  margin-bottom: 0;
  padding-bottom: 1em;
}

.k-header__newsletter-signup fieldset {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  padding: 1em 0;
  display: inline-block;
  text-align: left;
}

.k-header__newsletter-signup input {
  font-style: 140%;
  display: inline-block;
  vertical-align: middle;
  color: #fff;
}

.k-header__newsletter-signup button {
  display: inline-block;
}

.k-header__newsletter-trigger {
  cursor: pointer;
  transition: color 0.3s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-header__newsletter-trigger:hover {
  color: #f4b13e;
}

.k-header__newsletter-label {
  color: #fff;
}

.k-header--main {
  background: #fff;
}

.k-header--main .k-inner {
  padding: 0.5em 0;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-align: center;
  align-items: center;
  background: #fff;
}

.k-header--logo {
  width: 3.5em;
  transition: transform 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-header--logo img {
  display: block;
  max-width: 100%;
}

.k-header--nav {
  position: absolute;
  width: 100%;
  transition: transform 1s cubic-bezier(0.075, 0.82, 0.165, 1);
  transform: translateY(-150%);
  z-index: -1;
  background: #fff;
}

.k-header--nav__content {
  padding: 2em 5% 2em 5%;
}

.k-header--nav ul {
  padding: 0;
  margin: 0;
  list-style-type: none;
}

.k-header--nav li {
  margin-bottom: 0.5em;
}

.k-header--nav a {
  color: #080907;
}

.k-header--nav .k-dropdown--liner a {
  font-size: 1rem;
}

.k-header--navtoggle {
  width: 2em;
  height: 1.5em;
  position: relative;
}

.k-header--navtoggle__line {
  position: absolute;
  height: 2px;
  width: 100%;
  background: #080907;
  transform: translateY(-50%);
  transition: transform 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-header--navtoggle__line:nth-child(2) {
  top: 50%;
  transition: opacity 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-header--navtoggle__line:nth-child(3) {
  top: 100%;
}

@media (min-width: 767px) {
  .k-header--traveling .k-header--logo {
    transform: scale(0.7);
  }
  .k-header .k-has-dropdown > a span {
    display: none;
  }
  .k-header .k-dropdown {
    position: absolute;
    width: auto;
    top: 7.5em;
    z-index: 102;
    padding-left: 0;
  }
  .k-header .k-dropdown li {
    font-size: 100%;
    margin-bottom: 1.25em;
    line-height: 1;
  }
  .k-header .k-dropdown a {
    color: #fff;
  }
  .k-header--top .k-inner {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    padding: 0.75em 0;
  }
  .k-header__newsletter-signup form {
    -ms-flex-direction: row;
    flex-direction: row;
    -ms-flex-align: center;
    align-items: center;
    -ms-flex-pack: end;
    justify-content: flex-end;
    padding-bottom: 0;
  }
  .k-header__newsletter-signup form fieldset {
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
    padding: 1em 0.5em;
  }
  .k-header--main {
    position: relative;
  }
  .k-header--logo {
    width: 6.25em;
  }
  .k-header--nav {
    z-index: 2;
    width: 88.889%;
    top: 50%;
    left: 5.55%;
    transform: translateY(-50%);
    text-align: left;
    background: transparent;
    pointer-events: none;
  }
  .k-header--nav__content {
    padding: 0;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: end;
    justify-content: flex-end;
  }
  .k-header--nav ul {
    padding: 0;
  }
  .k-header--nav ul li:first-child {
    margin-left: 0;
  }
  .k-header--nav li {
    display: inline-block;
    margin-bottom: 0;
    margin-right: 0.75em;
    pointer-events: all;
  }
  .k-header--nav a {
    font-size: 90%;
  }
  .k-header--navtoggle {
    display: none;
  }
}

@media (min-width: 992px) {
  .k-header--main .k-inner {
    padding: 0;
  }
  .k-header--logo {
    margin: auto;
    transform: translateY(-1.125em);
  }
  .k-header--nav__content {
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
  .k-header--nav ul li:last-child {
    margin-right: 0;
  }
  .k-header--nav li {
    display: inline-block;
    margin-right: 1em;
  }
  .k-header--nav a {
    font-size: 110%;
  }
}

@media (min-width: 1199px) {
  .k-header--nav {
    width: 94.44%;
    left: 2.78%;
  }
}

.k-footer {
  position: relative;
}

.k-footer--top .k-inner {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.k-footer--bottom .k-inner {
  padding: 2em 0;
  border-top: 1px solid #cccccc;
}

.k-footer--bgimg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  z-index: -1;
}

.k-footer--logo {
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
}

.k-footer--logo .k-figure {
  margin-bottom: 1em;
  max-width: 8.75em;
}

.k-footer--logo .k-figure--liner {
  padding-bottom: 110.42%;
}

.k-footer--social a {
  display: block;
}

.k-footer--links {
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
  text-align: right;
}

.k-footer--links__item {
  margin-bottom: 1em;
}

.k-footer--links h4 {
  font-family: "GT America", sans-serif;
  margin: 0 0 1em 0;
}

.k-footer--links ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.k-footer--badges {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  -ms-flex-align: start;
  align-items: flex-start;
}

.k-footer--badges img {
  -ms-flex-preferred-size: 33%;
  flex-basis: 33%;
  max-width: 6.25em;
}

.k-footer--disclaimer p {
  font-size: 65%;
}

@media (min-width: 767px) {
  .k-footer--links {
    text-align: left;
  }
  .k-footer--badges {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
    margin-top: -10em;
  }
}

@media (min-width: 992px) {
  .k-footer--top .k-inner {
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
  .k-footer--bottom .k-inner {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
  .k-footer--bottom .k-footer--copy {
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
  }
  .k-footer--bottom .k-footer--disclaimer {
    -ms-flex-preferred-size: 75%;
    flex-basis: 75%;
  }
  .k-footer--logo {
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
  }
  .k-footer--links {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
  .k-footer--links__item {
    -ms-flex-preferred-size: 31%;
    flex-basis: 31%;
  }
  .k-footer--badges {
    -ms-flex-preferred-size: 20%;
    flex-basis: 20%;
    margin-top: 0;
  }
  .k-footer--copy,
  .k-footer--disclaimer p {
    font-size: 80%;
  }
}

.k-hero {
  position: relative;
}

.k-hero h1, .k-hero h2, .k-hero h3, .k-hero h4, .k-hero h5, .k-hero h6,
.k-hero p {
  color: #080907;
}

.k-hero--loaded h1, .k-hero--loaded h2, .k-hero--loaded h3, .k-hero--loaded h4, .k-hero--loaded h5, .k-hero--loaded h6,
.k-hero--loaded p {
  color: #fff;
}

.k-hero--bgimg {
  opacity: 0;
  transition: opacity 1s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-hero--bgimg.lazyload--complete {
  opacity: 1;
}

.k-hero--default .k-inner {
  padding: 5.8595em 0;
}

.k-hero--default .k-hero--text {
  padding-bottom: 4em;
}

.k-hero--default .k-hero--text h1,
.k-hero--default .k-hero--text h2 {
  margin: 0;
}

.k-hero--on-dark {
  color: #fff;
}

.k-hero--bgimg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  z-index: -1;
}

.k-hero--bigtext {
  margin-top: 1em;
}

.k-hero--bigtext h1,
.k-hero--bigtext .k-headline--fake {
  font-size: 120%;
}

.k-hero--action .k-button:last-child {
  margin-top: 1em;
}

@media (min-width: 767px) {
  .k-hero--action {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
    justify-content: center;
    -ms-flex-align: center;
    align-items: center;
  }
  .k-hero--action .k-button {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
    margin-right: 0.5em;
  }
  .k-hero--action .k-button:last-child {
    margin: 0;
    margin-left: 0.5em;
  }
}

@media (min-width: 992px) {
  .k-hero--center {
    text-align: center;
  }
  .k-hero--default .k-hero--text h1 {
    width: 50%;
    max-width: 34.375em;
    margin: auto;
  }
  .k-hero--action .k-button {
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
  }
  .k-hero--bigtext {
    margin-top: 2em;
  }
  .k-hero--bigtext h1,
  .k-hero--bigtext .k-headline--fake {
    font-size: 155%;
  }
}

@media (min-width: 1199px) {
  .k-hero--default .k-inner {
    padding: 7.8125em 0;
  }
}

@media (min-width: 1440px) {
  .k-hero--default .k-inner {
    padding: 15em 0 13em 0;
  }
}

.k-hero--productlisting .k-hero--content {
  padding: 7.8125em 0;
}

.k-hero--productlisting .k-hero--content * {
  margin: 0;
}

.k-hero--productlisting .k-hero--content .k-headline {
  margin: 0.25em 0 1em 0;
}

.k-hero--productlisting .k-hero--content .k-rte-content {
  font-size: 125%;
}

.k-hero--productlisting .k-hero--preheading {
  color: #c0d8be;
}

@media (min-width: 767px) {
  .k-hero--productlisting .k-hero--content {
    max-width: 50%;
  }
}

@media (min-width: 1199px) {
  .k-hero--productlisting .k-hero--content {
    padding: 15.625em 0 7.8125em 0;
  }
}

.k-hero--blogsingle {
  position: relative;
}

.k-hero--blogsingle:before {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: block;
  content: '';
  background: #080907;
  opacity: 0.25;
}

.k-hero--blogsingle > .k-inner {
  position: relative;
  z-index: 2;
}

.k-hero--blogsingle .k-hero--main {
  padding: 7.8125em 0;
}

.k-hero--blogsingle .k-hero--main * {
  margin: 0;
}

.k-hero--blogsingle .k-hero--title .k-headline {
  margin: 1em 0;
}

@media (min-width: 992px) {
  .k-hero--blogsingle .k-hero--main {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-align: end;
    align-items: flex-end;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    padding: 11.7187em 0 5.8595em;
  }
  .k-hero--blogsingle .k-hero--meta, .k-hero--blogsingle .k-hero--title {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
  }
  .k-hero--blogsingle .k-hero--meta span,
  .k-hero--blogsingle .k-hero--meta p, .k-hero--blogsingle .k-hero--title span,
  .k-hero--blogsingle .k-hero--title p {
    font-size: 125%;
  }
  .k-hero--blogsingle .k-hero--title {
    padding-right: 15%;
  }
  .k-hero--blogsingle .k-hero--title .k-headline {
    margin-top: 0;
  }
}

@media (min-width: 1199px) {
  .k-hero--blogsingle .k-hero--main {
    padding: 15.625em 0 5.8595em;
  }
}

.k-hero--contact .k-hero--main {
  padding: 7.8125em 0;
}

.k-hero--contact .k-hero--main * {
  margin: 0;
}

.k-hero--contact .k-hero--title .k-headline {
  margin: 1em 0;
}

.k-hero--contact .k-preheading {
  color: #c0d8be;
}

@media (min-width: 992px) {
  .k-hero--contact .k-hero--main {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: start;
    justify-content: flex-start;
    -ms-flex-align: end;
    align-items: flex-end;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    padding: 11.7187em 0 5.8595em;
  }
  .k-hero--contact .k-hero--title {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
    margin-right: 3%;
  }
  .k-hero--contact .k-hero--title .k-headline {
    margin: 0.5em 0 0 0;
    line-height: 0.9;
  }
  .k-hero--contact .k-hero--body {
    font-size: 115%;
    -ms-flex-preferred-size: 35%;
    flex-basis: 35%;
  }
}

@media (min-width: 1199px) {
  .k-hero--contact .k-hero--main {
    padding: 15.625em 0 5.8595em;
  }
  .k-hero--contact .k-hero--body {
    max-width: 22em;
  }
}

.k-button {
  appearance: none;
  display: block;
  color: #fff;
  padding: 1.25em 1.15em;
  border-radius: 0.4em;
  text-align: center;
  border: 1px solid;
  transition: background 1s cubic-bezier(0.075, 0.82, 0.165, 1), color 1s cubic-bezier(0.075, 0.82, 0.165, 1), border-color 1s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-button:hover {
  cursor: pointer;
  background: #fff;
  color: #f4b13e;
}

.k-button--primary {
  background: #f4b13e;
  border-color: #f4b13e;
}

.k-button--secondary {
  background: transparent;
}

.k-button--secondary.on-light {
  border-color: #ccc;
  color: #ccc;
}

.k-button--default {
  background: #fff;
  color: #f4b13e;
  border-color: #cccccc;
}

.k-button--default:hover {
  background: #f4b13e;
  color: #fff;
}

.k-button--dark {
  background: #222222;
  border-color: #222222;
}

.k-button--dark:hover {
  color: #f4b13e;
  border-color: #f4b13e;
  background: #222222;
}

@media (min-width: 580px) {
  .k-button {
    padding: 1.25em 2em;
    display: inline-block;
  }
}

.k-productcard .k-figure {
  width: 80%;
  margin: auto;
}

.k-productcard .k-figure--liner {
  padding-bottom: 100%;
}

.k-productcard--liner {
  position: relative;
}

.k-productcard--wideimg .k-figure {
  width: 100%;
  border-radius: 0.33em;
}

.k-productcard--wideimg .k-figure--liner {
  padding-bottom: 65.2%;
}

.k-productcard--title {
  text-align: center;
  margin-top: 1em;
}

.k-productcard--title h3 {
  margin: 0;
  font-size: 120%;
}

.k-productcard--title h3 a {
  color: #080907;
}

.k-productcard--title h3 a:hover {
  color: #f4b13e !important;
}

.k-productcard--title p {
  margin-top: 0;
}

.k-productcard--action {
  margin-top: 2em;
}

.k-productcard--action .k-button {
  display: block;
}

.k-productcard--action .k-button:hover {
  color: #fff !important;
}

.k-productcard--reviews {
  position: absolute;
  width: 100%;
}

.k-productcard--reviews .k-accent-text {
  font-size: 80%;
}

.k-productcard--reviews ul {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.k-productcard--reviews li {
  display: inline-block;
}

.k-productcard--reviews svg {
  width: 1em;
}

.k-productcard:hover h3 > a {
  color: #f4b13e;
}

.k-productcard:hover .k-button {
  color: white;
  background: #f4b13e;
}

.k-articlecard * {
  margin: 0;
}

.k-articlecard .k-figure {
  margin-bottom: 1em;
  border-radius: 0.33em;
  transition: box-shadow 1s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.k-articlecard .k-figure--liner {
  padding-bottom: 65.2%;
}

.k-articlecard .k-figure img {
  transition: transform 2s cubic-bezier(0.075, 0.82, 0.165, 1);
  object-fit: cover;
}

.k-articlecard .k-figure:hover {
  box-shadow: 0 0 15px 2px #ddd;
}

.k-articlecard .k-figure:hover img {
  transform: scale(1.1);
}

.k-articlecard--meta {
  margin-bottom: 1.5em;
}

.k-articlecard--meta span {
  font-size: 80%;
}

.k-articlecard--title {
  margin-bottom: 1.5em;
}

.k-articlecard--title a {
  color: #080907;
}

.k-articlecard--title a:hover {
  color: #f4b13e !important;
}

.k-articlecard--excerpt {
  margin-bottom: 1.5em;
}

.k-promoslider > .k-inner {
  position: relative;
}

.k-promoslider--titlerow {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 2em;
}

.k-promoslider--titlerow * {
  margin: 0;
}

.k-promoslider--titlerow a {
  color: #080907;
}

.k-promoslider--titlerow__item:nth-child(1), .k-promoslider--titlerow__item:nth-child(3) {
  -ms-flex-order: 1;
  order: 1;
  margin-bottom: 1em;
}

.k-promoslider--titlerow__item:nth-child(2) {
  -ms-flex-order: 2;
  order: 2;
}

.k-promoslider__controls {
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%;
  z-index: 5;
  pointer-events: none;
}

.k-promoslider__controls svg {
  pointer-events: all;
  fill: transparent;
  stroke: #f4b13e;
}

.k-promoslider__controls svg:last-child {
  float: right;
}

.k-promoslider__controls svg:hover {
  cursor: pointer;
}

.k-promoslider .k-productcard {
  width: 100%;
  padding-bottom: 2em;
  bottom: 0 !important;
}

.k-promoslider .k-productcard--liner {
  padding-right: 1.5em;
}

@media (min-width: 580px) {
  .k-promoslider--titlerow {
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    text-align: center;
  }
  .k-promoslider--titlerow span,
  .k-promoslider--titlerow a {
    font-size: 80%;
  }
  .k-promoslider--titlerow__item:nth-child(1), .k-promoslider--titlerow__item:nth-child(2), .k-promoslider--titlerow__item:nth-child(3) {
    -ms-flex-order: 1;
    order: 1;
    margin-bottom: 0;
  }
  .k-promoslider--titlerow__item:nth-child(1), .k-promoslider--titlerow__item:nth-child(2) {
    -ms-flex-preferred-size: 15%;
    flex-basis: 15%;
  }
  .k-promoslider--titlerow__item:nth-child(2) {
    -ms-flex-preferred-size: 60%;
    flex-basis: 60%;
  }
}

@media (min-width: 767px) {
  .k-promoslider .k-productcard {
    width: 50%;
  }
  .k-promoslider__controls {
    left: -5%;
    width: 110%;
  }
}

@media (min-width: 992px) {
  .k-promoslider--titlerow {
    margin-bottom: 4em;
  }
  .k-promoslider .k-productcard {
    width: 33.3333%;
  }
}

@media (min-width: 1199px) {
  .k-promoslider--titlerow {
    margin-bottom: 7.8125em;
    -ms-flex-align: end;
    align-items: flex-end;
  }
  .k-promoslider--titlerow span,
  .k-promoslider--titlerow a {
    font-size: 100%;
  }
  .k-promoslider--titlerow__item:nth-child(1), .k-promoslider--titlerow__item:nth-child(2) {
    -ms-flex-preferred-size: 10%;
    flex-basis: 10%;
  }
  .k-promoslider--titlerow__item:nth-child(2) {
    -ms-flex-preferred-size: 70%;
    flex-basis: 70%;
  }
  .k-promoslider .k-productcard {
    width: 25%;
  }
  .k-promoslider__controls {
    width: 115%;
    left: -7.5%;
  }
}

.k-testimonialslider--slide {
  text-align: center;
  width: 100%;
  margin-right: 2em;
}

.k-testimonialslider--slide .k-figure {
  max-width: 8.05em;
  margin: auto;
}

.k-testimonialslider--slide .k-figure--liner {
  padding-bottom: 100%;
}

.k-testimonialslider--cite {
  margin-bottom: 0;
}

.k-testimonialslider .flickity-page-dots {
  bottom: -4em;
}

.k-ctabanner {
  position: relative;
}

.k-ctabanner .k-inner--xl {
  position: relative;
  border-radius: 0.75em;
  overflow: hidden;
}

.k-ctabanner .k-inner--xl:before {
  display: block;
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #080907;
  opacity: 0.33;
  z-index: -1;
  pointer-events: none;
  -ms-user-select: none;
  user-select: none;
}

.k-ctabanner--bgimg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  z-index: -2;
}

.k-ctabanner--content {
  color: #fff;
  max-width: 40em;
}

.k-ctabanner--content .k-inner {
  -ms-flex-pack: center;
  justify-content: center;
}

.k-ctabanner--content .k-preheading {
  color: #c0d8be;
}

.k-ctabanner--takeover .k-button {
  margin-bottom: 1em;
}

.k-ctabanner--takeover .k-button:last-child {
  margin-bottom: 0;
}

.k-cta--subscribe {
  margin: 5em 0 8em 0;
}

.k-cta--subscribe .k-inner {
  background: #080907;
  border-radius: 0.75em;
}

.k-cta--subscribe .k-cta--preheading {
  color: #c0d8be;
}

@media (min-width: 580px) {
  .k-ctabanner--takeover .k-button {
    display: block;
  }
}

@media (min-width: 767px) {
  .k-ctabanner .k-inner--xl:before {
    display: none;
  }
  .k-ctabanner--takeover {
    text-align: center;
  }
  .k-ctabanner--takeover .k-ctabanner--bgimg {
    background-position: bottom center;
  }
  .k-ctabanner--takeover .k-ctabanner--content {
    width: 90%;
    max-width: 54em;
    margin: auto;
    padding: 15.625em 0 7.8125em 0;
  }
  .k-ctabanner--takeover .k-button {
    display: inline-block;
    margin-bottom: 0;
  }
  .k-ctabanner--takeover .k-button:last-child {
    margin-left: 0.5em;
  }
  .k-cta--subscribe {
    text-align: center;
  }
  .k-cta--subscribe--headline {
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
  }
  .k-cta--subscribe .k-cta--content {
    width: 100%;
  }
  .k-cta--subscribe .k-cta--preheading,
  .k-cta--subscribe .k-headline,
  .k-cta--subscribe .k-button {
    margin: auto;
  }
  .k-cta--subscribe .k-cta--preheading {
    width: 100%;
    text-align: center;
    margin-bottom: 1em;
  }
  .k-cta--subscribe .k-headline {
    margin-bottom: 1em;
    max-width: 75%;
  }
}

@media (min-width: 992px) {
  .k-cta--subscribe .k-headline {
    margin-bottom: 1em;
    max-width: 50%;
  }
}

@media (min-width: 1199px) {
  .k-ctabanner--takeover .k-ctabanner--content {
    width: 70%;
  }
}

@media (min-width: 1440px) {
  .k-ctabanner--takeover .k-ctabanner--content {
    padding: 25em 0 12em 0;
  }
}

/*
* Note: this module was originally for displaying videos, but is no longer the case.
* It's a little tricky to rename the classes at this point, so the filename has updated,
* but not any of the CSS classes.
*/
.k-videogallery .plyr {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
}

.k-videogallery .k-play-button {
  z-index: 3;
}

.k-videogallery.video-playing .k-videogallery--video .k-figure {
  opacity: 0;
}

.k-videogallery.video-playing .k-videogallery--video:after {
  opacity: 0 !important;
}

.k-videogallery.video-playing .k-play-button {
  opacity: 0;
  display: none;
}

.k-videogallery > .k-inner {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
}

.k-videogallery--item {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  margin-bottom: 2em;
}

.k-videogallery--title {
  -ms-flex-order: 1;
  order: 1;
}

.k-videogallery--title .k-headline {
  margin-top: 0;
}

.k-videogallery--video {
  -ms-flex-order: 2;
  order: 2;
  position: relative;
  border-radius: 0.667em;
  overflow: hidden;
}

.k-videogallery--video .k-figure {
  z-index: 2;
}

.k-videogallery--video .k-figure--liner {
  padding-bottom: 62.5%;
}

.k-videogallery--actions {
  -ms-flex-order: 1;
  order: 1;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 0;
}

.k-videogallery--actions__item {
  -ms-flex-preferred-size: 16.67%;
  flex-basis: 16.67%;
  height: 4em;
  border-left: 1px solid #f2f2f2;
  border-top: 1px solid #f2f2f2;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  color: #080907;
  line-height: 1.4;
}

.k-videogallery--actions__item * {
  pointer-events: none;
}

.k-videogallery--actions__item:hover {
  color: #f4b13e;
}

.k-videogallery--actions__item:hover .k-videogallery--actions__icon:before {
  background: #c0d8be;
  transform: translate(-50%, -50%) scale(1.25);
}

.k-videogallery--actions__item:last-child {
  border-right: 1px solid #f2f2f2;
}

.k-videogallery--actions__item.active .k-videogallery--actions__icon:before {
  background: #c0d8be;
  transform: translate(-50%, -50%) scale(1.25);
}

.k-videogallery--actions__icon {
  position: relative;
  margin: auto;
  max-width: 1em;
}

.k-videogallery--actions__icon .koi-svg {
  width: 1em;
}

.k-videogallery--actions__icon:before {
  display: block;
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 2.5em;
  height: 2.5em;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  background: #f2f2f2;
  transition: transform 1s cubic-bezier(0.075, 0.82, 0.165, 1), background 1s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-videogallery--actions__icon path {
  fill: #080907;
}

.k-videogallery--actions__title {
  display: none;
}

.k-videogallery--description {
  -ms-flex-order: 2;
  order: 2;
}

.k-videogallery--description p {
  margin: 0 0 2em 0;
}

@media (min-width: 1199px) {
  .k-videogallery > .k-inner {
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-align: start;
    align-items: flex-start;
  }
  .k-videogallery--item {
    -ms-flex-preferred-size: 48.5%;
    flex-basis: 48.5%;
    -ms-flex-order: 1;
    order: 1;
  }
  .k-videogallery--title, .k-videogallery--video {
    margin-bottom: 5.8595em;
  }
  .k-videogallery--actions {
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
  }
  .k-videogallery--actions__item {
    border: 0;
    height: auto;
    -ms-flex-preferred-size: 48.5%;
    flex-basis: 48.5%;
    position: relative;
    margin-bottom: 4em;
  }
  .k-videogallery--actions__item.active .k-videogallery--actions__icon:before {
    background: #c0d8be;
    transform: translateY(-50%) scale(1.5);
  }
  .k-videogallery--actions__item:hover .k-videogallery--actions__icon:before {
    transform: translateY(-50%) scale(1.5);
  }
  .k-videogallery--actions__icon {
    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
  }
  .k-videogallery--actions__icon .koi-svg {
    width: 2.5em;
    margin-right: 0;
  }
  .k-videogallery--actions__icon:before {
    left: 0;
    transform: translateY(-50%);
  }
  .k-videogallery--actions__title {
    display: block;
    margin-left: 4em;
  }
  .k-videogallery--actions__title p {
    margin: 0;
  }
  .k-videogallery--description {
    position: relative;
  }
  .k-videogallery--description:before {
    display: block;
    content: '';
    position: absolute;
    top: -3em;
    left: 0;
    width: 50%;
    height: 1px;
    background: #c0d8be;
  }
}

@media (min-width: 1440px) {
  .k-videogallery--title, .k-videogallery--video {
    margin-bottom: 7.8125em;
  }
  .k-videogallery--title {
    -ms-flex-preferred-size: 35%;
    flex-basis: 35%;
  }
  .k-videogallery--video, .k-videogallery--description {
    -ms-flex-preferred-size: 45%;
    flex-basis: 45%;
  }
  .k-videogallery--description:before {
    top: -3em;
    width: 42.5%;
  }
}

.k-videogallery.video-playing .k-videogallery--video .k-figure {
  pointer-events: none;
}

.k-producthero .k-inner--xl {
  background: #f2f2f2;
  border-radius: 0.5em;
}

.k-producthero--bundle .k-productform--price {
  text-align: left;
  padding-left: 2em;
}

.k-producthero--gallery {
  padding-top: 2em;
}

.k-producthero--slide {
  width: 100%;
}

.k-producthero--slide .k-figure {
  width: 80%;
  margin: auto;
}

.k-producthero--slide .k-figure--liner {
  padding-bottom: 100%;
}

.k-producthero--reviews p,
.k-producthero--reviews div {
  display: inline-block;
}

.k-producthero--reviews a {
  color: #f4b13e;
}

.k-producthero--reviews a:hover {
  color: #d98e0c !important;
}

.k-producthero--details__content {
  padding: 2em 1em;
}

.k-producthero__controls {
  position: absolute;
  pointer-events: none;
  width: 95%;
  top: 50%;
  left: 2.5%;
  transform: translateY(-50%);
  z-index: 9;
}

.k-producthero__controls svg {
  pointer-events: all;
  stroke: #cccccc;
  fill: transparent;
}

.k-producthero__controls svg:nth-child(2) {
  float: right;
}

.k-producthero__controls svg:hover {
  stroke: #f4b13e;
  cursor: pointer;
}

.k-productform button[disabled] {
  background: transparent;
  color: #080907;
}

.k-productform button[disabled]:hover {
  cursor: default;
}

.k-productform--liner {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-align: center;
  align-items: center;
}

.k-productform--bundle .k-productform--bundleselect {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.k-productform--bundle .k-productform--submit, .k-productform--bundle .k-productform--price {
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
}

.k-productform--bundle .k-productform--price {
  -ms-flex-order: 2;
  order: 2;
}

.k-productform--heading {
  margin-bottom: 0.5em;
}

.k-productform--variants {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.k-productform--variants input[type='radio'] {
  position: absolute;
  visibility: hidden;
}

.k-productform--variants input[type='radio'] + label {
  position: relative;
  display: block;
  border: 1px solid #ccc;
  border-radius: 0.25em;
  color: #ccc;
  text-align: center;
  padding: 0.667em 1.15em;
  transition: color 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  overflow: hidden;
}

.k-productform--variants input[type='radio'] + label:hover {
  cursor: pointer;
}

.k-productform--variants input[type='radio'] + label span {
  position: relative;
  z-index: 2;
  pointer-events: none;
}

.k-productform--variants input[type='radio'] + label:after {
  display: block;
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #222222;
  transition: transform 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  transform: scale(1, 0);
  transform-origin: bottom center;
  pointer-events: none;
  -ms-user-select: none;
  user-select: none;
}

.k-productform--variants input[type='radio'].selected + label, .k-productform--variants input[type='radio']:checked + label {
  color: #fff;
}

.k-productform--variants input[type='radio'].selected + label:after, .k-productform--variants input[type='radio']:checked + label:after {
  transition: transform 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
  transform: scale(1, 1);
  transform-origin: top center;
}

.k-productform--variantselect {
  position: relative;
  display: block;
  margin-bottom: 0.5em;
}

.k-productform--variantselect label {
  margin-left: 0 !important;
}

.k-productform--variantselect.k-out-of-stock, .k-productform--variantselect.has-quantity {
  margin-top: 1.5em;
}

.k-productform--variantselect.k-out-of-stock .k-productform--varianttoggle, .k-productform--variantselect.has-quantity .k-productform--varianttoggle {
  padding-top: 1em;
}

.k-productform--variantselect.k-out-of-stock {
  pointer-events: none;
}

.k-productform--variantselect:hover {
  cursor: pointer;
}

.k-productform--variantselect .k-badge {
  position: absolute;
  z-index: 2;
  color: #fff;
}

.k-productform--variantselect .k-badge--liner {
  position: relative;
  padding: 0.25em 1em;
}

.k-productform--variantselect .k-badge--quantity {
  top: -1em;
  right: -0.5em;
}

.k-productform--variantselect .k-badge--quantity .k-badge--liner {
  width: 2em;
  height: 2em;
  background: #f4b13e;
  border-radius: 50%;
}

.k-productform--variantselect .k-badge--quantity span {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.k-productform--variantselect .k-badge--outofstock {
  top: -0.85em;
  z-index: 1;
  left: 50%;
  width: 100%;
  transform: translateX(-50%);
}

.k-productform--variantselect .k-badge--outofstock .k-badge--liner {
  background: #c0d8be;
  font-size: 75%;
  border-radius: 0.25em;
}

.k-productform--quantity, .k-productform--price {
  display: inline-block;
  width: 48.5%;
}

.k-productform--quantity {
  position: relative;
  margin-top: 0.5em;
}

.k-productform--quantity input[type='number'] {
  appearance: none;
  width: 100%;
  text-align: center;
  font-weight: 500;
  font-weight: 500;
  padding: 1.25em 3em;
  border: 1px solid #222222;
  border-radius: 0.25em;
  box-shadow: none;
  background: #fff;
  outline: none;
}

.k-productform--quantity #k-reduce, .k-productform--quantity .k-cart-sidebar__item-actions .k-reduce, .k-cart-sidebar__item-actions .k-productform--quantity .k-reduce,
.k-productform--quantity #k-increase,
.k-productform--quantity .k-cart-sidebar__item-actions .k-increase,
.k-cart-sidebar__item-actions .k-productform--quantity .k-increase {
  position: absolute;
  top: 50%;
  left: 0.5em;
  transform: translateY(-50%);
  appearance: none;
  background: none;
  border: none;
  font-weight: 500;
}

.k-productform--quantity #k-reduce:hover, .k-productform--quantity .k-cart-sidebar__item-actions .k-reduce:hover, .k-cart-sidebar__item-actions .k-productform--quantity .k-reduce:hover,
.k-productform--quantity #k-increase:hover,
.k-productform--quantity .k-cart-sidebar__item-actions .k-increase:hover,
.k-cart-sidebar__item-actions .k-productform--quantity .k-increase:hover {
  cursor: pointer;
}


.k-productform--quantity #k-increase,
.k-productform--quantity .k-cart-sidebar__item-actions .k-increase,
.k-cart-sidebar__item-actions .k-productform--quantity .k-increase {
  right: 0.5em;
  left: auto;
}

.k-productform--price {
  text-align: right;
  position: relative;
}

.k-productform--price p {
  margin: 0;
  font-size: 2em;
}

.k-productform--price #k-bundle-price-prefix,
.k-productform--price sup {
  font-size: 50%;
  color: #f4b13e;
}

.k-productform--price #k-bundle-price-prefix {
  margin-bottom: -1em;
  display: block;
}

.k-productform--price sup {
  padding-left: 1em;
  vertical-align: text-top;
  margin-top: 1.33em;
  display: inline-block;
}

.k-productform--submit {
  -ms-flex-order: 2;
  order: 2;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  margin-top: 1em;
}

.k-productform--submit .k-button {
  width: 100%;
}

.k-productform--bundleselect__item {
  position: relative;
  margin-bottom: 1em;
}

.k-productform--bundleselect__item input,
.k-productform--bundleselect__item label {
  display: inline-block;
  min-width: auto;
}

.k-productform--bundleselect__item input:hover,
.k-productform--bundleselect__item label:hover {
  cursor: pointer;
}

.k-productform--bundleselect__item input {
  margin-right: 1em;
}

.k-productform--bundleselect__item:last-child {
  margin-bottom: 0;
}

.k-productform--bundleselect__item--drawer {
  height: 0;
  overflow: hidden;
  transition: height 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-productform--bundleselect__item--drawer .k-productform--bundleselect__variant {
  margin-bottom: 0.5em;
}

.k-productform--bundleselect__item--drawer .k-productform--bundleselect__variant:last-child {
  margin-bottom: 0;
}

.k-productform--bundleselect input[type='radio'] {
  position: absolute;
  visibility: hidden;
}

.k-productform--bundleselect input[type='radio'] + label {
  position: relative;
  display: block;
  border: 1px solid #ccc;
  border-radius: 0.25em;
  color: #ccc;
  text-align: center;
  padding: 0.667em 1.15em;
  transition: color 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  overflow: hidden;
}

.k-productform--bundleselect input[type='radio'] + label:hover {
  cursor: pointer;
}

.k-productform--bundleselect input[type='radio'] + label span {
  position: relative;
  z-index: 2;
  pointer-events: none;
}

.k-productform--bundleselect input[type='radio'] + label:after {
  display: block;
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #222222;
  transition: transform 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  transform: scale(1, 0);
  transform-origin: bottom center;
  pointer-events: none;
  -ms-user-select: none;
  user-select: none;
}

.k-productform--bundleselect input[type='radio'].selected + label, .k-productform--bundleselect input[type='radio']:checked + label {
  color: #fff;
}

.k-productform--bundleselect input[type='radio'].selected + label:after, .k-productform--bundleselect input[type='radio']:checked + label:after {
  transition: transform 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
  transform: scale(1, 1);
  transform-origin: top center;
}

@media (min-width: 580px) {
  .k-producthero--details__content {
    padding: 2em;
  }
  .k-productform--item {
    -ms-flex-order: 1 !important;
    order: 1 !important;
  }
  .k-productform--quantity, .k-productform--price, .k-productform--submit {
    margin-top: 0.5em;
  }
  .k-productform--quantity, .k-productform--price {
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
  }
  .k-productform--submit {
    -ms-flex-preferred-size: 40%;
    flex-basis: 40%;
  }
  .k-productform--bundleselect__item--flex {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
    padding: 1em 0;
  }
  .k-productform--bundleselect__item--flex .k-productform--bundleselect__variant {
    -ms-flex-preferred-size: 48.5%;
    flex-basis: 48.5%;
  }
}

@media (min-width: 767px) {
  .k-productform--variants {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
  .k-productform--variantselect {
    -ms-flex-preferred-size: 48.5%;
    flex-basis: 48.5%;
  }
  .k-productform--quantity, .k-productform--submit, .k-productform--price {
    margin-top: 2em;
  }
  .k-productform--quantity {
    -ms-flex-preferred-size: 15%;
    flex-basis: 15%;
    margin-right: 10%;
  }
  .k-productform--submit {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
  }
  .k-productform--quantity input[type='number'] {
    padding: 1.25em 0;
  }
}

@media (min-width: 992px) {
  .k-producthero .k-inner {
    padding: 4em 5%;
  }
  .k-producthero .k-inner:before, .k-producthero .k-inner:after {
    display: table;
    content: '';
    clear: both;
  }
  .k-producthero--gallery, .k-producthero--details {
    float: left;
  }
  .k-producthero--gallery {
    width: 40%;
    margin-right: 5%;
    padding: 0;
  }
  .k-producthero--details {
    width: 50%;
  }
  .k-producthero--details__content {
    padding: 0;
  }
  .k-productform--quantity {
    -ms-flex-preferred-size: 20%;
    flex-basis: 20%;
    margin-right: 0;
  }
  .k-productform--submit {
    -ms-flex-preferred-size: 45%;
    flex-basis: 45%;
  }
  .k-productform--price {
    -ms-flex-preferred-size: 20%;
    flex-basis: 20%;
  }
}

@media (min-width: 1440px) {
  .k-producthero .k-inner {
    padding: 8em 5%;
  }
  .k-producthero--gallery {
    margin-right: 15%;
  }
  .k-producthero--details {
    width: 45%;
  }
  .k-producthero .k-rte-content,
  .k-producthero .k-productform {
    width: 75%;
  }
}

.k-productdetails--image .k-figure {
  border-radius: 0.667em;
}

.k-productdetails--image .k-figure--liner {
  padding-bottom: 128.57%;
}

.k-productdetails--accordion ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.k-productdetails--accordion li {
  position: relative;
  padding-left: 1em;
  margin-bottom: 0.5em;
}

.k-productdetails--accordion li p {
  margin: 0;
  font-size: 125%;
  font-weight: 300;
}

.k-productdetails--accordion li:last-child {
  margin-bottom: 0;
}

.k-productdetails--accordion li:before {
  display: block;
  content: '';
  position: absolute;
  top: 1.1em;
  left: 0;
  width: 0.125em;
  height: 0.125em;
  border-radius: 50%;
  background: #080907;
  transform: translateY(-50%);
}

.k-productdetails--accordion__item {
  border-bottom: 1px solid #ccc;
}

.k-productdetails--accordion__item.open span {
  transform: translateY(-50%) rotate(405deg);
}

.k-productdetails--accordion__item:last-child {
  border-bottom: none;
}

.k-productdetails--accordion__trigger {
  padding: 1em 0;
}

.k-productdetails--accordion__trigger p {
  position: relative;
  display: inline-block;
  margin: 0;
  font-size: 125%;
}

.k-productdetails--accordion__trigger span {
  color: #f4b13e;
  position: absolute;
  right: -1em;
  top: 42.5%;
  font-size: 150%;
  transform: translateY(-50%) rotate(0);
  transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.k-productdetails--accordion__trigger:hover {
  cursor: pointer;
}

.k-productdetails--accordion__drawer {
  height: 0;
  overflow: hidden;
  transition: height 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-productdetails--accordion__drawer ul {
  padding-bottom: 1em;
}

@media (min-width: 767px) {
  .k-productdetails--headline {
    text-align: center;
  }
  .k-productdetails--main {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-align: start;
    align-items: flex-start;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    padding-top: 2em;
  }
  .k-productdetails--accordion, .k-productdetails--image {
    -ms-flex-preferred-size: 45%;
    flex-basis: 45%;
  }
  .k-productdetails--image {
    -ms-flex-order: 2;
    order: 2;
  }
}

@media (min-width: 1199px) {
  .k-productdetails--accordion {
    -ms-flex-preferred-size: 35%;
    flex-basis: 35%;
  }
  .k-productdetails--image {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
  }
}

.k-latestbatch--title .k-headline {
  margin-top: 0;
}

.k-latestbatch--intro {
  margin-bottom: 2em;
}

.k-latestbatch--tabs {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  border-bottom: 1px solid #ccc;
}

.k-latestbatch--tabs:hover {
  cursor: pointer;
}

.k-latestbatch--tabs__tab {
  -ms-flex-preferred-size: 25%;
  flex-basis: 25%;
  text-align: center;
  border-top: 1px solid #ccc;
  border-right: 1px solid #ccc;
  padding: 0.5em 0;
  transition: background-color 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-latestbatch--tabs__tab span {
  display: block;
  font-size: 75%;
  color: #cccccc;
}

.k-latestbatch--tabs__tab.active {
  background: #222222;
}

.k-latestbatch--tabs__tab.active span {
  color: #fff;
}

.k-latestbatch--tabs__tab:first-child, .k-latestbatch--tabs__tab:nth-child(5), .k-latestbatch--tabs__tab:nth-child(9), .k-latestbatch--tabs__tab:nth-child(13) {
  border-left: 1px solid #ccc;
}

.k-latestbatch--results__liner {
  background: #f7f7f7;
  padding: 1em;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-align: start;
  align-items: flex-start;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
}

.k-latestbatch--results__column {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  border-bottom: 1px solid #ccc;
  padding: 1em 0;
}

.k-latestbatch--results__column:first-child {
  padding-top: 0;
}

.k-latestbatch--results__column:nth-child(3) p {
  font-size: 200%;
  font-weight: 300;
}

.k-latestbatch--results__column:nth-child(3) p span {
  font-size: 0.5em;
  vertical-align: text-top;
}

.k-latestbatch--results__column:last-child {
  margin-top: 1em;
  padding: 2em 0;
  border-bottom: 0;
  position: relative;
  background: red;
  transition: background 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  border-radius: 0.33em;
}

.k-latestbatch--results__column:last-child a {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.k-latestbatch--results__column:last-child span {
  color: #fff;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  text-align: center;
  transform: translate(-50%, -50%);
  pointer-events: none;
}

.k-latestbatch--results__column:last-child:hover {
  background: #e60000;
}

.k-latestbatch--results__column div:first-child {
  margin-bottom: 1em;
}

.k-latestbatch--results__column p {
  margin: 0;
}

@media (min-width: 580px) {
  .k-latestbatch--tabs__tab {
    padding: 1em;
  }
  .k-latestbatch--tabs__tab span {
    font-size: 100%;
  }
}

@media (min-width: 992px) {
  .k-latestbatch--intro {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
  }
  .k-latestbatch--title, .k-latestbatch--description {
    -ms-flex-preferred-size: 48.5%;
    flex-basis: 48.5%;
  }
  .k-latestbatch--description p:first-child {
    margin-top: 0;
  }
}

@media (min-width: 1199px) {
  .k-latestbatch--intro {
    margin-bottom: 4em;
  }
  .k-latestbatch--tabs {
    border-bottom: none;
  }
  .k-latestbatch--results__liner {
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    -ms-flex-pack: start;
    justify-content: flex-start;
    -ms-flex-align: stretch;
    align-items: stretch;
    padding: 3.75em;
  }
  .k-latestbatch--results__column {
    border: none;
    padding: 0;
    margin-right: 5%;
  }
  .k-latestbatch--results__column p {
    line-height: 1.1;
  }
  .k-latestbatch--results__column:first-child {
    -ms-flex-preferred-size: 10%;
    flex-basis: 10%;
  }
  .k-latestbatch--results__column:nth-child(2) {
    -ms-flex-preferred-size: 30%;
    flex-basis: 30%;
  }
  .k-latestbatch--results__column:nth-child(3) {
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
  }
  .k-latestbatch--results__column:nth-child(3) p:first-child {
    margin-bottom: 0.5em;
  }
  .k-latestbatch--results__column:last-child {
    margin: 0 0 0 auto;
    -ms-flex-preferred-size: 20%;
    flex-basis: 20%;
  }
}

@media (min-width: 1440px) {
  .k-latestbatch--intro {
    -ms-flex-pack: start;
    justify-content: flex-start;
    margin-bottom: 6em;
  }
  .k-latestbatch--title {
    margin-right: 1.5%;
  }
  .k-latestbatch--description {
    -ms-flex-preferred-size: 35%;
    flex-basis: 35%;
  }
  .k-latestbatch--results__liner {
    padding: 4em;
  }
  .k-latestbatch--results__column div:first-child {
    margin-bottom: 2.33em;
  }
  .k-latestbatch--results__column:nth-child(2) {
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
  }
  .k-latestbatch--results__column:nth-child(3) {
    -ms-flex-preferred-size: 35%;
    flex-basis: 35%;
  }
  .k-latestbatch--results__column:nth-child(3) p {
    font-size: 250%;
  }
  .k-latestbatch--results__column:nth-child(3) p span {
    font-size: 0.5em;
  }
  .k-latestbatch--results__column:last-child {
    -ms-flex-preferred-size: 15%;
    flex-basis: 15%;
  }
}

.k-productfaq .k-inner--xl {
  background: #f2f2f2;
  border-radius: .75em;
}

.k-productfaq--title .k-headline {
  margin: 0;
}

.k-productfaq--accordion ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.k-productfaq--accordion__item {
  border-bottom: 1px solid #ccc;
}

.k-productfaq--accordion__item:first-child .k-productfaq--accordion__trigger {
  padding-top: 0;
}

.k-productfaq--accordion__item:last-child {
  border-bottom: none;
}

.k-productfaq--accordion__item .k-headline {
  margin: 0;
}

.k-productfaq--accordion__item:hover {
  cursor: pointer;
}

.k-productfaq--accordion__trigger {
  padding: 2em 0 1em 0;
}

.k-productfaq--accordion__drawer {
  height: 0;
  overflow: hidden;
  transition: height 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-productfaq--accordion__drawer--liner {
  padding: 0 0 2em 0;
}

.k-productfaq--accordion__drawer p {
  margin: 0;
}

@media (min-width: 992px) {
  .k-productfaq .k-inner--md {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
  }
  .k-productfaq--title {
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
  }
  .k-productfaq--accordion {
    -ms-flex-preferred-size: 62.5%;
    flex-basis: 62.5%;
  }
}

@media (min-width: 1199px) {
  .k-productfaq--accordion__drawer p {
    max-width: 75%;
  }
}

.k-productreviews--title .k-headline {
  margin: 0;
}

.k-productreviews--main a {
  color: #f4b13e;
}

.k-productreviews--main a:hover {
  color: #d98e0c;
}

.k-review {
  border-bottom: 1px solid #ccc;
}

.k-review:last-child {
  border-bottom: none;
}

.k-review * {
  margin: 0;
}

.k-review--liner {
  padding: 3em 0;
}

.k-review--title {
  margin-bottom: 1em;
}

.k-review--title h3 {
  font-family: "GT America", sans-serif;
}

.k-review--body {
  margin-bottom: 2em;
}

.k-review--meta p, .k-review--actions p {
  color: #cccccc;
}

.k-review--meta {
  margin-bottom: 1em;
}

.k-review--actions__item {
  display: inline-block;
}

.k-review--actions__item .k-arrow:hover {
  cursor: default;
}

.k-review--actions__item .k-arrow:hover circle,
.k-review--actions__item .k-arrow:hover polyline,
.k-review--actions__item .k-arrow:hover line {
  stroke: #cccccc;
}

.k-review--actions__item * {
  display: inline-block;
  vertical-align: middle;
}

.k-review--actions__item .k-arrow {
  margin-right: 0.5em;
}

.k-review--actions__item:first-child {
  margin-right: 2em;
}

@media (min-width: 992px) {
  .k-productreviews .k-inner {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
  }
  .k-productreviews .k-review:first-child {
    margin-top: 1em;
  }
  .k-productreviews .k-review:first-child .k-review--liner {
    padding-top: 0;
  }
  .k-productreviews .k-review:last-child .k-review--liner {
    padding-bottom: 0;
  }
  .k-productreviews--title {
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
  }
  .k-productreviews--main {
    -ms-flex-preferred-size: 62.5%;
    flex-basis: 62.5%;
  }
}

.k-productvideo--title {
  text-align: center;
  margin-bottom: 2em;
}

.k-productvideo--title .k-headline {
  margin-bottom: 0;
}

.k-productvideo--videoheading {
  margin-bottom: 1em;
  padding-top: 2em;
  position: relative;
}

.k-productvideo--videoheading:before {
  display: block;
  content: '';
  position: absolute;
  top: 0.5em;
  left: 0;
  width: 100%;
  height: 0.33em;
  background: #c0d8be;
  transform: translateY(-50%);
}

.k-productvideo--videoheading * {
  margin: 0;
}

.k-productvideo--body {
  margin-bottom: 2em;
}

.k-productvideo--body .k-button {
  margin-top: 1em;
}

.k-productvideo--video {
  width: 100%;
  max-width: 15em;
  margin: auto;
}

@media (min-width: 767px) {
  .k-productvideo--title {
    margin-bottom: 4em;
  }
  .k-productvideo--main {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    position: relative;
  }
  .k-productvideo--videoheading {
    -ms-flex-preferred-size: 33%;
    flex-basis: 33%;
  }
  .k-productvideo--body {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
    margin-bottom: 0;
  }
  .k-productvideo--video {
    position: absolute;
    bottom: 0;
  }
}

@media (min-width: 992px) {
  .k-productvideo--title {
    margin-bottom: 5em;
  }
  .k-productvideo--videoheading {
    -ms-flex-preferred-size: 45%;
    flex-basis: 45%;
  }
  .k-productvideo--videoheading {
    padding-top: 3em;
  }
  .k-productvideo--body {
    -ms-flex-preferred-size: 45%;
    flex-basis: 45%;
    margin-bottom: 0;
  }
  .k-productvideo--video {
    position: absolute;
    bottom: 0;
  }
}

.k-videoembed .k-figure--liner {
  padding-bottom: 62.5%;
}

.k-videoembed:hover {
  cursor: pointer;
}

.k-cart {
  background: #f2f2f2;
}

.k-cart__notices {
  text-align: center;
}

.k-cart__notices .woocommerce-notices-wrapper,
.k-cart__notices ul {
  padding-top: 3em;
}

.k-cart__notices ul {
  list-style-type: none;
  margin: 0;
}

.k-cart--meta {
  padding-bottom: 0 !important;
}

.k-cart--meta input {
  border: 1px solid #ddd;
  padding: 1em;
}

.k-cart--meta__coupon {
  margin-bottom: 1em;
}

.k-cart--meta__coupon label,
.k-cart--meta__coupon input {
  display: block;
  min-width: 100%;
}

.k-cart--meta__actions .k-button {
  width: 100%;
}

.k-cart--meta__actions .k-button:first-child {
  margin-bottom: 1em;
}

.k-cart--quantity {
  position: relative;
  margin-top: 0.5em;
}

.k-cart--quantity input[type='number'] {
  appearance: none;
  width: 100%;
  text-align: center;
  font-weight: 500;
  font-weight: 500;
  padding: 1.25em 3em;
  border: 1px solid #222222;
  border-radius: 0.25em;
  box-shadow: none;
  background: #fff;
  outline: none;
}

.k-cart--quantity .k-reduce,
.k-cart--quantity .k-increase {
  position: absolute;
  top: 50%;
  left: 0.5em;
  transform: translateY(-50%);
  appearance: none;
  background: none;
  border: none;
  font-weight: 500;
}

.k-cart--quantity .k-reduce:hover,
.k-cart--quantity .k-increase:hover {
  cursor: pointer;
}

.k-cart--quantity .k-increase {
  right: 0.5em;
  left: auto;
}

.k-cart--titlerow {
  display: none;
}

.k-cart--titlerow p {
  margin: 0;
}

.k-cart--item {
  padding: 3em 0;
  border-bottom: 1px solid #ddd;
}

.k-cart--item:last-child {
  border-bottom: 0;
}

.k-cart--item__liner {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
}

.k-cart--item__thumbnail, .k-cart--item__title {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.k-cart--item__quantity, .k-cart--item__price {
  -ms-flex-preferred-size: 48.5%;
  flex-basis: 48.5%;
}

.k-cart--item__quantity {
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.k-cart--item__price {
  text-align: right;
}

.k-cart--item__thumbnail img {
  display: block;
  max-width: 100%;
}

.k-cart--item__title .k-headline {
  font-size: 1.5em;
  margin: 0;
}

.k-cart--item__title a {
  color: #080907;
}

.k-cart--item__title a:hover {
  color: #f4b13e;
}

.k-cart--item__quantity label {
  display: block;
}

.k-cart--item__quantity .k-productform--quantity {
  width: 100%;
}

.k-cart--item__price {
  -ms-flex-item-align: end;
  align-self: flex-end;
  margin-bottom: 0.75em;
}

.k-cart--item__price .k-bigtext {
  margin: 0;
  font-size: 1.5em;
}

.k-cart--item ul {
  list-style-type: none;
  padding: 0;
}

.k-cart--item__bundleditem {
  border-bottom: 1px solid #dedede;
  padding: 0.5em 0;
}

.k-cart--item__bundleditem:first-child {
  padding-top: 0;
}

.k-cart--item__bundleditem:last-child {
  border-bottom: 0;
}

.k-cart--item__bundleditem__price {
  color: #f4b13e;
  display: block;
}

.k-cart--item__bundleditem__price sup {
  color: #080907;
  padding-left: 1em;
}

.k-cart--sidebar {
  margin: 2em 0;
  background: #fff;
}

.k-cart--sidebar .k-veteran-coupon {
  border-bottom: 1px solid #dedede;
  padding-bottom: 0.5em;
}

.k-cart--sidebar .k-veteran-coupon__liner {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.k-cart--sidebar .k-veteran-coupon__title {
  -ms-flex-preferred-size: 75%;
  flex-basis: 75%;
}

.k-cart--sidebar .k-veteran-coupon__title p {
  line-height: 1.2;
}

.k-cart--sidebar .k-veteran-coupon__amount {
  -ms-flex-preferred-size: 25%;
  flex-basis: 25%;
  text-align: right;
}

.k-cart--sidebar .k-veteran-coupon__amount a {
  color: #f4b13e;
}

.k-cart--sidebar .k-veteran-coupon__amount a:hover {
  color: red !important;
}

.k-cart--sidebar__liner {
  padding: 2em;
}

.k-cart--sidebar * {
  margin: 0;
}

.k-cart--sidebar .k-bigtext {
  font-size: 200%;
  line-height: 1;
  margin-bottom: 1em;
}

.k-cart--sidebar .k-coupon {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  padding-bottom: 1em;
  border-bottom: 1px solid #dedede;
}

.k-cart--sidebar .k-coupon__title, .k-cart--sidebar .k-coupon__discount {
  -ms-flex-preferred-size: 48.5%;
  flex-basis: 48.5%;
}

.k-cart--sidebar .k-coupon__discount {
  text-align: right;
}

.k-cart--sidebar .k-coupon__discount a {
  color: #f4b13e;
}

.k-cart--sidebar .k-coupon__discount a:hover {
  color: red !important;
}

.k-cart--sidebar .k-button {
  width: 100%;
}

.k-cart--sidebar .k-button--primary {
  margin-bottom: 0.5em;
}

.k-cart--sidebar__meta {
  margin-top: 1em;
}

.k-cart--sidebar__meta p {
  font-size: 90%;
}

.k-cart--actions {
  margin-top: 2em;
  padding-left: 10%;
}

.k-cart--actions span span {
  color: red;
  font-weight: 700;
}

.k-cart__subtotal {
  padding-top: 1em;
  text-align: center;
  margin-bottom: 1em;
}

.k-cart__continue {
  margin-bottom: 1em;
}

.k-cart__meta p {
  font-size: 80%;
  line-height: 1.3;
  margin-bottom: 1em;
}

.k-cart__meta p:first-child {
  text-align: center;
}

.k-cart__meta a {
  color: #f4b13e;
}

.k-cart__meta a:hover {
  color: #d98e0c !important;
}

@media (min-width: 767px) {
  .k-cart--item__title, .k-cart--item__thumbnail {
    -ms-flex-preferred-size: 48.5%;
    flex-basis: 48.5%;
  }
}

@media (min-width: 992px) {
  .k-cart > .k-inner:before, .k-cart > .k-inner:after {
    display: table;
    content: '';
    clear: both;
  }
  .k-cart__headline {
    padding-bottom: 4em;
  }
  .k-cart__headline h1 {
    margin-top: 0;
  }
  .k-cart--main, .k-cart--sidebar {
    float: left;
  }
  .k-cart--main {
    width: 65%;
  }
  .k-cart--sidebar {
    width: 30%;
    margin-left: 5%;
    margin-top: 0;
    position: sticky;
    top: 10em;
  }
  .k-cart--titlerow {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    border-bottom: 1px solid #ddd;
  }
  .k-cart--titlerow .k-cart--titleitem {
    -ms-flex-preferred-size: 22.5%;
    flex-basis: 22.5%;
    text-align: right;
    padding-bottom: 1em;
  }
  .k-cart--titlerow .k-cart--titleitem:first-child {
    -ms-flex-preferred-size: 32.5%;
    flex-basis: 32.5%;
    text-align: left;
  }
  .k-cart--quantity {
    margin-top: 0;
  }
  .k-cart--item__quantity, .k-cart--item__price {
    -ms-flex-preferred-size: 22.5%;
    flex-basis: 22.5%;
    -ms-flex-item-align: start;
    align-self: flex-start;
  }
  .k-cart--item__thumbnail {
    -ms-flex-preferred-size: 10%;
    flex-basis: 10%;
  }
  .k-cart--item__title {
    -ms-flex-preferred-size: 32.5%;
    flex-basis: 32.5%;
  }
  .k-cart--item__price {
    margin-bottom: 0;
  }
  .k-cart--meta {
    width: 50%;
    max-width: 25em;
  }
}

@media (min-width: 1440px) {
  .k-cart--main {
    width: 70%;
  }
  .k-cart--sidebar {
    width: 25%;
  }
}

.k-productlisting .k-productcard {
  margin-bottom: 4em;
}

@media (min-width: 767px) {
  .k-productlisting .k-inner {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: start;
    justify-content: flex-start;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
    -ms-flex-align: end;
    align-items: flex-end;
  }
  .k-productlisting .k-productcard {
    -ms-flex-preferred-size: 48.5%;
    flex-basis: 48.5%;
    margin-right: 0.75%;
    margin-bottom: 6em;
  }
}

@media (min-width: 1199px) {
  .k-productlisting .k-productcard {
    -ms-flex-preferred-size: 32%;
    flex-basis: 32%;
    margin-right: 1%;
  }
}

.k-blogpromo .k-articlecard {
  margin-bottom: 3em;
}

@media (min-width: 580px) {
  .k-blogpromo--articles {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
  }
  .k-blogpromo .k-articlecard {
    -ms-flex-preferred-size: 48.5%;
    flex-basis: 48.5%;
  }
  .k-blogpromo .k-articlecard:last-child {
    margin-bottom: 0;
  }
}

@media (min-width: 992px) {
  .k-blogpromo--articles {
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
  }
  .k-blogpromo .k-articlecard {
    -ms-flex-preferred-size: 32.25%;
    flex-basis: 32.25%;
    margin-bottom: 0;
  }
}

.k-searchtrigger:hover {
  cursor: pointer;
}

.k-modal > .k-inner {
  position: relative;
}

.k-modal--search, .k-modal--cart {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 100%;
  transform: translate(-50%, -50%);
  opacity: 0;
  z-index: -100;
  pointer-events: none;
  transition: opacity 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.k-modal--search.k-modal--open, .k-modal--cart.k-modal--open {
  opacity: 1;
  z-index: 100;
  pointer-events: all;
}

.k-modal--scrollhint {
  position: absolute;
  top: 50%;
  right: -1.5em;
  text-align: center;
  transform: rotate(90deg) translateX(-50%);
  display: none;
}

.k-modal--scrollhint span {
  font-size: 200%;
  color: #c0d8be;
}

.k-modal--close {
  position: absolute;
  top: 1em;
  right: 2em;
  color: #080907;
  width: 100%;
}

.k-modal--close__liner {
  position: relative;
}

.k-modal--close .k-headline {
  position: absolute;
  top: -40px;
  right: 0;
  transition: all 0.4s cubic-bezier(0.86, 0, 0.07, 1);
  transform: rotate(45deg);
  transform-origin: center;
  color: #f4b13e;
  font-size: 6em;
}

.k-modal--close:hover .k-headline {
  transform: rotate(-45deg);
}

.k-modal--search form {
  position: relative;
}

.k-modal--search label,
.k-modal--search button {
  font-family: "Recoleta Regular", serif;
  font-size: 200%;
}

.k-modal--search input,
.k-modal--search button {
  color: #f4b13e;
}

.k-modal--search input {
  padding: 0.5em 0;
  font-family: "Recoleta Regular", serif;
  font-size: 200%;
}

.k-modal--search input:focus {
  outline: none;
}

.k-modal--search input:focus + label {
  transform: translateY(-100%);
}

.k-modal--search label,
.k-modal--search button {
  position: absolute;
}

.k-modal--search label {
  color: #fff;
  top: 0;
  line-height: 2;
  transition: transform 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-modal--search button {
  top: 50%;
  right: 0;
  appearance: none;
  background: none;
  border: none;
  transform: translateY(-50%);
  padding-right: 0;
}

.k-modal--search button:hover {
  cursor: pointer;
}

.k-modal--search button:focus {
  outline: none;
}

.k-modal--search .k-modal--close {
  top: -3em;
  right: 0;
  color: #fff;
}

.k-modal--review {
  position: fixed;
  top: 10em;
  left: 50%;
  transform: translate(-50%, 150%);
  transition: transform 0.4s cubic-bezier(0.075, 0.82, 0.165, 1), opacity 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  width: 90%;
  max-width: 32em;
  max-height: 60vh;
  overflow-y: scroll;
  z-index: -100;
  border-radius: 0.33em;
  pointer-events: none;
  opacity: 0;
}

.k-modal--review.k-modal--open {
  z-index: 100;
  transform: translate(-50%, 0);
  opacity: 1;
  pointer-events: all;
}

.k-modal--review.k-modal--submitting .k-form, .k-modal--review.k-modal--success .k-form {
  opacity: 0;
}

.k-modal--review.k-modal--success .k-form {
  height: 0;
}

.k-modal--review.k-modal--success .k-modal__successmsg {
  opacity: 1;
}

.k-modal--review .k-modal__successmsg {
  position: absolute;
  bottom: 2em;
  left: 0;
  width: 100%;
  text-align: center;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-modal--review .k-modal__successmsg p {
  margin: 0;
}

.k-modal--review .k-modal--content {
  background: #fff;
  padding: 3em 2em;
  position: relative;
}

.k-modal--review .k-modal__close {
  position: absolute;
  top: 0.5em;
  right: 0.5em;
  font-family: "Recoleta Regular", serif;
  font-size: 200%;
  margin: 0;
  line-height: 1;
}

.k-modal--review .k-modal__close:hover {
  cursor: pointer;
  color: red;
}

.k-modal--review .k-headline {
  margin: 0;
}

.k-modal--review .k-review__producttitle {
  margin-top: 0;
  font-style: italic;
  color: #f4b13e;
}

.k-modal--review .k-review__rating p {
  margin-bottom: 0;
  font-weight: 500;
}

.k-modal--review .k-form {
  transition: opacity 0.4s cubic-bezier(0.075, 0.82, 0.165, 1), height 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  opacity: 1;
}

.k-modal--review .k-form__group {
  margin-bottom: 1em;
}

.k-modal--review .k-form__group--textarea label {
  margin-bottom: 0.25em;
}

.k-modal--review .k-form__group--textarea textarea {
  margin-top: 0;
}

.k-modal--review .k-form__actions {
  margin-top: 2em;
}

.k-modal--review .k-form__actions .k-button {
  width: 100%;
}

.k-modal--review .k-review__ratingitem:last-child {
  margin-top: 0.33em;
}

.k-modal--review .k-input + label {
  position: absolute;
  top: 1em;
}

.k-modal--review .k-input:focus {
  outline: none;
}

.k-modal--review textarea {
  border: none;
  border-radius: 0.33em;
  -webkit-appearance: none;
  background: #f2f2f2;
}

.k-modal--review textarea:focus {
  outline: none;
}

@media (min-width: 767px) {
  .k-modal--review {
    width: 60%;
    top: 15em;
  }
}

.k-fullwidthvid {
  position: relative;
}

.k-fullwidthvid.video-playing .k-fullwidthvid--liner {
  opacity: 0;
  pointer-events: none;
}

.k-fullwidthvid.video-playing .k-play-button {
  opacity: 0;
  pointer-events: none;
}

.k-fullwidthvid.video-playing:after {
  opacity: 0 !important;
}

.k-fullwidthvid .k-inner {
  position: relative;
  border-radius: 0.75em;
  overflow: hidden;
}

.k-fullwidthvid .k-play-button {
  z-index: 3;
}

.k-fullwidthvid--bgimg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-position: center center;
  background-size: cover;
  background-repeat: no-repeat;
  opacity: 0;
  transition: opacity 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-fullwidthvid--bgimg.lazyload--complete {
  opacity: 1;
}

.k-fullwidthvid--liner {
  position: relative;
  padding-bottom: 56.25%;
  background: #080907;
  z-index: 2;
}

.k-fullwidthvid .plyr {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
}

.plyr__control {
  background: #f4b13e;
}

.plyr__control:hover {
  background: #d98e0c !important;
}

.plyr__control.plyr__tab-focus {
  background: #d98e0c !important;
}

.plyr--full-ui input[type='range'] {
  color: #f4b13e;
}

.k-cart-sidebar {
  position: fixed;
  top: 0;
  right: 0;
  width: 75%;
  height: 100vh;
  z-index: 101;
  background: #fff;
  transform: translateX(101%);
  transition: transform 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  border-left: 1px solid #ddd;
  overflow: hidden;
  outline-color: #f4b13e;
}

.k-cart-sidebar--open {
  transform: translateX(0);
  pointer-events: all;
}

.k-cart-sidebar__liner {
  position: relative;
  padding: 0 1em;
}

.k-cart-sidebar__content {
  position: relative;
}

.k-cart-sidebar__subtotal {
  margin: 0;
}

.k-cart-sidebar__actions {
  position: fixed;
  bottom: 0;
  background: #fff;
  width: 100%;
  box-shadow: 0 0 0.25em #dedede;
}

.k-cart-sidebar__actions .k-liner {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  position: relative;
  padding: 1em;
}

.k-cart-sidebar__actions .k-liner:first-of-type {
  padding-bottom: 0;
}

.k-cart-sidebar__actions .k-button {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  padding: 0.5em 0;
}

.k-cart-sidebar__actions .k-button:first-child {
  margin-bottom: 0.25em;
}

.k-cart-sidebar__item-actions {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-pack: start;
  justify-content: flex-start;
  position: relative;
}

.k-cart-sidebar__item-actions .k-productform--quantity {
  width: auto !important;
  -ms-flex-preferred-size: auto !important;
  flex-basis: auto !important;
}

.k-cart-sidebar__item-actions input[type='number'] {
  padding: 0.5em 1em;
  max-width: 8ch;
}

.k-cart-sidebar__item-actions .k-reduce {
  position: static;
  padding: 0 !important;
}

.k-cart-sidebar__item-actions .k-increase {
  position: static;
  padding: 0 !important;
}

.k-cart-sidebar__item-actions .k-bigtext {
  margin-left: auto;
}

.k-cart-sidebar__quantity {
  margin-right: 1em !important;
}

.k-cart-sidebar__item-update {
  position: absolute;
  top: 0%;
  right: 0%;
  padding: 0.5em;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.65s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-cart-sidebar__item-update--active {
  opacity: 1;
  pointer-events: auto;
}

.k-cart-sidebar__close, .k-cart-sidebar__title {
  margin: 0;
  position: absolute;
  top: 1em;
}

.k-cart-sidebar__close *, .k-cart-sidebar__title * {
  margin: 0;
}

.k-cart-sidebar__title {
  left: 1em;
  color: #f4b13e;
}

.k-cart-sidebar__close {
  right: 1em;
  top: 0;
  transition: all 0.4s cubic-bezier(0.86, 0, 0.07, 1);
  transform: rotate(45deg);
  transform-origin: center;
  color: #f4b13e;
  font-size: 2em;
}

.k-cart-sidebar__close:hover {
  transform: rotate(-45deg);
}

.k-cart-sidebar #k-ajaxcart-cartitems {
  position: absolute;
  top: 3em;
  bottom: 6em;
  overflow: scroll;
  margin: 2em 0;
}

.k-cart-sidebar #k-ajaxcart-cartitems::-webkit-scrollbar {
  width: 0px;
  background: transparent;
}

.k-cart-sidebar__item {
  font-size: 80%;
  padding: 1em 0;
  border-bottom: 1px solid #ddd;
}

.k-cart-sidebar__item:last-child {
  border-bottom: 0;
}

.k-cart-sidebar__item * {
  margin: 0;
}

.k-cart-sidebar__item__liner {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  -ms-flex-align: center;
  align-items: center;
}

.k-cart-sidebar__item img,
.k-cart-sidebar__item h3 {
  margin-bottom: 1em;
}

.k-cart-sidebar__item img {
  -ms-flex-preferred-size: 2em;
  flex-basis: 2em;
  max-width: 6em;
}

.k-cart-sidebar__item h3 {
  -ms-flex-preferred-size: 68%;
  flex-basis: 68%;
  text-align: right;
}

.k-cart-sidebar__item h3 a {
  color: #080907;
}

.k-cart-sidebar__item p:last-child {
  text-align: right;
}

@media (min-width: 767px) {
  .k-cart-sidebar {
    width: 50%;
  }
  .k-cart-sidebar__liner {
    padding: 0 3em;
  }
  .k-cart-sidebar__close, .k-cart-sidebar__title {
    top: 2em;
  }
  .k-cart-sidebar__close {
    right: 1em;
    top: 1rem;
  }
  .k-cart-sidebar__close:hover {
    cursor: pointer;
  }
  .k-cart-sidebar__title {
    left: 2em;
  }
  .k-cart-sidebar__item {
    padding: 2em 0;
  }
}

@media (min-width: 1199px) {
  .k-cart-sidebar {
    width: 33%;
  }
  .k-cart-sidebar__liner {
    padding: 0 3em;
  }
  .k-cart-sidebar__summary h4 {
    margin: 0.5em 0;
  }
  .k-cart-sidebar__actions .k-liner {
    padding: 1em 3em;
  }
  .k-cart-sidebar__actions .k-liner:first-of-type {
    padding: 1em 3em 0;
  }
  .k-cart-sidebar__actions .k-button {
    padding: 1.25em 2em;
  }
  .k-cart-sidebar__actions .k-button:first-child {
    margin-bottom: 0.5em;
  }
  .k-cart-sidebar__item img {
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
    max-width: 25%;
  }
  .k-cart-sidebar__item h3 {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
  }
  .k-cart-sidebar__close {
    right: 1em;
  }
  .k-cart-sidebar__title {
    left: 3em;
  }
}

.k-process .k-inner {
  border-top: 1px solid #ddd;
  padding-top: 5.8595em;
  position: relative;
}

.k-process__iconrow {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  -ms-flex-align: end;
  align-items: flex-end;
  margin-bottom: 1em;
}

.k-process__iconrow__item {
  -ms-flex-preferred-size: 21%;
  flex-basis: 21%;
  margin-bottom: 1em;
}

.k-process__iconrow__item:hover {
  cursor: pointer;
}

.k-process__iconrow__item:hover .k-process__iconrow__icon:before {
  transform: translateX(-50%) scale(1.25);
}

.k-process__iconrow__item.active .k-process__iconrow__icon:before {
  background: #c0d8be;
  transform: translateX(-50%) scale(1.25);
}

.k-process__iconrow__icon {
  position: relative;
  margin: auto;
  width: 66.67%;
}

.k-process__iconrow__icon:before {
  display: block;
  content: '';
  position: absolute;
  bottom: 0;
  left: 50%;
  width: 2.5em;
  height: 2.5em;
  transform: translateX(-50%);
  border-radius: 50%;
  background: #f2f2f2;
  transition: transform 1s cubic-bezier(0.075, 0.82, 0.165, 1), background 1s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-process__iconrow__title {
  display: none;
}

.k-process__carousel__slide {
  overflow: hidden;
  width: 100%;
  margin: 0 1em;
  opacity: 0;
  transition: opacity 0.4s cubic-bezier(0.6, 0.04, 0.98, 0.335);
}

.k-process__carousel__slide.is-selected {
  opacity: 1;
}

.k-process__carousel__text {
  transition: transform 0.8s cubic-bezier(0.075, 0.82, 0.165, 1);
  margin-bottom: 1em;
}

.k-process__carousel__text h2 {
  font-family: "GT America", sans-serif;
  line-height: 1.1;
  margin-top: 0;
}

.k-process__carousel__image {
  transition: transform 0.8s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-process__carousel .k-figure--liner {
  padding-bottom: 71.42%;
}

.k-process__controls {
  display: none;
}

.k-process__prev:hover, .k-process__next:hover {
  color: #f4b13e;
  cursor: pointer;
}

@media (min-width: 767px) {
  .k-process__iconrow {
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
  .k-process__iconrow__item {
    -ms-flex-preferred-size: 7%;
    flex-basis: 7%;
  }
  .k-process__carousel__slide {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
  .k-process__carousel__text, .k-process__carousel__image {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
  }
  .k-process__carousel__text {
    padding-right: 2em;
  }
}

@media (min-width: 992px) {
  .k-process__iconrow {
    margin-bottom: 10em;
  }
  .k-process__iconrow__item {
    position: relative;
  }
  .k-process__iconrow__title {
    display: block;
    position: absolute;
    width: 150%;
    left: -25%;
    text-align: center;
    line-height: 1.4;
  }
  .k-process__carousel__text {
    padding: 0 7.5%;
  }
}

@media (min-width: 1440px) {
  .k-process__controls {
    position: absolute;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    font-size: 125%;
    width: 50%;
    right: 0;
    bottom: -3em;
  }
}

@media (min-width: 1800px) {
  .k-process__carousel__slide {
    -ms-flex-align: end;
    align-items: flex-end;
  }
}

.k-resourcescallout {
  position: relative;
}

.k-resourcescallout:before, .k-resourcescallout__bgimg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.k-resourcescallout:before {
  content: '';
  display: block;
  opacity: 0.5;
  background: #080907;
  z-index: -1;
}

.k-resourcescallout__bgimg {
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  z-index: -2;
}

.k-resourcescallout__item {
  margin-bottom: 3em;
}

.k-resourcescallout__description {
  margin-bottom: 1em;
}

.k-resourcescallout h2 {
  color: #c0d8be;
}

.k-resourcescallout p {
  color: #fff;
}

.k-resourcescallout a {
  color: #f4b13e;
}

.k-resourcescallout a:hover {
  color: #c0d8be !important;
}

@media (min-width: 767px) {
  .k-resourcescallout__content {
    margin-left: 50%;
  }
}

@media (min-width: 1199px) {
  .k-resourcescallout__content {
    margin-left: 70%;
  }
}

.k-cta--subscribe .k-cta--content {
  margin: 0 auto;
}

.k-cta--fading {
  transition: opacity 0.75s ease-out;
  opacity: 0;
}

.k-cta__subscribe-content {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.k-cta__form-container {
  display: none;
  width: 100%;
  opacity: 0;
  transition: opacity 0.75s ease-in;
}

.k-cta__form-container--open {
  opacity: 1;
}

.k-cta__form-container .k-inner {
  -ms-flex-pack: center !important;
  justify-content: center !important;
}

.k-cta__form-container form {
  min-width: 50%;
}

.k-cta__form-container fieldset {
  text-align: left;
  margin-bottom: 1em;
}

.k-cta__form-container fieldset:last-of-type {
  margin-bottom: 2em;
}

.k-cta__form-container label {
  color: #fff;
}

.k-cta__form-container input {
  color: #fff;
}

@media (min-width: 992px) {
  .k-cta__form-container form {
    min-width: 33%;
  }
}

.k-breadcrumb a {
  color: #f4b13e;
  position: relative;
}

.k-breadcrumb a:hover {
  color: #222222 !important;
}

.k-overview {
  position: relative;
  overflow: hidden;
}

.k-overview--item {
  margin-bottom: 2em;
}

.k-overview--item .k-figure {
  width: 90%;
  overflow: visible;
}

.k-overview--item .k-headline a {
  color: #080907;
}

.k-overview--item .k-headline a:hover {
  color: #f4b13e !important;
}

.k-overview--intro .k-preheading span {
  color: #c0d8be;
}

.k-overview--intro__text {
  margin-bottom: 1.5em;
}

.k-overview--intro__card {
  position: relative;
}

.k-overview--intro__card .k-figure--liner {
  padding-bottom: 144.23%;
}

.k-overview--intro__card .k-cornerimg {
  bottom: -2.5em;
  right: -10%;
  width: 40%;
}

.k-overview .k-cornerimg {
  position: absolute;
}

.k-overview--topicals .k-figure--liner {
  padding-bottom: 62.96%;
}

.k-overview--topicals .k-cornerimg {
  bottom: -2.5em;
  right: -10%;
  width: 50%;
}

.k-overview--pets .k-figure {
  width: 80%;
  overflow: hidden;
}

.k-overview--pets .k-figure--liner {
  padding-bottom: 151.18%;
}

.k-overview--edibles .k-figure--liner {
  padding-bottom: 58.82%;
}

.k-overview--edibles .k-cornerimg {
  bottom: -2.5em;
  right: -25%;
  width: 50%;
}

.k-overview--vape__card {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-align: center;
  align-items: center;
}

.k-overview--vape .k-figure {
  overflow: visible;
  -ms-flex-preferred-size: 40%;
  flex-basis: 40%;
}

.k-overview--vape .k-figure--liner {
  padding-bottom: 144.64%;
}

.k-overview--vape__text {
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
}

.k-overview--vape__text .k-headline {
  margin-top: 0;
}

.k-overview--vape .k-cornerimg {
  bottom: -2.5em;
  right: -10%;
  width: 40%;
}

@media (min-width: 767px) {
  .k-overview--item {
    margin-bottom: 0;
  }
  .k-overview--item .k-figure {
    width: 100%;
  }
  .k-overview--intro {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
  .k-overview--intro__text {
    -ms-flex-preferred-size: 55%;
    flex-basis: 55%;
    margin-bottom: 0;
  }
  .k-overview--intro__card {
    -ms-flex-preferred-size: 40%;
    flex-basis: 40%;
  }
  .k-overview--intro__card .k-cornerimg {
    right: -16.5%;
  }
  .k-overview--intro .k-textbody {
    margin-bottom: 2em;
  }
  .k-overview--topicals {
    width: 55%;
    margin-top: -8em;
  }
  .k-overview--pets {
    margin: 0 0 2em 65%;
  }
  .k-overview--edibles {
    width: 55%;
    margin-top: -15em;
  }
  .k-overview--edibles__text {
    max-width: 24.72em;
  }
  .k-overview--vape {
    margin: 2em 0 0 33.33%;
    width: auto;
  }
}

@media (min-width: 1199px) {
  .k-overview--intro__text {
    max-width: 38em;
  }
  .k-overview--intro__card {
    max-width: 28em;
  }
  .k-overview--topicals {
    margin-top: -12em;
    max-width: 30em;
  }
  .k-overview--pets {
    margin: 0 0 0 auto;
    max-width: 21.66em;
  }
  .k-overview--edibles {
    max-width: 42em;
    margin-top: -25em;
  }
  .k-overview--vape {
    margin-left: 33.33em;
    margin-top: 0em;
    max-width: 44.16em;
  }
}

@media (min-width: 1800px) {
  .k-overview--intro__text {
    max-width: 45em;
  }
}

.k-bloglist .k-articlecard {
  margin-bottom: 3em;
}

.k-blognav {
  position: relative;
}

.k-blognav--filterby {
  position: absolute;
  top: 5em;
  right: unset;
  left: 5%;
  text-align: right;
}

@media all and (min-width: 600px) {
  .k-blognav--filterby {
    position: absolute;
    top: 3em;
    right: 5%;
    left: unset;
    text-align: right;
  }
}

.k-blognav select {
  -webkit-appearance: none;
  background: none;
  border: none;
  -ms-expand: none;
  width: auto;
  min-width: auto;
}

.k-blognav select:focus {
  outline: none;
}

.k-blognav select:hover {
  cursor: pointer;
  color: #f4b13e;
}

@media (min-width: 767px) {
  .k-bloglist .k-inner {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-align: start;
    align-items: flex-start;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
  }
  .k-bloglist .k-articlecard {
    -ms-flex-preferred-size: 48.5%;
    flex-basis: 48.5%;
  }
  .k-blognav--filterby {
    right: 12.5%;
  }
}

@media (min-width: 992px) {
  .k-bloglist .k-inner {
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
  .k-bloglist .k-articlecard {
    -ms-flex-preferred-size: 31.5%;
    flex-basis: 31.5%;
    margin-right: 1.33%;
  }
}

.k-sidebar {
  display: none;
}

.k-sidebar--newsletter__content {
  position: relative;
}

.k-sidebar--newsletter__bgimg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  z-index: -1;
}

.k-sidebar .k-form input,
.k-sidebar .k-form button,
.k-sidebar .k-form label,
.k-sidebar .k-form .k-form--message {
  transition: opacity 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-sidebar .k-form input,
.k-sidebar .k-form button,
.k-sidebar .k-form label {
  opacity: 1;
}

.k-sidebar .k-form .k-form--message {
  opacity: 0;
  position: absolute;
  top: 0;
}

.k-sidebar .k-form--submitting input,
.k-sidebar .k-form--submitting button,
.k-sidebar .k-form--submitting label, .k-sidebar .k-form--submitted input,
.k-sidebar .k-form--submitted button,
.k-sidebar .k-form--submitted label {
  opacity: 0;
}

.k-sidebar .k-form--submitted .k-form--message {
  opacity: 1;
}

@media (min-width: 767px) {
  .k-blogcontent > .k-inner {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
  }
  .k-sidebar {
    display: block;
    -ms-flex-preferred-size: 45%;
    flex-basis: 45%;
  }
  .k-sidebar .k-productcard {
    margin: auto;
    width: calc(100% - 4em);
  }
  .k-sidebar--newsletter {
    position: sticky;
    top: 0;
  }
  .k-sidebar--newsletter__content {
    padding: 7.8125em 2em 2em;
  }
  .k-sidebar--newsletter span {
    display: block;
    margin-bottom: 1em;
  }
  .k-sidebar .k-form {
    position: relative;
  }
  .k-sidebar .k-form label {
    position: absolute;
    top: 0.667em;
    left: 0;
    color: #fff;
    font-family: "Recoleta Regular", serif;
    transition: transform 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
    pointer-events: none;
    font-size: 125%;
  }
  .k-sidebar .k-form input {
    font-size: 125%;
    color: #fff;
    font-family: "Recoleta Regular", serif;
  }
  .k-sidebar .k-form input:focus {
    outline: none;
  }
  .k-sidebar .k-form input:focus + label {
    transform: translateY(-1.5em);
  }
  .k-sidebar .k-form button {
    position: absolute;
    top: 0.667em;
    right: 0;
    font-size: 125%;
    padding: 0;
    margin: 0;
    background: none;
    appearance: none;
    border: none;
    color: #fff;
    line-height: 2;
  }
  .k-sidebar .k-form button:hover {
    cursor: pointer;
  }
  .k-article {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
  }
}

@media (min-width: 1199px) {
  .k-blogcontent .k-sidebar {
    -ms-flex-preferred-size: 35%;
    flex-basis: 35%;
  }
  .k-blogcontent .k-sidebar--newsletter__content {
    padding: 11.7187em 4em 4em;
  }
  .k-blogcontent .k-article {
    -ms-flex-preferred-size: 55%;
    flex-basis: 55%;
    padding-right: 15%;
  }
}

.k-checkout__headline {
  padding: 4em 0;
}

.k-checkout__headline h1 {
  margin-top: 0;
}

.k-checkout__forms {
  border-top: 0.25em solid #f4b13e;
  box-shadow: 0 0 5px #dedede;
}

.k-checkout__forms > .k-liner {
  padding: 1em 2em;
  background: #fff;
}

.page-template-page-checkout {
  background: #f2f2f2;
}

.page-template-page-checkout #ship-to-different-address input,
.page-template-page-checkout #ship-to-different-address span {
  display: inline-block;
}

.page-template-page-checkout #ship-to-different-address input {
  margin-right: 1em;
}

.page-template-page-checkout .k-form--columns__col {
  background: #fff;
  padding: 1em;
  box-shadow: 0 0 2px -1px #222;
  margin-bottom: 2em;
}

.page-template-page-checkout .k-form--columns input:focus {
  outline: none;
}

.page-template-page-checkout .k-checkout--shipping__header {
  margin-left: 2em;
}

.page-template-page-checkout .k-checkout--shipping__header input,
.page-template-page-checkout .k-checkout--shipping__header label {
  min-width: auto;
  display: inline-block;
  margin: 0;
  vertical-align: middle;
}

.page-template-page-checkout .k-checkout--shipping__header input:hover,
.page-template-page-checkout .k-checkout--shipping__header label:hover {
  cursor: pointer;
}

.page-template-page-checkout .k-checkout--shipping__header input {
  margin-right: 1em;
}

.page-template-page-checkout .k-checkout--shipping__header label {
  -ms-user-select: none;
  user-select: none;
  font-weight: 400;
}

.page-template-page-checkout .shipping_address {
  height: 0;
  overflow: hidden;
  transition: height 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.k-review-order--titlerow {
  display: -ms-flexbox;
  display: flex;
}

.k-review-order--titlerow p {
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
  color: #f4b13e;
}

.k-review-order--titlerow p:last-child {
  text-align: right;
}

.k-review-order--item {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  padding: 2em 0;
  border-bottom: 1px solid #ddd;
}

.k-review-order--item .product-name,
.k-review-order--item .product-total {
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
}

.k-review-order--item .product-bundleditems {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.k-review-order--item .product-bundleditems ul {
  list-style-type: none;
  padding: 0;
}

.k-review-order--item .product-bundleditems li {
  padding: 1em;
}

.k-review-order--item .product-bundleditems li:nth-child(odd) {
  background: #f2f2f2;
}

.k-review-order--item .product-bundleditems li a {
  color: #080907;
  display: block;
}

.k-review-order--item .product-bundleditems li a:hover {
  color: #d98e0c !important;
}

.k-review-order--item .product-bundleditems li p {
  color: #f4b13e;
  margin: 0;
}

.k-review-order--item .product-bundleditems li p span {
  color: #080907;
}

.k-review-order--item .product-bundleditems li sup {
  color: #080907;
  padding-left: 1em;
}

.k-review-order--item .product-total {
  text-align: right;
}

.k-review-order--item .product-total ul {
  list-style-type: none;
  padding: 0;
}

.k-review-order .product-quantity {
  color: #f4b13e;
}

.k-review-order .k-bigtext {
  margin: 0;
  font-size: 125%;
}

.k-review-order .woocommerce-remove-coupon {
  color: #f4b13e;
  font-size: 75%;
  vertical-align: super;
}

.k-review-order .woocommerce-remove-coupon:hover {
  color: red !important;
}

.woocommerce-form-login-toggle {
  margin-bottom: 1em;
}

.woocommerce-form-login-toggle a {
  color: #f4b13e;
}

.woocommerce-form-login-toggle a:hover {
  color: #d98e0c !important;
}

.wc_payment_methods.payment_methods {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.woocommerce-checkout-payment {
  margin-top: 7.8125em;
}

.woocommerce-checkout-payment * {
  outline: none;
}

.woocommerce-checkout-payment span {
  font-weight: 400;
}

.woocommerce-checkout-payment input[type='text'],
.woocommerce-checkout-payment input[type='tel'] {
  padding-left: 1em;
}

.woocommerce-checkout-payment .checkbox input[type='checkbox']:checked + .woocommerce-terms-and-conditions-checkbox-text:before {
  background: #f4b13e;
}

.woocommerce-checkout-payment .checkbox .woocommerce-terms-and-conditions-checkbox-text {
  margin-left: 2em;
  position: relative;
}

.woocommerce-checkout-payment .checkbox .woocommerce-terms-and-conditions-checkbox-text:before {
  display: block;
  content: '';
  position: absolute;
  top: 0;
  left: -2em;
  width: 1em;
  height: 1em;
  border: 1px solid #ddd;
  background: #fff;
  transition: background 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-payment-method-select input,
.k-payment-method-select label {
  display: inline-block;
}

.k-payment-method-select input {
  width: 2em;
}

.k-payment-method-select label {
  min-width: auto;
}

.woocommerce-checkout-review-order {
  border-top: 0.25em solid #f4b13e;
  box-shadow: 0 0 5px #dedede;
  margin-top: 2em;
  background: #fff;
  padding: 1em;
}

.woocommerce-terms-and-conditions-checkbox-text:hover {
  cursor: pointer;
}

@media (min-width: 767px) {
  .k-checkout__forms > .k-liner {
    padding: 4em 3em;
  }
  .k-checkout__billing, .k-checkout__shipping {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
  }
  .k-checkout__billing {
    padding-bottom: 4em;
    border-bottom: 1px solid #dedede;
  }
  .k-checkout__shipping {
    margin-top: 4em;
    padding-top: 4em;
  }
  .k-checkout__title {
    -ms-flex-preferred-size: 40%;
    flex-basis: 40%;
  }
  .k-checkout__title .k-liner {
    position: sticky;
    top: 10em;
  }
  .k-checkout__title h3 {
    margin: 0;
    line-height: 1.2;
  }
  .k-checkout__fields {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
  }
  .k-checkout__fields .form-row:first-child {
    margin-top: 0;
  }
  .k-checkout__fields .form-row:last-child {
    margin-bottom: 0;
  }
}

.k-toggle-shipping {
  margin-top: 1em;
}

@media (min-width: 992px) {
  .woocommerce-checkout-review-order {
    padding: 4em 3em;
  }
}

body.page-template-page-checkout .k-header--nav, body.page-template-page-checkout .k-header--top {
  display: none !important;
}

body.page-template-page-checkout .k-header--logo {
  transform: scale(0.7) !important;
}

.k-searchresults--item {
  text-align: center;
  border-bottom: 1px solid #ddd;
}

.k-searchresults--item__liner {
  padding: 2em 0 4em 0;
}

.k-searchresults--item__title a {
  color: #080907;
}

.k-searchresults--item__title a:hover {
  color: #f4b13e;
}

.k-searchresults--item ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.k-searchresults--item li {
  display: inline-block;
}

@media (min-width: 767px) {
  .k-searchresults--item {
    text-align: left;
  }
  .k-searchresults--item__liner {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-align: center;
    align-items: center;
  }
  .k-searchresults--item__image {
    -ms-flex-preferred-size: 10%;
    flex-basis: 10%;
  }
  .k-searchresults--item__title {
    -ms-flex-preferred-size: 35%;
    flex-basis: 35%;
  }
  .k-searchresults--item__reviews {
    -ms-flex-preferred-size: 10%;
    flex-basis: 10%;
  }
  .k-searchresults--item__price {
    -ms-flex-preferred-size: 15%;
    flex-basis: 15%;
  }
  .k-searchresults--item__action {
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
  }
  .k-searchresults--item .k-bigtext {
    font-size: 150%;
  }
}

.k-login {
  position: relative;
}

.k-login__bgimg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-position: center center;
  background-size: cover;
  background-repeat: no-repeat;
  z-index: 1;
  display: none;
}

.k-login__midimg {
  display: none;
}

.k-login__forms {
  overflow: hidden;
  position: relative;
}

.k-login__forms .k-liner {
  width: 80%;
  margin: auto;
}

.k-login__form {
  transition: opacity 0.4s cubic-bezier(0.075, 0.82, 0.165, 1), transform 0.4s cubic-bezier(0.075, 0.82, 0.165, 1), height 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  transform: translateY(-100%);
  opacity: 0;
  height: 0;
  overflow: hidden;
}

.k-login__form.is-visible {
  opacity: 1;
  height: auto;
  transform: translateY(0);
}

.k-login__form .woocommerce-form-row {
  margin-bottom: 2em;
}

.k-login form .form-row {
  position: relative;
}

.k-login form input[type='text'],
.k-login form input[type='email'],
.k-login form input[type='password'] {
  border-radius: 0;
}

.k-login form input[type='text'] + label,
.k-login form input[type='email'] + label,
.k-login form input[type='password'] + label {
  position: absolute;
  top: 1em;
  left: 0;
  font-weight: 400;
  color: #cccccc;
  transition: transform 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-login form input[type='text']:focus,
.k-login form input[type='email']:focus,
.k-login form input[type='password']:focus {
  outline: none;
}

.k-login form input[type='text']:focus + label,
.k-login form input[type='email']:focus + label,
.k-login form input[type='password']:focus + label {
  transform: translateY(-100%);
}

.k-login form input[type='checkbox'] {
  display: inline-block;
  vertical-align: middle;
}

.k-login form input[type='checkbox']:hover {
  cursor: pointer;
}

.k-login form input[type='checkbox'] + label {
  display: inline-block;
  min-width: auto;
  font-weight: 400;
  vertical-align: middle;
}

.k-login form input[type='checkbox'] + label:hover {
  cursor: pointer;
}

.k-login form a {
  color: #cccccc;
}

.k-login form a:hover {
  color: #f4b13e;
}

.k-dashboard {
  background: #f2f2f2;
  position: relative;
}

.k-dashboard > .k-inner {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
}

.k-dashboard--main__liner, .k-dashboard--sidebar__liner {
  border-radius: 0.33em;
}

.k-dashboard--main__liner .my-dashboard {
  background: #fff;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  padding: 2em;
  font-size: 1.1em;
  margin: 0 0 1em 0;
  border-radius: 0.33em;
  transition: box-shadow .5s ease;
}

.k-dashboard--main__liner .my-dashboard:nth-child(2) {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -ms-flex-direction: column;
  flex-direction: column;
}

.k-dashboard--main__liner .my-dashboard:nth-child(2):before {
  content: 'My Account';
  position: absolute;
  top: 5%;
  left: 5%;
}

.k-dashboard--main__liner .my-dashboard .k-button, .k-dashboard--main__liner .my-dashboard .k-button--primary {
  padding: .3em 2em;
}

.k-dashboard--main__liner .my-dashboard span {
  margin: 1em 0;
}

.k-dashboard--main__liner .my-dashboard:nth-child(3) a {
  text-decoration: underline;
  color: #000;
  font-weight: 500;
}

.k-dashboard--main__liner .my-dashboard:hover {
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
}

.k-dashboard--sidebar {
  margin: 2em 0;
}

.k-dashboard--sidebar__liner {
  position: relative;
}

.k-dashboard--sidebar__liner ul {
  position: relative;
  z-index: 2;
}

.k-dashboard--sidebar__liner li {
  transition: box-shadow .5s ease;
}

.k-dashboard--sidebar__liner li a {
  padding: .5em;
  background: white;
  border-radius: 0.33em;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
  justify-content: center;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.k-dashboard--sidebar__liner li:hover {
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
}

.k-dashboard--sidebar__liner li:hover a {
  color: #f4b13e;
}

.k-dashboard--sidebar ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.k-dashboard--sidebar li {
  margin-bottom: 1em;
}

.k-dashboard--sidebar li:last-child {
  margin-bottom: 0;
}

.k-dashboard--sidebar a {
  color: #080907;
  font-family: "Recoleta Regular", serif;
}

.woocommerce-MyAccount-navigation-link.woocommerce-MyAccount-navigation-link--payment-methods {
  display: none;
}

@media (min-width: 992px) {
  .k-login {
    height: calc(100vh - 9.75em);
    padding: 0 !important;
  }
  .k-login__bgimg {
    display: block;
  }
  .k-login__midimg {
    display: block;
    position: absolute;
    bottom: 2em;
    left: 48.6%;
    transform: translateX(-50%);
    width: 20%;
    z-index: 3;
  }
  .k-login__midimg .k-figure--liner {
    padding-bottom: 100%;
  }
  .k-login__forms {
    position: absolute;
    width: 50%;
    height: 100%;
    background: #fff;
    z-index: 2;
  }
  .k-login__forms .k-liner {
    position: relative;
    height: 100%;
    width: 66.67%;
    max-width: 27.5em;
  }
  .k-login__rememberme {
    margin-top: 2em !important;
  }
  .k-login__form {
    position: absolute;
    width: 100%;
    top: 50%;
  }
  .k-login__form.is-visible {
    transform: translateY(-50%);
  }
  .k-login__form button[type='submit'] {
    margin: 2em 0 1em 0;
    width: 100%;
  }
  .k-login__form p {
    margin: 0 0 0.5em 0;
  }
  .k-login__form a {
    color: #cccccc;
  }
  .k-login__form a:hover {
    color: #f4b13e;
  }
  .k-dashboard > .k-inner {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-direction: row;
    flex-direction: row;
  }
  .k-dashboard--sidebar {
    -ms-flex-preferred-size: 25%;
    flex-basis: 25%;
    margin: 0 0 2em 0;
  }
  .k-dashboard--main {
    -ms-flex-preferred-size: 70%;
    flex-basis: 70%;
  }
  .k-dashboard--main__liner p:nth-child(2):before {
    content: 'My Account';
    position: absolute;
    top: 12%;
    left: 32%;
  }
}

.k-faq > .k-inner {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
}

.k-faq--heading {
  padding-left: 5%;
}

.k-faq--sidebar {
  -ms-flex-order: 2;
  order: 2;
}

.k-faq--sidebar ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.k-faq--sidebar a {
  color: #080907;
}

.k-faq--sidebar p {
  margin: 0;
}

.k-faq--item {
  margin-bottom: 3em;
}

.k-faq--item:last-child {
  margin-bottom: 0;
}

.k-faq--item.is-open .k-faq--item__status {
  transform: translateY(-50%) rotate(405deg);
}

.k-faq--item__heading {
  position: relative;
  -ms-user-select: none;
  user-select: none;
  transition: color .25s ease;
}

.k-faq--item__heading:hover {
  cursor: pointer;
  color: #f4b13e;
}

.k-faq--item__heading h2 {
  width: 90%;
  margin: 0 0 1em 0;
}

.k-faq--item__status {
  position: absolute;
  top: 50%;
  right: 0;
  transform: translateY(-50%);
  font-size: 200%;
  color: #f4b13e;
  transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.k-faq--item__drawer {
  height: 0;
  overflow: hidden;
  transition: height 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-faq--item__drawer p {
  margin: 0;
}

.k-faq--item__heighttarget {
  padding-bottom: 2em;
}

.k-contactus {
  margin-bottom: 2em;
  transition: height 1s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.k-contactus .k-inner--xl {
  background: #f2f2f2;
  border-radius: 0.75em;
}

.k-contactus .k-figure {
  display: none;
}

.k-contactus .k-figure--liner {
  padding-bottom: 67.17%;
}

.k-contactus--main {
  position: relative;
}

.k-contactus .k-form {
  position: relative;
  transition: height 1s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.k-contactus .k-form--submitting fieldset,
.k-contactus .k-form--submitting button, .k-contactus .k-form--submitted fieldset,
.k-contactus .k-form--submitted button {
  opacity: 0 !important;
}

.k-contactus .k-form--submitted {
  height: 0;
}

.k-contactus .k-form--submitted + .k-form--message {
  opacity: 1;
}

.k-contactus .k-form--group {
  margin-bottom: 1em;
}

.k-contactus .k-form input {
  padding-top: 0.75em;
  font-family: "Recoleta Regular", serif;
  font-size: 140%;
  font-weight: 500;
}

.k-contactus .k-form input:focus {
  outline: none;
}

.k-contactus .k-form label {
  font-weight: normal;
}

.k-contactus .k-form fieldset,
.k-contactus .k-form button {
  opacity: 1;
  transition: opacity 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-contactus .k-form--message {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  opacity: 0;
  pointer-events: none;
  -ms-user-select: none;
  user-select: none;
  transition: opacity 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

@media (min-width: 767px) {
  .k-faq--heading {
    padding-left: 10%;
  }
}

@media (min-width: 992px) {
  .k-faq > .k-inner {
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
  .k-faq--heading {
    padding-left: 50%;
  }
  .k-faq--sidebar, .k-faq--accordion {
    -ms-flex-order: 1;
    order: 1;
  }
  .k-faq--sidebar {
    -ms-flex-preferred-size: 45%;
    flex-basis: 45%;
    margin-right: 5%;
  }
  .k-faq--sidebar__liner {
    position: sticky;
    top: 12em;
  }
  .k-faq--accordion {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
  }
}

@media (min-width: 1199px) {
  .k-faq--heading {
    padding-left: 41.75%;
  }
  .k-faq--sidebar {
    -ms-flex-preferred-size: 35%;
    flex-basis: 35%;
  }
  .k-faq--accordion {
    -ms-flex-preferred-size: 60%;
    flex-basis: 60%;
  }
  .k-faq--item__status {
    font-size: 300%;
  }
  .k-contactus .k-inner--xl {
    position: relative;
  }
  .k-contactus .k-figure {
    display: block;
    position: absolute;
    top: 50%;
    left: -5%;
    width: 50%;
    transform: translateY(-50%);
  }
  .k-contactus--title, .k-contactus--main {
    width: 50%;
    margin-left: 50%;
  }
}

.k-hero--aboutus {
  background: none;
}

.k-twoup-text {
  background: #f2f2f2;
}

.k-twoup-text .k-headline {
  margin-top: 0;
}

.k-twoup-text .k-bigtext {
  font-size: 140%;
}

.k-twoup-text .k-twoup-imagerow img {
  max-width: 100px;
  width: 30%;
  display: inline-block;
}

.k-presspromo {
  background: #f2f2f2;
}

.k-presspromo--image {
  display: none;
}

.k-presspromo--image .k-figure--liner {
  padding-bottom: 67.17%;
}

.k-presspromo--title h2 {
  margin-top: 0;
}

.k-presspromo--card {
  margin-bottom: 2em;
}

.k-presspromo--card:last-child {
  margin-bottom: 0;
}

.k-presspromo--card .k-headline a {
  color: #080907;
}

.k-presspromo--card .k-headline a:hover {
  color: #f4b13e !important;
}

.k-presspromo--card .k-preheading {
  color: #c0d8be;
  font-weight: 500;
}

.k-presspromo--card__body {
  margin-bottom: 1em;
}

.k-presspromo--card__action a {
  color: #cccccc;
}

@media (min-width: 767px) {
  .k-twoup-text > .k-inner {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
  }
  .k-twoup-text--title, .k-twoup-text--body {
    -ms-flex-preferred-size: 48.5%;
    flex-basis: 48.5%;
  }
  .k-presspromo {
    position: relative;
  }
  .k-presspromo--image {
    display: block;
    position: absolute;
    width: 40%;
    top: 0;
    left: 0;
  }
  .k-presspromo--main {
    width: 55%;
    margin-left: 45%;
  }
}

@media (min-width: 1199px) {
  .k-presspromo--cards {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
  }
  .k-presspromo--card {
    -ms-flex-preferred-size: 45%;
    flex-basis: 45%;
  }
}

@media (min-width: 767px) {
  .k-all-products .k-inner {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
    -ms-flex-align: end;
    align-items: flex-end;
  }
  .k-all-products .k-productcard {
    -ms-flex-preferred-size: 48.5%;
    flex-basis: 48.5%;
    margin-right: 0.75%;
    margin-bottom: 2em;
  }
  .k-all-products .k-productcard--title .k-rte-content * {
    color: #cccccc;
  }
}

@media (min-width: 1199px) {
  .k-all-products .k-productcard {
    -ms-flex-preferred-size: 32%;
    flex-basis: 32%;
    margin-right: 1%;
  }
}

.k-hero--labresults .k-preheading {
  display: block;
  color: #c0d8be;
  margin-bottom: 0.5em;
}

.k-hero--labresults .k-hero__main {
  padding: 7.8125em 0;
}

.k-labresults__searchform .k-preheading {
  color: #c0d8be;
}

.k-labresults__searchform .k-form button[type='submit'] {
  margin-top: 0.5em;
  width: 100%;
}

.k-labresults__searchform .k-form input[type='text'] {
  font-size: 200%;
  font-family: "Recoleta Regular", serif;
  padding: 0.5em 0 0;
}

.k-labresults__searchform .k-form input[type='text']:focus {
  outline: none;
}

.k-labresults .k-latestbatch--results {
  margin-bottom: 2em;
}

@media (min-width: 767px) {
  .k-hero--labresults .k-hero__main {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: start;
    justify-content: flex-start;
    -ms-flex-align: end;
    align-items: flex-end;
    padding: 15.625em 0 7.8125em;
  }
  .k-hero--labresults .k-hero__heading {
    -ms-flex-preferred-size: 40%;
    flex-basis: 40%;
    margin-right: 10%;
  }
  .k-hero--labresults .k-hero__heading .k-headline {
    margin: 0;
  }
  .k-hero--labresults .k-hero__body {
    -ms-flex-preferred-size: 30%;
    flex-basis: 30%;
  }
  .k-labresults__searchform .k-form__content {
    position: relative;
  }
  .k-labresults__searchform .k-form input[type='text'] {
    max-width: 75%;
    min-width: 75%;
    font-size: 400%;
    padding: 0.25em 0;
    border: none;
  }
  .k-labresults__searchform .k-form button[type='submit'] {
    width: auto;
    position: absolute;
    top: 0;
    right: 0;
    margin: 0;
  }
}

@media (min-width: 1199px) {
  .k-labresults__searchform .k-form button[type='submit'] {
    right: 3.75em;
  }
  .k-labresults .k-latestbatch--results {
    margin-bottom: 0;
  }
  .k-labresults .k-latestbatch--results__liner {
    background-color: #fff;
    transition: background-color 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
    border-bottom: 1px solid #dedede;
  }
  .k-labresults .k-latestbatch--results__liner:hover {
    background-color: #f7f7f7;
  }
}

.k-orderreceived__head, .k-orderreceived__item {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -ms-flex-align: center;
  align-items: center;
}

.k-orderreceived__head > div, .k-orderreceived__item > div {
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
}

.k-orderreceived__head > div:nth-child(2), .k-orderreceived__item > div:nth-child(2) {
  text-align: right;
}

.k-orderreceived__head p,
.k-orderreceived__head h3, .k-orderreceived__item p,
.k-orderreceived__item h3 {
  margin: 0;
}

.k-orderreceived__head a, .k-orderreceived__item a {
  color: #f4b13e;
}

.k-orderreceived__head a:hover, .k-orderreceived__item a:hover {
  color: #d98e0c !important;
}

.k-orderreceived__head {
  background: #dedede;
  padding: 0.667em 1em;
}

.k-orderreceived__item {
  padding: 0.667em 1em;
  border-bottom: 1px solid #dedede;
}

.k-orderreceived__item:last-child {
  border-bottom: none;
}

.k-orderreceived__item .k-bigtext {
  font-size: 125%;
}

.page-template-veteran-signup .k-introtext {
  padding-bottom: 2em;
}

.page-template-veteran-signup .k-introtext h2 {
  margin: 0 0 1em 0;
}

.k-veterans .k-form__actions {
  margin-top: 2em;
  text-align: center;
}

.k-veterans__forms {
  background: #fff;
  border-top: 0.25em solid #f4b13e;
  box-shadow: 0 0 5px #dedede;
}

.k-veterans__form > .k-liner {
  padding: 1em 2em;
}

.k-veterans__form:first-child {
  border-bottom: 1px solid #dedede;
}

.k-veterans__form input[type='file'] {
  border: none;
  padding: 0;
  pointer-events: none;
  opacity: 0;
  position: absolute;
}

.k-veterans__form input[type='file'].has-value + label {
  background: #c0d8be;
}

.k-veterans__form input[type='file'].has-value + label:after {
  display: block;
  opacity: 1;
  content: 'Got it!';
  position: absolute;
  top: 50%;
  right: -50%;
  transform: translateY(-50%);
  color: #f4b13e;
  font-weight: 600;
}

.k-veterans__form input[type='file'].has-value + label:hover {
  background: #222222;
}

.k-veterans__form input[type='file']:focus + label {
  transform: translate(0);
}

.k-veterans__form input[type='file'] + label {
  transform: translate(0);
  position: relative;
  top: 0;
  left: 0;
  pointer-events: all;
  background: #222222;
  color: #fff;
  padding: 1em 1.5em;
  border-radius: 0.33em;
  min-width: auto;
  display: inline-block;
  transition: background 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
}

.k-veterans__form input[type='file'] + label:hover {
  cursor: pointer;
}

.k-veterans .k-input {
  margin-bottom: 1em;
}

.k-veterans .k-input + label {
  position: absolute;
  top: 1em;
  transition: transform 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
  font-weight: normal;
  color: #cccccc;
}

.k-veterans .k-input:focus {
  outline: none;
}

@media (min-width: 767px) {
  .k-veterans__form > .k-liner {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
    justify-content: space-between;
    padding: 4em 3em;
  }
  .k-veterans__heading {
    -ms-flex-preferred-size: 40%;
    flex-basis: 40%;
  }
  .k-veterans__heading .k-liner {
    position: sticky;
    top: 10em;
  }
  .k-veterans__heading:first-child {
    margin-top: 1em;
  }
  .k-veterans__heading h3 {
    margin: 0;
  }
  .k-veterans__fields {
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
  }
}

.page-template-location-finder .k-ctabanner,
.page-template-location-finder .k-footer {
  z-index: 99;
  background: #fff;
}

.page-template-location-finder .mapboxgl-popup-anchor-bottom {
  z-index: 99;
}

.page-template-location-finder #lfe-root form label {
  min-width: 0;
}

.page-template-cart .k-header {
  top: 0 !important;
}

.page-template-cart .k-header--top {
  display: none;
}

.page-template-cart .k-header--nav {
  display: none;
}

.page-template-cart .k-header--navtoggle {
  display: none;
}

.page-template-cart .k-header--logo {
  transform: scale(0.7);
}

.page-template-cart .k-cart__headline h1 {
  margin-top: 0;
}

.page-template-cart .k-ctabanner {
  display: none;
}

.koi-error {
  width: 100%;
  height: 85vh;
  margin: 0 0 2em 0;
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0 1em;
}

.koi-error:after {
  position: absolute;
  content: '';
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  z-index: 2;
}

.koi-error img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: 1;
}

.koi-error h1 {
  z-index: 3;
  text-align: center;
  font-size: 3em;
  color: white;
}

.koi-error p {
  z-index: 3;
  text-align: center;
  font-size: 1.3em;
  color: white;
  padding: 0 2em;
}

.koi-error a {
  margin: 3em 0 0 0;
  z-index: 3;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9fbm9ybWFsaXplLnNjc3MiLCJtYWluLmNzcyIsImdsb2JhbC9fdHlwb2dyYXBoeS5zY3NzIiwiZ2xvYmFsL192YXJzLnNjc3MiLCJnbG9iYWwvX2dyaWQtc3lzdGVtLnNjc3MiLCJnbG9iYWwvX3V0aWxzLnNjc3MiLCJnbG9iYWwvX2VsZW1lbnRzLnNjc3MiLCJnbG9iYWwvX2Zvcm1zLnNjc3MiLCJjb21wb25lbnRzL19zaXRlLWhlYWRlci5zY3NzIiwiY29tcG9uZW50cy9fc2l0ZS1mb290ZXIuc2NzcyIsImNvbXBvbmVudHMvX2hlcm8uc2NzcyIsImNvbXBvbmVudHMvX2hlcm8tcHJvZHVjdGxpc3Rpbmcuc2NzcyIsImNvbXBvbmVudHMvX2hlcm8tYmxvZ3NpbmdsZS5zY3NzIiwiY29tcG9uZW50cy9faGVyby1jb250YWN0LnNjc3MiLCJjb21wb25lbnRzL19idXR0b24uc2NzcyIsImNvbXBvbmVudHMvX2NhcmQtcHJvZHVjdC5zY3NzIiwiY29tcG9uZW50cy9fY2FyZC1hcnRpY2xlLnNjc3MiLCJjb21wb25lbnRzL19wcm9tby1zbGlkZXIuc2NzcyIsImNvbXBvbmVudHMvX3Rlc3RpbW9uaWFsLXNsaWRlci5zY3NzIiwiY29tcG9uZW50cy9fY3RhLWJhbm5lci5zY3NzIiwiY29tcG9uZW50cy9fcHJvY2Vzcy1wcmV2aWV3LnNjc3MiLCJjb21wb25lbnRzL19wcm9kdWN0LWhlcm8uc2NzcyIsImNvbXBvbmVudHMvX3Byb2R1Y3QtZGV0YWlscy5zY3NzIiwiY29tcG9uZW50cy9fcHJvZHVjdC1sYXRlc3QtYmF0Y2guc2NzcyIsImNvbXBvbmVudHMvX3Byb2R1Y3QtZmFxLWFjY29yZGlvbi5zY3NzIiwiY29tcG9uZW50cy9fcHJvZHVjdC1yZXZpZXdzLnNjc3MiLCJjb21wb25lbnRzL19wcm9kdWN0LXZpZGVvLnNjc3MiLCJjb21wb25lbnRzL192aWRlby1wbGF5ZXJzLnNjc3MiLCJjb21wb25lbnRzL19jYXJ0LnNjc3MiLCJjb21wb25lbnRzL19wcm9kdWN0bGlzdGluZy5zY3NzIiwiY29tcG9uZW50cy9fYmxvZy1wcm9tby5zY3NzIiwiY29tcG9uZW50cy9fbW9kYWxzLnNjc3MiLCJjb21wb25lbnRzL192aWRlby1mdWxsd2lkdGguc2NzcyIsImNvbXBvbmVudHMvX2NhcnQtc2lkZWJhci5zY3NzIiwiY29tcG9uZW50cy9fa29pLXByb2Nlc3Muc2NzcyIsImNvbXBvbmVudHMvX3Jlc291cmNlcy1jYWxsb3V0LnNjc3MiLCJjb21wb25lbnRzL19uZXdzbGV0dGVyLWN0YS5zY3NzIiwiY29tcG9uZW50cy9fYnJlYWRjcnVtYnMuc2NzcyIsInBhZ2VzL19ob21lLnNjc3MiLCJwYWdlcy9fYmxvZy1saXN0aW5nLnNjc3MiLCJwYWdlcy9fYmxvZy1zaW5nbGUuc2NzcyIsInBhZ2VzL19jaGVja291dC5zY3NzIiwicGFnZXMvX3NlYXJjaC5zY3NzIiwicGFnZXMvX215LWFjY291bnQuc2NzcyIsInBhZ2VzL19jb250YWN0LnNjc3MiLCJwYWdlcy9fYWJvdXQtdXMuc2NzcyIsInBhZ2VzL19hbGwtcHJvZHVjdHMuc2NzcyIsInBhZ2VzL19sYWItcmVzdWx0cy5zY3NzIiwicGFnZXMvX3RoYW5rLXlvdS5zY3NzIiwicGFnZXMvX3ZldGVyYW4tc2lnbnVwLnNjc3MiLCJwYWdlcy9fbG9jYXRpb24tZmluZGVyLnNjc3MiLCJwYWdlcy9fY2FydC5zY3NzIiwicGFnZXMvXzQwNC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDJFQUFBO0FBRUE7K0VDQStFO0FERy9FOzs7RUNDRTtBRElEO0VBQ0MsaUJBQWlCO0VBQUUsTUFBQTtFQUNuQiw4QkFBOEI7RUFBRSxNQUFBO0FDQWxDOztBREdBOytFQ0ErRTtBREcvRTs7RUNBRTtBRElGO0VBQ0UsU0FBUztBQ0ZYOztBREtBOzs7RUNBRTtBREtGO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtBQ0hsQjs7QURNQTsrRUNIK0U7QURNL0U7OztFQ0ZFO0FET0Y7RUFDRSx1QkFBdUI7RUFBRSxNQUFBO0VBQ3pC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QUFVO0FuRDBrTmQiLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5cbiBodG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufSIsIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xufVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5bdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JlY29sZXRhIFJlZ3VsYXInO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoXCIuLi8uLi9kaXN0L2ZvbnRzL1JlY29sZXRhLVJlZ3VsYXIuZW90XCIpIGZvcm1hdChcImVvdFwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUmVjb2xldGEgUmVndWxhcic7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uLy4uL2Rpc3QvZm9udHMvUmVjb2xldGEtUmVndWxhci50dGZcIikgZm9ybWF0KFwidHRmXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdSZWNvbGV0YSBSZWd1bGFyJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogdXJsKFwiLi4vLi4vZGlzdC9mb250cy9SZWNvbGV0YS1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUmVjb2xldGEgUmVndWxhcic7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uLy4uL2Rpc3QvZm9udHMvUmVjb2xldGEtUmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUmVjb2xldGEgUmVndWxhcic7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uLy4uL2Rpc3QvZm9udHMvUmVjb2xldGFSZWd1bGFyLm90ZlwiKSBmb3JtYXQoXCJvdGZcIik7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0dUIEFtZXJpY2EnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoXCIuLi8uLi9kaXN0L2ZvbnRzL0dULUFtZXJpY2EtTGlnaHQub3RmXCIpIGZvcm1hdChcIm90ZlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnR1QgQW1lcmljYSc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uLy4uL2Rpc3QvZm9udHMvZ3QtYW1lcmljYS1saWdodC13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnR1QgQW1lcmljYSc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uLy4uL2Rpc3QvZm9udHMvZ3QtYW1lcmljYS1saWdodC13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdHVCBBbWVyaWNhJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogdXJsKFwiLi4vLi4vZGlzdC9mb250cy9HVC1BbWVyaWNhLVJlZ3VsYXIub3RmXCIpIGZvcm1hdChcIm90ZlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnR1QgQW1lcmljYSc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uLy4uL2Rpc3QvZm9udHMvZ3QtYW1lcmljYS1yZWd1bGFyLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdHVCBBbWVyaWNhJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogdXJsKFwiLi4vLi4vZGlzdC9mb250cy9ndC1hbWVyaWNhLXJlZ3VsYXItd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnR1QgQW1lcmljYSc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uLy4uL2Rpc3QvZm9udHMvR1QtQW1lcmljYS1NZWRpdW0ub3RmXCIpIGZvcm1hdChcIm90ZlwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnR1QgQW1lcmljYSc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uLy4uL2Rpc3QvZm9udHMvZ3QtYW1lcmljYS1tZWRpdW0td2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0dUIEFtZXJpY2EnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoXCIuLi8uLi9kaXN0L2ZvbnRzL2d0LWFtZXJpY2EtbWVkaXVtLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XG59XG5cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sLFxuYm9keSB7XG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xufVxuXG5ib2R5IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gIG1pbi13aWR0aDogMzIwcHg7XG4gIGZvbnQtZmFtaWx5OiBcIkdUIEFtZXJpY2FcIiwgc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuODU7XG59XG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICBmb250LWZhbWlseTogXCJSZWNvbGV0YSBSZWd1bGFyXCIsIHNlcmlmO1xuICBsaW5lLWhlaWdodDogMTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cblxuaDIge1xuICBmb250LXNpemU6IDEuOGVtO1xufVxuXG4uay1oZWFkbGluZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJlY29sZXRhIFJlZ3VsYXJcIiwgc2VyaWY7XG4gIGxpbmUtaGVpZ2h0OiAxLjIyNTtcbn1cblxuLmstaGVhZGxpbmUtLXhzIHtcbiAgZm9udC1zaXplOiAxLjVlbTtcbn1cblxuLmstaGVhZGxpbmUtLXNtIHtcbiAgZm9udC1zaXplOiAxLjllbTtcbn1cblxuLmstaGVhZGxpbmUtLW1kIHtcbiAgZm9udC1zaXplOiAyLjJlbTtcbn1cblxuLmstaGVhZGxpbmUtLWxnIHtcbiAgZm9udC1zaXplOiAzZW07XG59XG5cbi5rLWhlYWRsaW5lLS1mYWtlIHtcbiAgZm9udC1zaXplOiAxZW07XG4gIGZvbnQtZmFtaWx5OiBcIkdUIEFtZXJpY2FcIiwgc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cblxuLmstaGVhZGxpbmUtLWJvZHkge1xuICBmb250LWZhbWlseTogXCJHVCBBbWVyaWNhXCIsIHNhbnMtc2VyaWY7XG59XG5cbi5rLXdlaWdodC0tc20ge1xuICBmb250LXdlaWdodDogMzAwO1xufVxuXG4uay13ZWlnaHQtLW1kIHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cblxuLmstd2VpZ2h0LS1sZyB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5rLWFjY2VudC10ZXh0IHtcbiAgY29sb3I6ICNjY2NjY2M7XG59XG5cbi5rLXVuZGVybGluZSB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG4uay1ydGUtY29udGVudCBoMTpmaXJzdC1jaGlsZCwgLmstcnRlLWNvbnRlbnQgaDI6Zmlyc3QtY2hpbGQsIC5rLXJ0ZS1jb250ZW50IGgzOmZpcnN0LWNoaWxkLCAuay1ydGUtY29udGVudCBoNDpmaXJzdC1jaGlsZCwgLmstcnRlLWNvbnRlbnQgaDU6Zmlyc3QtY2hpbGQsIC5rLXJ0ZS1jb250ZW50IGg2OmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLmstcnRlLWNvbnRlbnQgYSB7XG4gIGNvbG9yOiAjMDgwOTA3O1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLmstcnRlLWNvbnRlbnQgYTpob3ZlciB7XG4gIGNvbG9yOiAjZjRiMTNlO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLmstcnRlLWNvbnRlbnQgLmstYnV0dG9uIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uay1ydGUtY29udGVudCAuay1idXR0b24tLWRhcmsge1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmstcnRlLWNvbnRlbnQgLmstYnV0dG9uOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uay1ydGUtY29udGVudCBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtaW4td2lkdGg6IDEwMCU7XG59XG5cbi5rLXJ0ZS1jb250ZW50IHA6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuXG4uay1ydGUtY29udGVudCBwOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4ub24tZGFyayBoMSwgLm9uLWRhcmsgaDIsIC5vbi1kYXJrIGgzLCAub24tZGFyayBoNCwgLm9uLWRhcmsgaDUsIC5vbi1kYXJrIGg2LFxuLm9uLWRhcmsgYSxcbi5vbi1kYXJrIHAsXG4ub24tZGFyayB1bCxcbi5vbi1kYXJrIGxpLFxuLm9uLWRhcmsgc3Bhbixcbi5vbi1kYXJrIC5rLWhlYWRsaW5lIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5vbi1kYXJrIGE6aG92ZXIge1xuICBjb2xvcjogI2Y0YjEzZTtcbn1cblxuLmstYWxpZ24tLWxlZnQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4uay1hbGlnbi0tY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uay1hbGlnbi0tcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuYSxcbi5rLWZha2VsaW5rIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjRzIGN1YmljLWJlemllcigwLjE2NSwgMC44NCwgMC40NCwgMSk7XG59XG5cbmE6aG92ZXIsXG4uay1mYWtlbGluazpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6ICNmNGIxM2UgIWltcG9ydGFudDtcbn1cblxuLmstdXBjYXNlIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLmstYmctZGFyayB7XG4gIGJhY2tncm91bmQ6ICNmMmYyZjI7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAuay1oZWFkbGluZS0tbWQge1xuICAgIGZvbnQtc2l6ZTogMi44ZW07XG4gIH1cbiAgLmstaGVhZGxpbmUtLWxnIHtcbiAgICBmb250LXNpemU6IDMuNWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAuay1oZWFkbGluZS0tbWQge1xuICAgIGZvbnQtc2l6ZTogM2VtO1xuICB9XG4gIC5rLWhlYWRsaW5lLS1sZyB7XG4gICAgZm9udC1zaXplOiAzLjhlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmstaGVhZGxpbmUtLW1kIHtcbiAgICBmb250LXNpemU6IDMuNWVtO1xuICB9XG4gIC5rLWhlYWRsaW5lLS1sZyB7XG4gICAgZm9udC1zaXplOiA0LjVlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTE5OXB4KSB7XG4gIC5rLWhlYWRsaW5lLS1zbSB7XG4gICAgZm9udC1zaXplOiAyLjVlbTtcbiAgfVxuICAuay1oZWFkbGluZS0tbWQge1xuICAgIGZvbnQtc2l6ZTogMy44ZW07XG4gIH1cbiAgLmstaGVhZGxpbmUtLWxnIHtcbiAgICBmb250LXNpemU6IDVlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTQ0MHB4KSB7XG4gIC5rLWhlYWRsaW5lLS14cyB7XG4gICAgZm9udC1zaXplOiAxLjg1ZW07XG4gIH1cbiAgLmstaGVhZGxpbmUtLXNtIHtcbiAgICBmb250LXNpemU6IDIuOGVtO1xuICB9XG4gIC5rLWhlYWRsaW5lLS1sZyB7XG4gICAgZm9udC1zaXplOiA2ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDE4MDBweCkge1xuICBib2R5IHtcbiAgICBmb250LXNpemU6IDAuODl2dztcbiAgICB0cmFuc2l0aW9uOiBmb250LXNpemUgMC4ycyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbiAgfVxuICAuay1oZWFkbGluZS0teHMge1xuICAgIGZvbnQtc2l6ZTogMS45ZW07XG4gIH1cbiAgLmstaGVhZGxpbmUtLXNtIHtcbiAgICBmb250LXNpemU6IDMuMmVtO1xuICB9XG4gIC5rLWhlYWRsaW5lLS1sZyB7XG4gICAgZm9udC1zaXplOiA2LjU1ZW07XG4gIH1cbn1cblxuLmstYmxvY2stLXNtIHtcbiAgcGFkZGluZzogM2VtIDA7XG59XG5cbi5rLWJsb2NrLS1tZCB7XG4gIHBhZGRpbmc6IDUuODU5NWVtIDA7XG59XG5cbi5rLWJsb2NrLS1sZyB7XG4gIHBhZGRpbmc6IDcuODEyNWVtIDA7XG59XG5cbi5rLWlubmVyIHtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4uay1pbm5lci0tc20sIC5rLWlubmVyLS1tZCwgLmstaW5uZXItLWxnLCAuay1pbm5lci0teGwge1xuICB3aWR0aDogOTAlO1xufVxuXG4uay1pbm5lci0tc20ge1xuICBtYXgtd2lkdGg6IDU4LjMzZW07XG59XG5cbi5rLW5vLXBhZGRpbmctLXRvcCB7XG4gIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XG59XG5cbi5rLW5vLXBhZGRpbmctLWJvdHRvbSB7XG4gIHBhZGRpbmctYm90dG9tOiAwICFpbXBvcnRhbnQ7XG59XG5cbi5rLWhhbGYtcGFkZGluZy0tdG9wIHtcbiAgcGFkZGluZy10b3A6IDQuNzVlbSAhaW1wb3J0YW50O1xufVxuXG4uay1oYWxmLXBhZGRpbmctLWJvdHRvbSB7XG4gIHBhZGRpbmctYm90dG9tOiA0Ljc1ZW0gIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gIC5rLWJsb2NrLS1tZCB7XG4gICAgcGFkZGluZzogNy44MTI1ZW0gMDtcbiAgfVxuICAuay1ibG9jay0tbGcge1xuICAgIHBhZGRpbmc6IDExLjcxODdlbSAwO1xuICB9XG4gIC5rLWlubmVyLS1tZCB7XG4gICAgd2lkdGg6IDgwJTtcbiAgfVxuICAuay1pbm5lci0teGwgLmstaW5uZXItLW1kIHtcbiAgICB3aWR0aDogODguODg5JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTE5OXB4KSB7XG4gIC5rLWJsb2NrLS1tZCB7XG4gICAgcGFkZGluZzogMTEuNzE4N2VtIDA7XG4gIH1cbiAgLmstYmxvY2stLWxnIHtcbiAgICBwYWRkaW5nOiAxNS42MjVlbSAwO1xuICB9XG4gIC5rLWlubmVyLS1sZyB7XG4gICAgd2lkdGg6IDg4JTtcbiAgfVxuICAuay1pbm5lci0teGwge1xuICAgIHdpZHRoOiA5NC40NCU7XG4gIH1cbiAgLmstaW5uZXItLXhsIC5rLWlubmVyLS1tZCB7XG4gICAgd2lkdGg6IDg0LjcxMSU7XG4gIH1cbn1cblxuLmZhZGUge1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMzVzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG4uaXMtaWUxMSAjay1iYWNrZHJvcCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmJvZHkuY2FydC1zaWRlYmFyLW9wZW4ge1xuICBoZWlnaHQ6IDEwMHZoO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogZml4ZWQ7XG59XG5cbiNrLWJhY2tkcm9wIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICMwODA5MDc7XG4gIHotaW5kZXg6IC0xMDA7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyBjdWJpYy1iZXppZXIoMC4xNjUsIDAuODQsIDAuNDQsIDEpO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbiNrLWJhY2tkcm9wLmFjdGl2ZSB7XG4gIHotaW5kZXg6IDEwMDtcbiAgb3BhY2l0eTogMC45O1xuICBwb2ludGVyLWV2ZW50czogYWxsO1xufVxuXG5pbWdbZGF0YS1zcmNdIHtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgY3ViaWMtYmV6aWVyKDAuNiwgMC4wNCwgMC45OCwgMC4zMzUpLCB0cmFuc2Zvcm0gMXMgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSk7XG59XG5cbmltZ1tkYXRhLXNyY10ubGF6eWxvYWQtLWNvbXBsZXRlIHtcbiAgb3BhY2l0eTogMTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbn1cblxuLmstYmxvZy1icmVhZGNydW1iIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5rLWJsb2ctYnJlYWRjcnVtYiA+IC5rLWlubmVyIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG59XG5cbi5rLWJsb2ctYnJlYWRjcnVtYi0tY29udGVudCB7XG4gIHBhZGRpbmc6IDEuNWVtIDE1JSAxLjVlbSAwO1xufVxuXG4uay1ibG9nLWJyZWFkY3J1bWIgdWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLmstYmxvZy1icmVhZGNydW1iIGxpIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IDg1JTtcbn1cblxuLmstYmxvZy1icmVhZGNydW1iIGEge1xuICBjb2xvcjogIzA4MDkwNztcbn1cblxuLmstYmxvZy1icmVhZGNydW1iIGE6aG92ZXIge1xuICBjb2xvcjogI2Y0YjEzZTtcbn1cblxuLmstaGVhZGVyLS1jYXJ0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4jay1jYXJ0bnVtIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDMzJTtcbiAgbGVmdDogM2VtO1xuICBsaW5lLWhlaWdodDogMDtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGNvbG9yOiAjZmZmO1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAxMDAlKTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAxcyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKSwgdHJhbnNmb3JtIDFzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG4jay1jYXJ0bnVtLmstaGFzLXZhbHVlIHtcbiAgb3BhY2l0eTogMTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCk7XG59XG5cbiNrLWNhcnRudW06YWZ0ZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwJTtcbiAgbGVmdDogNTAlO1xuICB3aWR0aDogMS41ZW07XG4gIGhlaWdodDogMS41ZW07XG4gIGJhY2tncm91bmQ6ICNmNGIxM2U7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHotaW5kZXg6IC0xO1xufVxuXG4uay1maWd1cmUge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmstZmlndXJlLS1yb3VuZGVkIHtcbiAgYm9yZGVyLXJhZGl1czogMC42NjdlbTtcbn1cblxuLmstZmlndXJlLS1mcG8ge1xuICBiYWNrZ3JvdW5kOiAjZjRiMTNlO1xufVxuXG4uay1maWd1cmUtLWZwbzphZnRlciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb250ZW50OiAnRiBQIE8nO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICBmb250LWZhbWlseTogXCJSZWNvbGV0YSBSZWd1bGFyXCIsIHNlcmlmO1xuICBmb250LXNpemU6IDQwMCU7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uay1maWd1cmUtLWltZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4ua29pLWJnIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAtMTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogYXV0bztcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cblxuLmtvaS1iZyBwYXRoIHtcbiAgZmlsbDogI2U2ZTZlNjtcbn1cblxuLmtvaS1zdmcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5rb2ktc3ZnIHN2ZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uaGFzLXBsYXktYnV0dG9uIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uaGFzLXBsYXktYnV0dG9uOmFmdGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbnRlbnQ6ICcnO1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xuICBib3JkZXItdG9wOiAwLjY3ZW0gc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1ib3R0b206IDAuNjdlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWxlZnQ6IDFlbSBzb2xpZCAjMDgwOTA3O1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHotaW5kZXg6IDM7XG59XG5cbi5rLXBsYXktYnV0dG9uIHtcbiAgZmlsbDogI2ZmZjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNnMgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSk7XG4gIHdpZHRoOiAzMCU7XG4gIG1heC13aWR0aDogNy44MTI1ZW07XG59XG5cbi5rLXBsYXktYnV0dG9uOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoMzYwZGVnKSBzY2FsZSgwLjgsIDAuOCk7XG59XG5cbi5rLWdvbGRzdGFyIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMWVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5rLWdvbGRzdGFyLS1saW5lciB7XG4gIHBhZGRpbmctYm90dG9tOiAxMDAlO1xufVxuXG4uay1nb2xkc3RhciBzdmcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmstYXJyb3cge1xuICB3aWR0aDogMS41ZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstYXJyb3ctLWxpbmVyIHtcbiAgcGFkZGluZy1ib3R0b206IDEwMCU7XG59XG5cbi5rLWFycm93IHN2ZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uay1hcnJvdyBzdmcgY2lyY2xlLFxuLmstYXJyb3cgc3ZnIHBvbHlsaW5lLFxuLmstYXJyb3cgc3ZnIGxpbmUge1xuICBzdHJva2U6ICNjY2NjY2M7XG4gIHRyYW5zaXRpb246IHN0cm9rZSAwLjRzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG4uay1hcnJvdzpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmstYXJyb3c6aG92ZXIgc3ZnIGNpcmNsZSxcbi5rLWFycm93OmhvdmVyIHN2ZyBwb2x5bGluZSxcbi5rLWFycm93OmhvdmVyIHN2ZyBsaW5lIHtcbiAgc3Ryb2tlOiAjMjIyMjIyO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgI2stY2FydG51bSB7XG4gICAgdG9wOiAtMS4xNWVtO1xuICAgIGxlZnQ6IDUwJTtcbiAgICByaWdodDogYXV0bztcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmstYmxvZy1icmVhZGNydW1iIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG5mb3JtIGgzIHtcbiAgZm9udC1zaXplOiAyZW07XG59XG5cbmZvcm0gZmllbGRzZXQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbn1cblxuZm9ybSBsYWJlbCxcbmZvcm0gaW5wdXQsXG5mb3JtIHRleHRhcmVhLFxuZm9ybSBzZWxlY3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWluLXdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbmZvcm0gbGFiZWwge1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG5mb3JtIGxhYmVsIGFiYnIge1xuICBjb2xvcjogcmVkO1xufVxuXG5mb3JtIGlucHV0IHtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgYmFja2dyb3VuZDogMDtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgcGFkZGluZzogMS41ZW0gMCAwLjVlbSAwO1xufVxuXG5mb3JtIHRleHRhcmVhIHtcbiAgbWluLWhlaWdodDogMTIuNWVtO1xuICByZXNpemU6IG5vbmU7XG4gIHBhZGRpbmc6IDFlbTtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuXG5mb3JtIHNlbGVjdCB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZWRlZGU7XG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMDtcbiAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xufVxuXG5mb3JtIHNlbGVjdDo6LW1zLWV4cGFuZCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmZvcm0gYWJiclt0aXRsZV0ge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmZvcm0gc3Bhbi5yZXF1aXJlZCB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbmZvcm0gaW5wdXRbdHlwZT0nY2hlY2tib3gnXSxcbmZvcm0gaW5wdXRbdHlwZT0ncmFkaW8nXSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgb3BhY2l0eTogMDtcbn1cblxuZm9ybSBpbnB1dFt0eXBlPSdjaGVja2JveCddOmhvdmVyLFxuZm9ybSBpbnB1dFt0eXBlPSdyYWRpbyddOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyICFpbXBvcnRhbnQ7XG59XG5cbmZvcm0gaW5wdXRbdHlwZT0nY2hlY2tib3gnXTpjaGVja2VkICsgbGFiZWw6YmVmb3JlLFxuZm9ybSBpbnB1dFt0eXBlPSdyYWRpbyddOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUge1xuICBiYWNrZ3JvdW5kOiAjZjRiMTNlO1xufVxuXG5mb3JtIGlucHV0W3R5cGU9J2NoZWNrYm94J10gKyBsYWJlbCxcbmZvcm0gaW5wdXRbdHlwZT0ncmFkaW8nXSArIGxhYmVsIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtaW4td2lkdGg6IGF1dG87XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbWFyZ2luLWxlZnQ6IDJlbTtcbn1cblxuZm9ybSBpbnB1dFt0eXBlPSdjaGVja2JveCddICsgbGFiZWw6YmVmb3JlLFxuZm9ybSBpbnB1dFt0eXBlPSdyYWRpbyddICsgbGFiZWw6YmVmb3JlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNDklO1xuICBsZWZ0OiAtMmVtO1xuICB3aWR0aDogMWVtO1xuICBoZWlnaHQ6IDFlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjRzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG5cbmZvcm0gaW5wdXRbdHlwZT0nY2hlY2tib3gnXSArIGxhYmVsOmhvdmVyLFxuZm9ybSBpbnB1dFt0eXBlPSdyYWRpbyddICsgbGFiZWw6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5rLWZvcm1fX3JhZGlvYnV0dG9uIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uay1mb3JtX19ncm91cCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstZm9ybV9fZmlsZXVwbG9hZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstaW5wdXQgKyBsYWJlbCB7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNHMgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSk7XG59XG5cbi5rLWlucHV0Lmhhcy12YWx1ZSArIGxhYmVsLCAuay1pbnB1dDpmb2N1cyArIGxhYmVsIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbn1cblxuLmstaGVhZGVyIHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAtMi43NWVtO1xuICB3aWR0aDogMTAwJTtcbiAgei1pbmRleDogMTAxO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxuXG4uay1oZWFkZXJfX3NraXAtdG8tbWFpbiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC0xMDUlKTtcbiAgei1pbmRleDogOTk7XG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDFzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpLCBjb2xvciAxcyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKSwgYm9yZGVyLWNvbG9yIDFzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpLCB0cmFuc2Zvcm0gMC4zNXMgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSkgIWltcG9ydGFudDtcbn1cblxuLmstaGVhZGVyX19za2lwLXRvLW1haW4tLWZvY3VzZWQge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcbn1cblxuLmstaGVhZGVyIC5rLWhhcy1kcm9wZG93biB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstaGVhZGVyIC5rLWhhcy1kcm9wZG93biA+IGEge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5rLWhlYWRlciAuay1oYXMtZHJvcGRvd24gPiBhIHNwYW4ge1xuICBmb250LXNpemU6IDUwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgcmlnaHQ6IC0yZW07XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgY29sb3I6ICNjMGQ4YmU7XG59XG5cbi5rLWhlYWRlciAuay1kcm9wZG93biB7XG4gIGhlaWdodDogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuMnMgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSk7XG4gIHBhZGRpbmctbGVmdDogMWVtO1xufVxuXG4uay1oZWFkZXIgLmstZHJvcGRvd24tLWxpbmVyIHtcbiAgcGFkZGluZzogMWVtIDA7XG59XG5cbi5rLWhlYWRlciAuay1kcm9wZG93biBsaSB7XG4gIGZvbnQtc2l6ZTogODAlO1xuICBtYXJnaW4tcmlnaHQ6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi5rLWhlYWRlci0tdHJhdmVsaW5nIHtcbiAgYm94LXNoYWRvdzogMCAwIDNweCAtMnB4ICMyMjIyMjI7XG59XG5cbi5rLWhlYWRlci5pcy1vcGVuIHtcbiAgcG9zaXRpb246IGZpeGVkO1xufVxuXG4uay1oZWFkZXIuaXMtb3BlbiAuay1oZWFkZXItLW5hdiB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbn1cblxuLmstaGVhZGVyLmlzLW9wZW4gLmstaGVhZGVyLS1uYXZfX2NvbnRlbnQge1xuICBib3JkZXItYm90dG9tOiAwLjEyNWVtIHNvbGlkICNmNGIxM2U7XG59XG5cbi5rLWhlYWRlci5pcy1vcGVuIC5rLWhlYWRlci0tbmF2dG9nZ2xlX19saW5lOmZpcnN0LWNoaWxkLCAuay1oZWFkZXIuaXMtb3BlbiAuay1oZWFkZXItLW5hdnRvZ2dsZV9fbGluZTpsYXN0LWNoaWxkIHtcbiAgdG9wOiA1MCU7XG59XG5cbi5rLWhlYWRlci5pcy1vcGVuIC5rLWhlYWRlci0tbmF2dG9nZ2xlX19saW5lOm50aC1jaGlsZCgyKSB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5rLWhlYWRlci5pcy1vcGVuIC5rLWhlYWRlci0tbmF2dG9nZ2xlX19saW5lOmZpcnN0LWNoaWxkIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHJvdGF0ZSg0NWRlZyk7XG59XG5cbi5rLWhlYWRlci5pcy1vcGVuIC5rLWhlYWRlci0tbmF2dG9nZ2xlX19saW5lOmxhc3QtY2hpbGQge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgcm90YXRlKC00NWRlZyk7XG59XG5cbi5rLWhlYWRlci0tdG9wIHtcbiAgYmFja2dyb3VuZDogIzA4MDkwNztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uay1oZWFkZXItLXRvcCAuay1pbm5lciB7XG4gIHBhZGRpbmc6IDAuMjVlbSAwO1xufVxuXG4uay1oZWFkZXItLXRvcCBzcGFuIHtcbiAgZm9udC1zaXplOiA3MCU7XG59XG5cbi5rLWhlYWRlcl9fbmV3c2xldHRlci1zaWdudXAge1xuICBkaXNwbGF5OiBub25lO1xuICBiYWNrZ3JvdW5kOiAjMDgwOTA3O1xufVxuXG4uay1oZWFkZXJfX25ld3NsZXR0ZXItc2lnbnVwIGZvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIHBhZGRpbmctYm90dG9tOiAxZW07XG59XG5cbi5rLWhlYWRlcl9fbmV3c2xldHRlci1zaWdudXAgZmllbGRzZXQge1xuICBmbGV4LWJhc2lzOiAxMDAlO1xuICBwYWRkaW5nOiAxZW0gMDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4uay1oZWFkZXJfX25ld3NsZXR0ZXItc2lnbnVwIGlucHV0IHtcbiAgZm9udC1zdHlsZTogMTQwJTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmstaGVhZGVyX19uZXdzbGV0dGVyLXNpZ251cCBidXR0b24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5rLWhlYWRlcl9fbmV3c2xldHRlci10cmlnZ2VyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG4uay1oZWFkZXJfX25ld3NsZXR0ZXItdHJpZ2dlcjpob3ZlciB7XG4gIGNvbG9yOiAjZjRiMTNlO1xufVxuXG4uay1oZWFkZXJfX25ld3NsZXR0ZXItbGFiZWwge1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmstaGVhZGVyLS1tYWluIHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cblxuLmstaGVhZGVyLS1tYWluIC5rLWlubmVyIHtcbiAgcGFkZGluZzogMC41ZW0gMDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxuXG4uay1oZWFkZXItLWxvZ28ge1xuICB3aWR0aDogMy41ZW07XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG4uay1oZWFkZXItLWxvZ28gaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuLmstaGVhZGVyLS1uYXYge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXMgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTUwJSk7XG4gIHotaW5kZXg6IC0xO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxuXG4uay1oZWFkZXItLW5hdl9fY29udGVudCB7XG4gIHBhZGRpbmc6IDJlbSA1JSAyZW0gNSU7XG59XG5cbi5rLWhlYWRlci0tbmF2IHVsIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG59XG5cbi5rLWhlYWRlci0tbmF2IGxpIHtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG59XG5cbi5rLWhlYWRlci0tbmF2IGEge1xuICBjb2xvcjogIzA4MDkwNztcbn1cblxuLmstaGVhZGVyLS1uYXYgLmstZHJvcGRvd24tLWxpbmVyIGEge1xuICBmb250LXNpemU6IDFyZW07XG59XG5cbi5rLWhlYWRlci0tbmF2dG9nZ2xlIHtcbiAgd2lkdGg6IDJlbTtcbiAgaGVpZ2h0OiAxLjVlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uay1oZWFkZXItLW5hdnRvZ2dsZV9fbGluZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAycHg7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kOiAjMDgwOTA3O1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG4uay1oZWFkZXItLW5hdnRvZ2dsZV9fbGluZTpudGgtY2hpbGQoMikge1xuICB0b3A6IDUwJTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG4uay1oZWFkZXItLW5hdnRvZ2dsZV9fbGluZTpudGgtY2hpbGQoMykge1xuICB0b3A6IDEwMCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAuay1oZWFkZXItLXRyYXZlbGluZyAuay1oZWFkZXItLWxvZ28ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC43KTtcbiAgfVxuICAuay1oZWFkZXIgLmstaGFzLWRyb3Bkb3duID4gYSBzcGFuIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5rLWhlYWRlciAuay1kcm9wZG93biB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIHRvcDogNy41ZW07XG4gICAgei1pbmRleDogMTAyO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgfVxuICAuay1oZWFkZXIgLmstZHJvcGRvd24gbGkge1xuICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjI1ZW07XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gIH1cbiAgLmstaGVhZGVyIC5rLWRyb3Bkb3duIGEge1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG4gIC5rLWhlYWRlci0tdG9wIC5rLWlubmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBwYWRkaW5nOiAwLjc1ZW0gMDtcbiAgfVxuICAuay1oZWFkZXJfX25ld3NsZXR0ZXItc2lnbnVwIGZvcm0ge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICB9XG4gIC5rLWhlYWRlcl9fbmV3c2xldHRlci1zaWdudXAgZm9ybSBmaWVsZHNldCB7XG4gICAgZmxleC1iYXNpczogYXV0bztcbiAgICBwYWRkaW5nOiAxZW0gMC41ZW07XG4gIH1cbiAgLmstaGVhZGVyLS1tYWluIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbiAgLmstaGVhZGVyLS1sb2dvIHtcbiAgICB3aWR0aDogNi4yNWVtO1xuICB9XG4gIC5rLWhlYWRlci0tbmF2IHtcbiAgICB6LWluZGV4OiAyO1xuICAgIHdpZHRoOiA4OC44ODklO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUuNTUlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB9XG4gIC5rLWhlYWRlci0tbmF2X19jb250ZW50IHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgfVxuICAuay1oZWFkZXItLW5hdiB1bCB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICAuay1oZWFkZXItLW5hdiB1bCBsaTpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbiAgLmstaGVhZGVyLS1uYXYgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIG1hcmdpbi1yaWdodDogMC43NWVtO1xuICAgIHBvaW50ZXItZXZlbnRzOiBhbGw7XG4gIH1cbiAgLmstaGVhZGVyLS1uYXYgYSB7XG4gICAgZm9udC1zaXplOiA5MCU7XG4gIH1cbiAgLmstaGVhZGVyLS1uYXZ0b2dnbGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5rLWhlYWRlci0tbWFpbiAuay1pbm5lciB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICAuay1oZWFkZXItLWxvZ28ge1xuICAgIG1hcmdpbjogYXV0bztcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEuMTI1ZW0pO1xuICB9XG4gIC5rLWhlYWRlci0tbmF2X19jb250ZW50IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cbiAgLmstaGVhZGVyLS1uYXYgdWwgbGk6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG4gIC5rLWhlYWRlci0tbmF2IGxpIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLXJpZ2h0OiAxZW07XG4gIH1cbiAgLmstaGVhZGVyLS1uYXYgYSB7XG4gICAgZm9udC1zaXplOiAxMTAlO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMTk5cHgpIHtcbiAgLmstaGVhZGVyLS1uYXYge1xuICAgIHdpZHRoOiA5NC40NCU7XG4gICAgbGVmdDogMi43OCU7XG4gIH1cbn1cblxuLmstZm9vdGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uay1mb290ZXItLXRvcCAuay1pbm5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmstZm9vdGVyLS1ib3R0b20gLmstaW5uZXIge1xuICBwYWRkaW5nOiAyZW0gMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjY2NjY2M7XG59XG5cbi5rLWZvb3Rlci0tYmdpbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgei1pbmRleDogLTE7XG59XG5cbi5rLWZvb3Rlci0tbG9nbyB7XG4gIGZsZXgtYmFzaXM6IDUwJTtcbn1cblxuLmstZm9vdGVyLS1sb2dvIC5rLWZpZ3VyZSB7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgbWF4LXdpZHRoOiA4Ljc1ZW07XG59XG5cbi5rLWZvb3Rlci0tbG9nbyAuay1maWd1cmUtLWxpbmVyIHtcbiAgcGFkZGluZy1ib3R0b206IDExMC40MiU7XG59XG5cbi5rLWZvb3Rlci0tc29jaWFsIGEge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmstZm9vdGVyLS1saW5rcyB7XG4gIGZsZXgtYmFzaXM6IDUwJTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5rLWZvb3Rlci0tbGlua3NfX2l0ZW0ge1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi5rLWZvb3Rlci0tbGlua3MgaDQge1xuICBmb250LWZhbWlseTogXCJHVCBBbWVyaWNhXCIsIHNhbnMtc2VyaWY7XG4gIG1hcmdpbjogMCAwIDFlbSAwO1xufVxuXG4uay1mb290ZXItLWxpbmtzIHVsIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG5cbi5rLWZvb3Rlci0tYmFkZ2VzIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xufVxuXG4uay1mb290ZXItLWJhZGdlcyBpbWcge1xuICBmbGV4LWJhc2lzOiAzMyU7XG4gIG1heC13aWR0aDogNi4yNWVtO1xufVxuXG4uay1mb290ZXItLWRpc2NsYWltZXIgcCB7XG4gIGZvbnQtc2l6ZTogNjUlO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgLmstZm9vdGVyLS1saW5rcyB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxuICAuay1mb290ZXItLWJhZGdlcyB7XG4gICAgZmxleC1iYXNpczogNTAlO1xuICAgIG1hcmdpbi10b3A6IC0xMGVtO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAuay1mb290ZXItLXRvcCAuay1pbm5lciB7XG4gICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgfVxuICAuay1mb290ZXItLWJvdHRvbSAuay1pbm5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB9XG4gIC5rLWZvb3Rlci0tYm90dG9tIC5rLWZvb3Rlci0tY29weSB7XG4gICAgZmxleC1iYXNpczogMjUlO1xuICB9XG4gIC5rLWZvb3Rlci0tYm90dG9tIC5rLWZvb3Rlci0tZGlzY2xhaW1lciB7XG4gICAgZmxleC1iYXNpczogNzUlO1xuICB9XG4gIC5rLWZvb3Rlci0tbG9nbyB7XG4gICAgZmxleC1iYXNpczogMjUlO1xuICB9XG4gIC5rLWZvb3Rlci0tbGlua3Mge1xuICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgfVxuICAuay1mb290ZXItLWxpbmtzX19pdGVtIHtcbiAgICBmbGV4LWJhc2lzOiAzMSU7XG4gIH1cbiAgLmstZm9vdGVyLS1iYWRnZXMge1xuICAgIGZsZXgtYmFzaXM6IDIwJTtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICB9XG4gIC5rLWZvb3Rlci0tY29weSxcbiAgLmstZm9vdGVyLS1kaXNjbGFpbWVyIHAge1xuICAgIGZvbnQtc2l6ZTogODAlO1xuICB9XG59XG5cbi5rLWhlcm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5rLWhlcm8gaDEsIC5rLWhlcm8gaDIsIC5rLWhlcm8gaDMsIC5rLWhlcm8gaDQsIC5rLWhlcm8gaDUsIC5rLWhlcm8gaDYsXG4uay1oZXJvIHAge1xuICBjb2xvcjogIzA4MDkwNztcbn1cblxuLmstaGVyby0tbG9hZGVkIGgxLCAuay1oZXJvLS1sb2FkZWQgaDIsIC5rLWhlcm8tLWxvYWRlZCBoMywgLmstaGVyby0tbG9hZGVkIGg0LCAuay1oZXJvLS1sb2FkZWQgaDUsIC5rLWhlcm8tLWxvYWRlZCBoNixcbi5rLWhlcm8tLWxvYWRlZCBwIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5rLWhlcm8tLWJnaW1nIHtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAxcyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbn1cblxuLmstaGVyby0tYmdpbWcubGF6eWxvYWQtLWNvbXBsZXRlIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLmstaGVyby0tZGVmYXVsdCAuay1pbm5lciB7XG4gIHBhZGRpbmc6IDUuODU5NWVtIDA7XG59XG5cbi5rLWhlcm8tLWRlZmF1bHQgLmstaGVyby0tdGV4dCB7XG4gIHBhZGRpbmctYm90dG9tOiA0ZW07XG59XG5cbi5rLWhlcm8tLWRlZmF1bHQgLmstaGVyby0tdGV4dCBoMSxcbi5rLWhlcm8tLWRlZmF1bHQgLmstaGVyby0tdGV4dCBoMiB7XG4gIG1hcmdpbjogMDtcbn1cblxuLmstaGVyby0tb24tZGFyayB7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uay1oZXJvLS1iZ2ltZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICB6LWluZGV4OiAtMTtcbn1cblxuLmstaGVyby0tYmlndGV4dCB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cblxuLmstaGVyby0tYmlndGV4dCBoMSxcbi5rLWhlcm8tLWJpZ3RleHQgLmstaGVhZGxpbmUtLWZha2Uge1xuICBmb250LXNpemU6IDEyMCU7XG59XG5cbi5rLWhlcm8tLWFjdGlvbiAuay1idXR0b246bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gIC5rLWhlcm8tLWFjdGlvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG4gIC5rLWhlcm8tLWFjdGlvbiAuay1idXR0b24ge1xuICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuNWVtO1xuICB9XG4gIC5rLWhlcm8tLWFjdGlvbiAuay1idXR0b246bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIG1hcmdpbi1sZWZ0OiAwLjVlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmstaGVyby0tY2VudGVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgLmstaGVyby0tZGVmYXVsdCAuay1oZXJvLS10ZXh0IGgxIHtcbiAgICB3aWR0aDogNTAlO1xuICAgIG1heC13aWR0aDogMzQuMzc1ZW07XG4gICAgbWFyZ2luOiBhdXRvO1xuICB9XG4gIC5rLWhlcm8tLWFjdGlvbiAuay1idXR0b24ge1xuICAgIGZsZXgtYmFzaXM6IGF1dG87XG4gIH1cbiAgLmstaGVyby0tYmlndGV4dCB7XG4gICAgbWFyZ2luLXRvcDogMmVtO1xuICB9XG4gIC5rLWhlcm8tLWJpZ3RleHQgaDEsXG4gIC5rLWhlcm8tLWJpZ3RleHQgLmstaGVhZGxpbmUtLWZha2Uge1xuICAgIGZvbnQtc2l6ZTogMTU1JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTE5OXB4KSB7XG4gIC5rLWhlcm8tLWRlZmF1bHQgLmstaW5uZXIge1xuICAgIHBhZGRpbmc6IDcuODEyNWVtIDA7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDE0NDBweCkge1xuICAuay1oZXJvLS1kZWZhdWx0IC5rLWlubmVyIHtcbiAgICBwYWRkaW5nOiAxNWVtIDAgMTNlbSAwO1xuICB9XG59XG5cbi5rLWhlcm8tLXByb2R1Y3RsaXN0aW5nIC5rLWhlcm8tLWNvbnRlbnQge1xuICBwYWRkaW5nOiA3LjgxMjVlbSAwO1xufVxuXG4uay1oZXJvLS1wcm9kdWN0bGlzdGluZyAuay1oZXJvLS1jb250ZW50ICoge1xuICBtYXJnaW46IDA7XG59XG5cbi5rLWhlcm8tLXByb2R1Y3RsaXN0aW5nIC5rLWhlcm8tLWNvbnRlbnQgLmstaGVhZGxpbmUge1xuICBtYXJnaW46IDAuMjVlbSAwIDFlbSAwO1xufVxuXG4uay1oZXJvLS1wcm9kdWN0bGlzdGluZyAuay1oZXJvLS1jb250ZW50IC5rLXJ0ZS1jb250ZW50IHtcbiAgZm9udC1zaXplOiAxMjUlO1xufVxuXG4uay1oZXJvLS1wcm9kdWN0bGlzdGluZyAuay1oZXJvLS1wcmVoZWFkaW5nIHtcbiAgY29sb3I6ICNjMGQ4YmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAuay1oZXJvLS1wcm9kdWN0bGlzdGluZyAuay1oZXJvLS1jb250ZW50IHtcbiAgICBtYXgtd2lkdGg6IDUwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTE5OXB4KSB7XG4gIC5rLWhlcm8tLXByb2R1Y3RsaXN0aW5nIC5rLWhlcm8tLWNvbnRlbnQge1xuICAgIHBhZGRpbmc6IDE1LjYyNWVtIDAgNy44MTI1ZW0gMDtcbiAgfVxufVxuXG4uay1oZXJvLS1ibG9nc2luZ2xlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uay1oZXJvLS1ibG9nc2luZ2xlOmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29udGVudDogJyc7XG4gIGJhY2tncm91bmQ6ICMwODA5MDc7XG4gIG9wYWNpdHk6IDAuMjU7XG59XG5cbi5rLWhlcm8tLWJsb2dzaW5nbGUgPiAuay1pbm5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjtcbn1cblxuLmstaGVyby0tYmxvZ3NpbmdsZSAuay1oZXJvLS1tYWluIHtcbiAgcGFkZGluZzogNy44MTI1ZW0gMDtcbn1cblxuLmstaGVyby0tYmxvZ3NpbmdsZSAuay1oZXJvLS1tYWluICoge1xuICBtYXJnaW46IDA7XG59XG5cbi5rLWhlcm8tLWJsb2dzaW5nbGUgLmstaGVyby0tdGl0bGUgLmstaGVhZGxpbmUge1xuICBtYXJnaW46IDFlbSAwO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmstaGVyby0tYmxvZ3NpbmdsZSAuay1oZXJvLS1tYWluIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgIHBhZGRpbmc6IDExLjcxODdlbSAwIDUuODU5NWVtO1xuICB9XG4gIC5rLWhlcm8tLWJsb2dzaW5nbGUgLmstaGVyby0tbWV0YSwgLmstaGVyby0tYmxvZ3NpbmdsZSAuay1oZXJvLS10aXRsZSB7XG4gICAgZmxleC1iYXNpczogNTAlO1xuICB9XG4gIC5rLWhlcm8tLWJsb2dzaW5nbGUgLmstaGVyby0tbWV0YSBzcGFuLFxuICAuay1oZXJvLS1ibG9nc2luZ2xlIC5rLWhlcm8tLW1ldGEgcCwgLmstaGVyby0tYmxvZ3NpbmdsZSAuay1oZXJvLS10aXRsZSBzcGFuLFxuICAuay1oZXJvLS1ibG9nc2luZ2xlIC5rLWhlcm8tLXRpdGxlIHAge1xuICAgIGZvbnQtc2l6ZTogMTI1JTtcbiAgfVxuICAuay1oZXJvLS1ibG9nc2luZ2xlIC5rLWhlcm8tLXRpdGxlIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNSU7XG4gIH1cbiAgLmstaGVyby0tYmxvZ3NpbmdsZSAuay1oZXJvLS10aXRsZSAuay1oZWFkbGluZSB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTE5OXB4KSB7XG4gIC5rLWhlcm8tLWJsb2dzaW5nbGUgLmstaGVyby0tbWFpbiB7XG4gICAgcGFkZGluZzogMTUuNjI1ZW0gMCA1Ljg1OTVlbTtcbiAgfVxufVxuXG4uay1oZXJvLS1jb250YWN0IC5rLWhlcm8tLW1haW4ge1xuICBwYWRkaW5nOiA3LjgxMjVlbSAwO1xufVxuXG4uay1oZXJvLS1jb250YWN0IC5rLWhlcm8tLW1haW4gKiB7XG4gIG1hcmdpbjogMDtcbn1cblxuLmstaGVyby0tY29udGFjdCAuay1oZXJvLS10aXRsZSAuay1oZWFkbGluZSB7XG4gIG1hcmdpbjogMWVtIDA7XG59XG5cbi5rLWhlcm8tLWNvbnRhY3QgLmstcHJlaGVhZGluZyB7XG4gIGNvbG9yOiAjYzBkOGJlO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmstaGVyby0tY29udGFjdCAuay1oZXJvLS1tYWluIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgIHBhZGRpbmc6IDExLjcxODdlbSAwIDUuODU5NWVtO1xuICB9XG4gIC5rLWhlcm8tLWNvbnRhY3QgLmstaGVyby0tdGl0bGUge1xuICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgICBtYXJnaW4tcmlnaHQ6IDMlO1xuICB9XG4gIC5rLWhlcm8tLWNvbnRhY3QgLmstaGVyby0tdGl0bGUgLmstaGVhZGxpbmUge1xuICAgIG1hcmdpbjogMC41ZW0gMCAwIDA7XG4gICAgbGluZS1oZWlnaHQ6IDAuOTtcbiAgfVxuICAuay1oZXJvLS1jb250YWN0IC5rLWhlcm8tLWJvZHkge1xuICAgIGZvbnQtc2l6ZTogMTE1JTtcbiAgICBmbGV4LWJhc2lzOiAzNSU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDExOTlweCkge1xuICAuay1oZXJvLS1jb250YWN0IC5rLWhlcm8tLW1haW4ge1xuICAgIHBhZGRpbmc6IDE1LjYyNWVtIDAgNS44NTk1ZW07XG4gIH1cbiAgLmstaGVyby0tY29udGFjdCAuay1oZXJvLS1ib2R5IHtcbiAgICBtYXgtd2lkdGg6IDIyZW07XG4gIH1cbn1cblxuLmstYnV0dG9uIHtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAxLjI1ZW0gMS4xNWVtO1xuICBib3JkZXItcmFkaXVzOiAwLjRlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXI6IDFweCBzb2xpZDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAxcyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKSwgY29sb3IgMXMgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSksIGJvcmRlci1jb2xvciAxcyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbn1cblxuLmstYnV0dG9uOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBjb2xvcjogI2Y0YjEzZTtcbn1cblxuLmstYnV0dG9uLS1wcmltYXJ5IHtcbiAgYmFja2dyb3VuZDogI2Y0YjEzZTtcbiAgYm9yZGVyLWNvbG9yOiAjZjRiMTNlO1xufVxuXG4uay1idXR0b24tLXNlY29uZGFyeSB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4uay1idXR0b24tLXNlY29uZGFyeS5vbi1saWdodCB7XG4gIGJvcmRlci1jb2xvcjogI2NjYztcbiAgY29sb3I6ICNjY2M7XG59XG5cbi5rLWJ1dHRvbi0tZGVmYXVsdCB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGNvbG9yOiAjZjRiMTNlO1xuICBib3JkZXItY29sb3I6ICNjY2NjY2M7XG59XG5cbi5rLWJ1dHRvbi0tZGVmYXVsdDpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNmNGIxM2U7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uay1idXR0b24tLWRhcmsge1xuICBiYWNrZ3JvdW5kOiAjMjIyMjIyO1xuICBib3JkZXItY29sb3I6ICMyMjIyMjI7XG59XG5cbi5rLWJ1dHRvbi0tZGFyazpob3ZlciB7XG4gIGNvbG9yOiAjZjRiMTNlO1xuICBib3JkZXItY29sb3I6ICNmNGIxM2U7XG4gIGJhY2tncm91bmQ6ICMyMjIyMjI7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1ODBweCkge1xuICAuay1idXR0b24ge1xuICAgIHBhZGRpbmc6IDEuMjVlbSAyZW07XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG59XG5cbi5rLXByb2R1Y3RjYXJkIC5rLWZpZ3VyZSB7XG4gIHdpZHRoOiA4MCU7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuLmstcHJvZHVjdGNhcmQgLmstZmlndXJlLS1saW5lciB7XG4gIHBhZGRpbmctYm90dG9tOiAxMDAlO1xufVxuXG4uay1wcm9kdWN0Y2FyZC0tbGluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5rLXByb2R1Y3RjYXJkLS13aWRlaW1nIC5rLWZpZ3VyZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXItcmFkaXVzOiAwLjMzZW07XG59XG5cbi5rLXByb2R1Y3RjYXJkLS13aWRlaW1nIC5rLWZpZ3VyZS0tbGluZXIge1xuICBwYWRkaW5nLWJvdHRvbTogNjUuMiU7XG59XG5cbi5rLXByb2R1Y3RjYXJkLS10aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuXG4uay1wcm9kdWN0Y2FyZC0tdGl0bGUgaDMge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogMTIwJTtcbn1cblxuLmstcHJvZHVjdGNhcmQtLXRpdGxlIGgzIGEge1xuICBjb2xvcjogIzA4MDkwNztcbn1cblxuLmstcHJvZHVjdGNhcmQtLXRpdGxlIGgzIGE6aG92ZXIge1xuICBjb2xvcjogI2Y0YjEzZSAhaW1wb3J0YW50O1xufVxuXG4uay1wcm9kdWN0Y2FyZC0tdGl0bGUgcCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG5cbi5rLXByb2R1Y3RjYXJkLS1hY3Rpb24ge1xuICBtYXJnaW4tdG9wOiAyZW07XG59XG5cbi5rLXByb2R1Y3RjYXJkLS1hY3Rpb24gLmstYnV0dG9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5rLXByb2R1Y3RjYXJkLS1hY3Rpb24gLmstYnV0dG9uOmhvdmVyIHtcbiAgY29sb3I6ICNmZmYgIWltcG9ydGFudDtcbn1cblxuLmstcHJvZHVjdGNhcmQtLXJldmlld3Mge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uay1wcm9kdWN0Y2FyZC0tcmV2aWV3cyAuay1hY2NlbnQtdGV4dCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4uay1wcm9kdWN0Y2FyZC0tcmV2aWV3cyB1bCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxuXG4uay1wcm9kdWN0Y2FyZC0tcmV2aWV3cyBsaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmstcHJvZHVjdGNhcmQtLXJldmlld3Mgc3ZnIHtcbiAgd2lkdGg6IDFlbTtcbn1cblxuLmstcHJvZHVjdGNhcmQ6aG92ZXIgaDMgPiBhIHtcbiAgY29sb3I6ICNmNGIxM2U7XG59XG5cbi5rLXByb2R1Y3RjYXJkOmhvdmVyIC5rLWJ1dHRvbiB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZDogI2Y0YjEzZTtcbn1cblxuLmstYXJ0aWNsZWNhcmQgKiB7XG4gIG1hcmdpbjogMDtcbn1cblxuLmstYXJ0aWNsZWNhcmQgLmstZmlndXJlIHtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICBib3JkZXItcmFkaXVzOiAwLjMzZW07XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMXMgY3ViaWMtYmV6aWVyKDAuMTY1LCAwLjg0LCAwLjQ0LCAxKTtcbn1cblxuLmstYXJ0aWNsZWNhcmQgLmstZmlndXJlLS1saW5lciB7XG4gIHBhZGRpbmctYm90dG9tOiA2NS4yJTtcbn1cblxuLmstYXJ0aWNsZWNhcmQgLmstZmlndXJlIGltZyB7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAycyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbn1cblxuLmstYXJ0aWNsZWNhcmQgLmstZmlndXJlOmhvdmVyIHtcbiAgYm94LXNoYWRvdzogMCAwIDE1cHggMnB4ICNkZGQ7XG59XG5cbi5rLWFydGljbGVjYXJkIC5rLWZpZ3VyZTpob3ZlciBpbWcge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG59XG5cbi5rLWFydGljbGVjYXJkLS1tZXRhIHtcbiAgbWFyZ2luLWJvdHRvbTogMS41ZW07XG59XG5cbi5rLWFydGljbGVjYXJkLS1tZXRhIHNwYW4ge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLmstYXJ0aWNsZWNhcmQtLXRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogMS41ZW07XG59XG5cbi5rLWFydGljbGVjYXJkLS10aXRsZSBhIHtcbiAgY29sb3I6ICMwODA5MDc7XG59XG5cbi5rLWFydGljbGVjYXJkLS10aXRsZSBhOmhvdmVyIHtcbiAgY29sb3I6ICNmNGIxM2UgIWltcG9ydGFudDtcbn1cblxuLmstYXJ0aWNsZWNhcmQtLWV4Y2VycHQge1xuICBtYXJnaW4tYm90dG9tOiAxLjVlbTtcbn1cblxuLmstcHJvbW9zbGlkZXIgPiAuay1pbm5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstcHJvbW9zbGlkZXItLXRpdGxlcm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG5cbi5rLXByb21vc2xpZGVyLS10aXRsZXJvdyAqIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uay1wcm9tb3NsaWRlci0tdGl0bGVyb3cgYSB7XG4gIGNvbG9yOiAjMDgwOTA3O1xufVxuXG4uay1wcm9tb3NsaWRlci0tdGl0bGVyb3dfX2l0ZW06bnRoLWNoaWxkKDEpLCAuay1wcm9tb3NsaWRlci0tdGl0bGVyb3dfX2l0ZW06bnRoLWNoaWxkKDMpIHtcbiAgb3JkZXI6IDE7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLmstcHJvbW9zbGlkZXItLXRpdGxlcm93X19pdGVtOm50aC1jaGlsZCgyKSB7XG4gIG9yZGVyOiAyO1xufVxuXG4uay1wcm9tb3NsaWRlcl9fY29udHJvbHMge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgei1pbmRleDogNTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbi5rLXByb21vc2xpZGVyX19jb250cm9scyBzdmcge1xuICBwb2ludGVyLWV2ZW50czogYWxsO1xuICBmaWxsOiB0cmFuc3BhcmVudDtcbiAgc3Ryb2tlOiAjZjRiMTNlO1xufVxuXG4uay1wcm9tb3NsaWRlcl9fY29udHJvbHMgc3ZnOmxhc3QtY2hpbGQge1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi5rLXByb21vc2xpZGVyX19jb250cm9scyBzdmc6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5rLXByb21vc2xpZGVyIC5rLXByb2R1Y3RjYXJkIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctYm90dG9tOiAyZW07XG4gIGJvdHRvbTogMCAhaW1wb3J0YW50O1xufVxuXG4uay1wcm9tb3NsaWRlciAuay1wcm9kdWN0Y2FyZC0tbGluZXIge1xuICBwYWRkaW5nLXJpZ2h0OiAxLjVlbTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU4MHB4KSB7XG4gIC5rLXByb21vc2xpZGVyLS10aXRsZXJvdyB7XG4gICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICAuay1wcm9tb3NsaWRlci0tdGl0bGVyb3cgc3BhbixcbiAgLmstcHJvbW9zbGlkZXItLXRpdGxlcm93IGEge1xuICAgIGZvbnQtc2l6ZTogODAlO1xuICB9XG4gIC5rLXByb21vc2xpZGVyLS10aXRsZXJvd19faXRlbTpudGgtY2hpbGQoMSksIC5rLXByb21vc2xpZGVyLS10aXRsZXJvd19faXRlbTpudGgtY2hpbGQoMiksIC5rLXByb21vc2xpZGVyLS10aXRsZXJvd19faXRlbTpudGgtY2hpbGQoMykge1xuICAgIG9yZGVyOiAxO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbiAgLmstcHJvbW9zbGlkZXItLXRpdGxlcm93X19pdGVtOm50aC1jaGlsZCgxKSwgLmstcHJvbW9zbGlkZXItLXRpdGxlcm93X19pdGVtOm50aC1jaGlsZCgyKSB7XG4gICAgZmxleC1iYXNpczogMTUlO1xuICB9XG4gIC5rLXByb21vc2xpZGVyLS10aXRsZXJvd19faXRlbTpudGgtY2hpbGQoMikge1xuICAgIGZsZXgtYmFzaXM6IDYwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgLmstcHJvbW9zbGlkZXIgLmstcHJvZHVjdGNhcmQge1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbiAgLmstcHJvbW9zbGlkZXJfX2NvbnRyb2xzIHtcbiAgICBsZWZ0OiAtNSU7XG4gICAgd2lkdGg6IDExMCU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5rLXByb21vc2xpZGVyLS10aXRsZXJvdyB7XG4gICAgbWFyZ2luLWJvdHRvbTogNGVtO1xuICB9XG4gIC5rLXByb21vc2xpZGVyIC5rLXByb2R1Y3RjYXJkIHtcbiAgICB3aWR0aDogMzMuMzMzMyU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDExOTlweCkge1xuICAuay1wcm9tb3NsaWRlci0tdGl0bGVyb3cge1xuICAgIG1hcmdpbi1ib3R0b206IDcuODEyNWVtO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgfVxuICAuay1wcm9tb3NsaWRlci0tdGl0bGVyb3cgc3BhbixcbiAgLmstcHJvbW9zbGlkZXItLXRpdGxlcm93IGEge1xuICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgfVxuICAuay1wcm9tb3NsaWRlci0tdGl0bGVyb3dfX2l0ZW06bnRoLWNoaWxkKDEpLCAuay1wcm9tb3NsaWRlci0tdGl0bGVyb3dfX2l0ZW06bnRoLWNoaWxkKDIpIHtcbiAgICBmbGV4LWJhc2lzOiAxMCU7XG4gIH1cbiAgLmstcHJvbW9zbGlkZXItLXRpdGxlcm93X19pdGVtOm50aC1jaGlsZCgyKSB7XG4gICAgZmxleC1iYXNpczogNzAlO1xuICB9XG4gIC5rLXByb21vc2xpZGVyIC5rLXByb2R1Y3RjYXJkIHtcbiAgICB3aWR0aDogMjUlO1xuICB9XG4gIC5rLXByb21vc2xpZGVyX19jb250cm9scyB7XG4gICAgd2lkdGg6IDExNSU7XG4gICAgbGVmdDogLTcuNSU7XG4gIH1cbn1cblxuLmstdGVzdGltb25pYWxzbGlkZXItLXNsaWRlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLXJpZ2h0OiAyZW07XG59XG5cbi5rLXRlc3RpbW9uaWFsc2xpZGVyLS1zbGlkZSAuay1maWd1cmUge1xuICBtYXgtd2lkdGg6IDguMDVlbTtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4uay10ZXN0aW1vbmlhbHNsaWRlci0tc2xpZGUgLmstZmlndXJlLS1saW5lciB7XG4gIHBhZGRpbmctYm90dG9tOiAxMDAlO1xufVxuXG4uay10ZXN0aW1vbmlhbHNsaWRlci0tY2l0ZSB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5rLXRlc3RpbW9uaWFsc2xpZGVyIC5mbGlja2l0eS1wYWdlLWRvdHMge1xuICBib3R0b206IC00ZW07XG59XG5cbi5rLWN0YWJhbm5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstY3RhYmFubmVyIC5rLWlubmVyLS14bCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm9yZGVyLXJhZGl1czogMC43NWVtO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uay1jdGFiYW5uZXIgLmstaW5uZXItLXhsOmJlZm9yZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICMwODA5MDc7XG4gIG9wYWNpdHk6IDAuMzM7XG4gIHotaW5kZXg6IC0xO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbi5rLWN0YWJhbm5lci0tYmdpbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgei1pbmRleDogLTI7XG59XG5cbi5rLWN0YWJhbm5lci0tY29udGVudCB7XG4gIGNvbG9yOiAjZmZmO1xuICBtYXgtd2lkdGg6IDQwZW07XG59XG5cbi5rLWN0YWJhbm5lci0tY29udGVudCAuay1pbm5lciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uay1jdGFiYW5uZXItLWNvbnRlbnQgLmstcHJlaGVhZGluZyB7XG4gIGNvbG9yOiAjYzBkOGJlO1xufVxuXG4uay1jdGFiYW5uZXItLXRha2VvdmVyIC5rLWJ1dHRvbiB7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLmstY3RhYmFubmVyLS10YWtlb3ZlciAuay1idXR0b246bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5rLWN0YS0tc3Vic2NyaWJlIHtcbiAgbWFyZ2luOiA1ZW0gMCA4ZW0gMDtcbn1cblxuLmstY3RhLS1zdWJzY3JpYmUgLmstaW5uZXIge1xuICBiYWNrZ3JvdW5kOiAjMDgwOTA3O1xuICBib3JkZXItcmFkaXVzOiAwLjc1ZW07XG59XG5cbi5rLWN0YS0tc3Vic2NyaWJlIC5rLWN0YS0tcHJlaGVhZGluZyB7XG4gIGNvbG9yOiAjYzBkOGJlO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTgwcHgpIHtcbiAgLmstY3RhYmFubmVyLS10YWtlb3ZlciAuay1idXR0b24ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAuay1jdGFiYW5uZXIgLmstaW5uZXItLXhsOmJlZm9yZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAuay1jdGFiYW5uZXItLXRha2VvdmVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgLmstY3RhYmFubmVyLS10YWtlb3ZlciAuay1jdGFiYW5uZXItLWJnaW1nIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBib3R0b20gY2VudGVyO1xuICB9XG4gIC5rLWN0YWJhbm5lci0tdGFrZW92ZXIgLmstY3RhYmFubmVyLS1jb250ZW50IHtcbiAgICB3aWR0aDogOTAlO1xuICAgIG1heC13aWR0aDogNTRlbTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcGFkZGluZzogMTUuNjI1ZW0gMCA3LjgxMjVlbSAwO1xuICB9XG4gIC5rLWN0YWJhbm5lci0tdGFrZW92ZXIgLmstYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuICAuay1jdGFiYW5uZXItLXRha2VvdmVyIC5rLWJ1dHRvbjpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tbGVmdDogMC41ZW07XG4gIH1cbiAgLmstY3RhLS1zdWJzY3JpYmUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICAuay1jdGEtLXN1YnNjcmliZS0taGVhZGxpbmUge1xuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gIH1cbiAgLmstY3RhLS1zdWJzY3JpYmUgLmstY3RhLS1jb250ZW50IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuay1jdGEtLXN1YnNjcmliZSAuay1jdGEtLXByZWhlYWRpbmcsXG4gIC5rLWN0YS0tc3Vic2NyaWJlIC5rLWhlYWRsaW5lLFxuICAuay1jdGEtLXN1YnNjcmliZSAuay1idXR0b24ge1xuICAgIG1hcmdpbjogYXV0bztcbiAgfVxuICAuay1jdGEtLXN1YnNjcmliZSAuay1jdGEtLXByZWhlYWRpbmcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIH1cbiAgLmstY3RhLS1zdWJzY3JpYmUgLmstaGVhZGxpbmUge1xuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICBtYXgtd2lkdGg6IDc1JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmstY3RhLS1zdWJzY3JpYmUgLmstaGVhZGxpbmUge1xuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICBtYXgtd2lkdGg6IDUwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTE5OXB4KSB7XG4gIC5rLWN0YWJhbm5lci0tdGFrZW92ZXIgLmstY3RhYmFubmVyLS1jb250ZW50IHtcbiAgICB3aWR0aDogNzAlO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxNDQwcHgpIHtcbiAgLmstY3RhYmFubmVyLS10YWtlb3ZlciAuay1jdGFiYW5uZXItLWNvbnRlbnQge1xuICAgIHBhZGRpbmc6IDI1ZW0gMCAxMmVtIDA7XG4gIH1cbn1cblxuLypcbiogTm90ZTogdGhpcyBtb2R1bGUgd2FzIG9yaWdpbmFsbHkgZm9yIGRpc3BsYXlpbmcgdmlkZW9zLCBidXQgaXMgbm8gbG9uZ2VyIHRoZSBjYXNlLlxuKiBJdCdzIGEgbGl0dGxlIHRyaWNreSB0byByZW5hbWUgdGhlIGNsYXNzZXMgYXQgdGhpcyBwb2ludCwgc28gdGhlIGZpbGVuYW1lIGhhcyB1cGRhdGVkLFxuKiBidXQgbm90IGFueSBvZiB0aGUgQ1NTIGNsYXNzZXMuXG4qL1xuLmstdmlkZW9nYWxsZXJ5IC5wbHlyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5rLXZpZGVvZ2FsbGVyeSAuay1wbGF5LWJ1dHRvbiB7XG4gIHotaW5kZXg6IDM7XG59XG5cbi5rLXZpZGVvZ2FsbGVyeS52aWRlby1wbGF5aW5nIC5rLXZpZGVvZ2FsbGVyeS0tdmlkZW8gLmstZmlndXJlIHtcbiAgb3BhY2l0eTogMDtcbn1cblxuLmstdmlkZW9nYWxsZXJ5LnZpZGVvLXBsYXlpbmcgLmstdmlkZW9nYWxsZXJ5LS12aWRlbzphZnRlciB7XG4gIG9wYWNpdHk6IDAgIWltcG9ydGFudDtcbn1cblxuLmstdmlkZW9nYWxsZXJ5LnZpZGVvLXBsYXlpbmcgLmstcGxheS1idXR0b24ge1xuICBvcGFjaXR5OiAwO1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uay12aWRlb2dhbGxlcnkgPiAuay1pbm5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG59XG5cbi5rLXZpZGVvZ2FsbGVyeS0taXRlbSB7XG4gIGZsZXgtYmFzaXM6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cblxuLmstdmlkZW9nYWxsZXJ5LS10aXRsZSB7XG4gIG9yZGVyOiAxO1xufVxuXG4uay12aWRlb2dhbGxlcnktLXRpdGxlIC5rLWhlYWRsaW5lIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLmstdmlkZW9nYWxsZXJ5LS12aWRlbyB7XG4gIG9yZGVyOiAyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlci1yYWRpdXM6IDAuNjY3ZW07XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5rLXZpZGVvZ2FsbGVyeS0tdmlkZW8gLmstZmlndXJlIHtcbiAgei1pbmRleDogMjtcbn1cblxuLmstdmlkZW9nYWxsZXJ5LS12aWRlbyAuay1maWd1cmUtLWxpbmVyIHtcbiAgcGFkZGluZy1ib3R0b206IDYyLjUlO1xufVxuXG4uay12aWRlb2dhbGxlcnktLWFjdGlvbnMge1xuICBvcmRlcjogMTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5rLXZpZGVvZ2FsbGVyeS0tYWN0aW9uc19faXRlbSB7XG4gIGZsZXgtYmFzaXM6IDE2LjY3JTtcbiAgaGVpZ2h0OiA0ZW07XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2YyZjJmMjtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNmMmYyZjI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGNvbG9yOiAjMDgwOTA3O1xuICBsaW5lLWhlaWdodDogMS40O1xufVxuXG4uay12aWRlb2dhbGxlcnktLWFjdGlvbnNfX2l0ZW0gKiB7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4uay12aWRlb2dhbGxlcnktLWFjdGlvbnNfX2l0ZW06aG92ZXIge1xuICBjb2xvcjogI2Y0YjEzZTtcbn1cblxuLmstdmlkZW9nYWxsZXJ5LS1hY3Rpb25zX19pdGVtOmhvdmVyIC5rLXZpZGVvZ2FsbGVyeS0tYWN0aW9uc19faWNvbjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kOiAjYzBkOGJlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgxLjI1KTtcbn1cblxuLmstdmlkZW9nYWxsZXJ5LS1hY3Rpb25zX19pdGVtOmxhc3QtY2hpbGQge1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZjJmMmYyO1xufVxuXG4uay12aWRlb2dhbGxlcnktLWFjdGlvbnNfX2l0ZW0uYWN0aXZlIC5rLXZpZGVvZ2FsbGVyeS0tYWN0aW9uc19faWNvbjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kOiAjYzBkOGJlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgxLjI1KTtcbn1cblxuLmstdmlkZW9nYWxsZXJ5LS1hY3Rpb25zX19pY29uIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW46IGF1dG87XG4gIG1heC13aWR0aDogMWVtO1xufVxuXG4uay12aWRlb2dhbGxlcnktLWFjdGlvbnNfX2ljb24gLmtvaS1zdmcge1xuICB3aWR0aDogMWVtO1xufVxuXG4uay12aWRlb2dhbGxlcnktLWFjdGlvbnNfX2ljb246YmVmb3JlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHdpZHRoOiAyLjVlbTtcbiAgaGVpZ2h0OiAyLjVlbTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZDogI2YyZjJmMjtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDFzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpLCBiYWNrZ3JvdW5kIDFzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG4uay12aWRlb2dhbGxlcnktLWFjdGlvbnNfX2ljb24gcGF0aCB7XG4gIGZpbGw6ICMwODA5MDc7XG59XG5cbi5rLXZpZGVvZ2FsbGVyeS0tYWN0aW9uc19fdGl0bGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uay12aWRlb2dhbGxlcnktLWRlc2NyaXB0aW9uIHtcbiAgb3JkZXI6IDI7XG59XG5cbi5rLXZpZGVvZ2FsbGVyeS0tZGVzY3JpcHRpb24gcCB7XG4gIG1hcmdpbjogMCAwIDJlbSAwO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTE5OXB4KSB7XG4gIC5rLXZpZGVvZ2FsbGVyeSA+IC5rLWlubmVyIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIH1cbiAgLmstdmlkZW9nYWxsZXJ5LS1pdGVtIHtcbiAgICBmbGV4LWJhc2lzOiA0OC41JTtcbiAgICBvcmRlcjogMTtcbiAgfVxuICAuay12aWRlb2dhbGxlcnktLXRpdGxlLCAuay12aWRlb2dhbGxlcnktLXZpZGVvIHtcbiAgICBtYXJnaW4tYm90dG9tOiA1Ljg1OTVlbTtcbiAgfVxuICAuay12aWRlb2dhbGxlcnktLWFjdGlvbnMge1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIH1cbiAgLmstdmlkZW9nYWxsZXJ5LS1hY3Rpb25zX19pdGVtIHtcbiAgICBib3JkZXI6IDA7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGZsZXgtYmFzaXM6IDQ4LjUlO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG4gIH1cbiAgLmstdmlkZW9nYWxsZXJ5LS1hY3Rpb25zX19pdGVtLmFjdGl2ZSAuay12aWRlb2dhbGxlcnktLWFjdGlvbnNfX2ljb246YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kOiAjYzBkOGJlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSBzY2FsZSgxLjUpO1xuICB9XG4gIC5rLXZpZGVvZ2FsbGVyeS0tYWN0aW9uc19faXRlbTpob3ZlciAuay12aWRlb2dhbGxlcnktLWFjdGlvbnNfX2ljb246YmVmb3JlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGUoMS41KTtcbiAgfVxuICAuay12aWRlb2dhbGxlcnktLWFjdGlvbnNfX2ljb24ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgfVxuICAuay12aWRlb2dhbGxlcnktLWFjdGlvbnNfX2ljb24gLmtvaS1zdmcge1xuICAgIHdpZHRoOiAyLjVlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gIH1cbiAgLmstdmlkZW9nYWxsZXJ5LS1hY3Rpb25zX19pY29uOmJlZm9yZSB7XG4gICAgbGVmdDogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIH1cbiAgLmstdmlkZW9nYWxsZXJ5LS1hY3Rpb25zX190aXRsZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLWxlZnQ6IDRlbTtcbiAgfVxuICAuay12aWRlb2dhbGxlcnktLWFjdGlvbnNfX3RpdGxlIHAge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuICAuay12aWRlb2dhbGxlcnktLWRlc2NyaXB0aW9uIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbiAgLmstdmlkZW9nYWxsZXJ5LS1kZXNjcmlwdGlvbjpiZWZvcmUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IC0zZW07XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogNTAlO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQ6ICNjMGQ4YmU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDE0NDBweCkge1xuICAuay12aWRlb2dhbGxlcnktLXRpdGxlLCAuay12aWRlb2dhbGxlcnktLXZpZGVvIHtcbiAgICBtYXJnaW4tYm90dG9tOiA3LjgxMjVlbTtcbiAgfVxuICAuay12aWRlb2dhbGxlcnktLXRpdGxlIHtcbiAgICBmbGV4LWJhc2lzOiAzNSU7XG4gIH1cbiAgLmstdmlkZW9nYWxsZXJ5LS12aWRlbywgLmstdmlkZW9nYWxsZXJ5LS1kZXNjcmlwdGlvbiB7XG4gICAgZmxleC1iYXNpczogNDUlO1xuICB9XG4gIC5rLXZpZGVvZ2FsbGVyeS0tZGVzY3JpcHRpb246YmVmb3JlIHtcbiAgICB0b3A6IC0zZW07XG4gICAgd2lkdGg6IDQyLjUlO1xuICB9XG59XG5cbi5rLXZpZGVvZ2FsbGVyeS52aWRlby1wbGF5aW5nIC5rLXZpZGVvZ2FsbGVyeS0tdmlkZW8gLmstZmlndXJlIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbi5rLXByb2R1Y3RoZXJvIC5rLWlubmVyLS14bCB7XG4gIGJhY2tncm91bmQ6ICNmMmYyZjI7XG4gIGJvcmRlci1yYWRpdXM6IDAuNWVtO1xufVxuXG4uay1wcm9kdWN0aGVyby0tYnVuZGxlIC5rLXByb2R1Y3Rmb3JtLS1wcmljZSB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBhZGRpbmctbGVmdDogMmVtO1xufVxuXG4uay1wcm9kdWN0aGVyby0tZ2FsbGVyeSB7XG4gIHBhZGRpbmctdG9wOiAyZW07XG59XG5cbi5rLXByb2R1Y3RoZXJvLS1zbGlkZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uay1wcm9kdWN0aGVyby0tc2xpZGUgLmstZmlndXJlIHtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4uay1wcm9kdWN0aGVyby0tc2xpZGUgLmstZmlndXJlLS1saW5lciB7XG4gIHBhZGRpbmctYm90dG9tOiAxMDAlO1xufVxuXG4uay1wcm9kdWN0aGVyby0tcmV2aWV3cyBwLFxuLmstcHJvZHVjdGhlcm8tLXJldmlld3MgZGl2IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uay1wcm9kdWN0aGVyby0tcmV2aWV3cyBhIHtcbiAgY29sb3I6ICNmNGIxM2U7XG59XG5cbi5rLXByb2R1Y3RoZXJvLS1yZXZpZXdzIGE6aG92ZXIge1xuICBjb2xvcjogI2Q5OGUwYyAhaW1wb3J0YW50O1xufVxuXG4uay1wcm9kdWN0aGVyby0tZGV0YWlsc19fY29udGVudCB7XG4gIHBhZGRpbmc6IDJlbSAxZW07XG59XG5cbi5rLXByb2R1Y3RoZXJvX19jb250cm9scyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHdpZHRoOiA5NSU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiAyLjUlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIHotaW5kZXg6IDk7XG59XG5cbi5rLXByb2R1Y3RoZXJvX19jb250cm9scyBzdmcge1xuICBwb2ludGVyLWV2ZW50czogYWxsO1xuICBzdHJva2U6ICNjY2NjY2M7XG4gIGZpbGw6IHRyYW5zcGFyZW50O1xufVxuXG4uay1wcm9kdWN0aGVyb19fY29udHJvbHMgc3ZnOm50aC1jaGlsZCgyKSB7XG4gIGZsb2F0OiByaWdodDtcbn1cblxuLmstcHJvZHVjdGhlcm9fX2NvbnRyb2xzIHN2Zzpob3ZlciB7XG4gIHN0cm9rZTogI2Y0YjEzZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uay1wcm9kdWN0Zm9ybSBidXR0b25bZGlzYWJsZWRdIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiAjMDgwOTA3O1xufVxuXG4uay1wcm9kdWN0Zm9ybSBidXR0b25bZGlzYWJsZWRdOmhvdmVyIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tbGluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS1idW5kbGUgLmstcHJvZHVjdGZvcm0tLWJ1bmRsZXNlbGVjdCB7XG4gIGZsZXgtYmFzaXM6IDEwMCU7XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS1idW5kbGUgLmstcHJvZHVjdGZvcm0tLXN1Ym1pdCwgLmstcHJvZHVjdGZvcm0tLWJ1bmRsZSAuay1wcm9kdWN0Zm9ybS0tcHJpY2Uge1xuICBmbGV4LWJhc2lzOiA1MCU7XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS1idW5kbGUgLmstcHJvZHVjdGZvcm0tLXByaWNlIHtcbiAgb3JkZXI6IDI7XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS1oZWFkaW5nIHtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS12YXJpYW50cyB7XG4gIGZsZXgtYmFzaXM6IDEwMCU7XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS12YXJpYW50cyBpbnB1dFt0eXBlPSdyYWRpbyddIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS12YXJpYW50cyBpbnB1dFt0eXBlPSdyYWRpbyddICsgbGFiZWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItcmFkaXVzOiAwLjI1ZW07XG4gIGNvbG9yOiAjY2NjO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuNjY3ZW0gMS4xNWVtO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjRzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tdmFyaWFudHMgaW5wdXRbdHlwZT0ncmFkaW8nXSArIGxhYmVsOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tdmFyaWFudHMgaW5wdXRbdHlwZT0ncmFkaW8nXSArIGxhYmVsIHNwYW4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tdmFyaWFudHMgaW5wdXRbdHlwZT0ncmFkaW8nXSArIGxhYmVsOmFmdGVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZDogIzIyMjIyMjtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNHMgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSk7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSwgMCk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuLmstcHJvZHVjdGZvcm0tLXZhcmlhbnRzIGlucHV0W3R5cGU9J3JhZGlvJ10uc2VsZWN0ZWQgKyBsYWJlbCwgLmstcHJvZHVjdGZvcm0tLXZhcmlhbnRzIGlucHV0W3R5cGU9J3JhZGlvJ106Y2hlY2tlZCArIGxhYmVsIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS12YXJpYW50cyBpbnB1dFt0eXBlPSdyYWRpbyddLnNlbGVjdGVkICsgbGFiZWw6YWZ0ZXIsIC5rLXByb2R1Y3Rmb3JtLS12YXJpYW50cyBpbnB1dFt0eXBlPSdyYWRpbyddOmNoZWNrZWQgKyBsYWJlbDphZnRlciB7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEsIDEpO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3AgY2VudGVyO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tdmFyaWFudHNlbGVjdCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDAuNWVtO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tdmFyaWFudHNlbGVjdCBsYWJlbCB7XG4gIG1hcmdpbi1sZWZ0OiAwICFpbXBvcnRhbnQ7XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS12YXJpYW50c2VsZWN0Lmstb3V0LW9mLXN0b2NrLCAuay1wcm9kdWN0Zm9ybS0tdmFyaWFudHNlbGVjdC5oYXMtcXVhbnRpdHkge1xuICBtYXJnaW4tdG9wOiAxLjVlbTtcbn1cblxuLmstcHJvZHVjdGZvcm0tLXZhcmlhbnRzZWxlY3Quay1vdXQtb2Ytc3RvY2sgLmstcHJvZHVjdGZvcm0tLXZhcmlhbnR0b2dnbGUsIC5rLXByb2R1Y3Rmb3JtLS12YXJpYW50c2VsZWN0Lmhhcy1xdWFudGl0eSAuay1wcm9kdWN0Zm9ybS0tdmFyaWFudHRvZ2dsZSB7XG4gIHBhZGRpbmctdG9wOiAxZW07XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS12YXJpYW50c2VsZWN0Lmstb3V0LW9mLXN0b2NrIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS12YXJpYW50c2VsZWN0OmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tdmFyaWFudHNlbGVjdCAuay1iYWRnZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMjtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS12YXJpYW50c2VsZWN0IC5rLWJhZGdlLS1saW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMC4yNWVtIDFlbTtcbn1cblxuLmstcHJvZHVjdGZvcm0tLXZhcmlhbnRzZWxlY3QgLmstYmFkZ2UtLXF1YW50aXR5IHtcbiAgdG9wOiAtMWVtO1xuICByaWdodDogLTAuNWVtO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tdmFyaWFudHNlbGVjdCAuay1iYWRnZS0tcXVhbnRpdHkgLmstYmFkZ2UtLWxpbmVyIHtcbiAgd2lkdGg6IDJlbTtcbiAgaGVpZ2h0OiAyZW07XG4gIGJhY2tncm91bmQ6ICNmNGIxM2U7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cblxuLmstcHJvZHVjdGZvcm0tLXZhcmlhbnRzZWxlY3QgLmstYmFkZ2UtLXF1YW50aXR5IHNwYW4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tdmFyaWFudHNlbGVjdCAuay1iYWRnZS0tb3V0b2ZzdG9jayB7XG4gIHRvcDogLTAuODVlbTtcbiAgei1pbmRleDogMTtcbiAgbGVmdDogNTAlO1xuICB3aWR0aDogMTAwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tdmFyaWFudHNlbGVjdCAuay1iYWRnZS0tb3V0b2ZzdG9jayAuay1iYWRnZS0tbGluZXIge1xuICBiYWNrZ3JvdW5kOiAjYzBkOGJlO1xuICBmb250LXNpemU6IDc1JTtcbiAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tcXVhbnRpdHksIC5rLXByb2R1Y3Rmb3JtLS1wcmljZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDQ4LjUlO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tcXVhbnRpdHkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi10b3A6IDAuNWVtO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tcXVhbnRpdHkgaW5wdXRbdHlwZT0nbnVtYmVyJ10ge1xuICBhcHBlYXJhbmNlOiBub25lO1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXdlaWdodDogNTAwO1xuICBwYWRkaW5nOiAxLjI1ZW0gM2VtO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMjIyMjIyO1xuICBib3JkZXItcmFkaXVzOiAwLjI1ZW07XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS1xdWFudGl0eSAjay1yZWR1Y2UsIC5rLXByb2R1Y3Rmb3JtLS1xdWFudGl0eSAuay1jYXJ0LXNpZGViYXJfX2l0ZW0tYWN0aW9ucyAuay1yZWR1Y2UsIC5rLWNhcnQtc2lkZWJhcl9faXRlbS1hY3Rpb25zIC5rLXByb2R1Y3Rmb3JtLS1xdWFudGl0eSAuay1yZWR1Y2UsXG4uay1wcm9kdWN0Zm9ybS0tcXVhbnRpdHkgI2staW5jcmVhc2UsXG4uay1wcm9kdWN0Zm9ybS0tcXVhbnRpdHkgLmstY2FydC1zaWRlYmFyX19pdGVtLWFjdGlvbnMgLmstaW5jcmVhc2UsXG4uay1jYXJ0LXNpZGViYXJfX2l0ZW0tYWN0aW9ucyAuay1wcm9kdWN0Zm9ybS0tcXVhbnRpdHkgLmstaW5jcmVhc2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiAwLjVlbTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS1xdWFudGl0eSAjay1yZWR1Y2U6aG92ZXIsIC5rLXByb2R1Y3Rmb3JtLS1xdWFudGl0eSAuay1jYXJ0LXNpZGViYXJfX2l0ZW0tYWN0aW9ucyAuay1yZWR1Y2U6aG92ZXIsIC5rLWNhcnQtc2lkZWJhcl9faXRlbS1hY3Rpb25zIC5rLXByb2R1Y3Rmb3JtLS1xdWFudGl0eSAuay1yZWR1Y2U6aG92ZXIsXG4uay1wcm9kdWN0Zm9ybS0tcXVhbnRpdHkgI2staW5jcmVhc2U6aG92ZXIsXG4uay1wcm9kdWN0Zm9ybS0tcXVhbnRpdHkgLmstY2FydC1zaWRlYmFyX19pdGVtLWFjdGlvbnMgLmstaW5jcmVhc2U6aG92ZXIsXG4uay1jYXJ0LXNpZGViYXJfX2l0ZW0tYWN0aW9ucyAuay1wcm9kdWN0Zm9ybS0tcXVhbnRpdHkgLmstaW5jcmVhc2U6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cblxuLmstcHJvZHVjdGZvcm0tLXF1YW50aXR5ICNrLWluY3JlYXNlLFxuLmstcHJvZHVjdGZvcm0tLXF1YW50aXR5IC5rLWNhcnQtc2lkZWJhcl9faXRlbS1hY3Rpb25zIC5rLWluY3JlYXNlLFxuLmstY2FydC1zaWRlYmFyX19pdGVtLWFjdGlvbnMgLmstcHJvZHVjdGZvcm0tLXF1YW50aXR5IC5rLWluY3JlYXNlIHtcbiAgcmlnaHQ6IDAuNWVtO1xuICBsZWZ0OiBhdXRvO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tcHJpY2Uge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tcHJpY2UgcCB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiAyZW07XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS1wcmljZSAjay1idW5kbGUtcHJpY2UtcHJlZml4LFxuLmstcHJvZHVjdGZvcm0tLXByaWNlIHN1cCB7XG4gIGZvbnQtc2l6ZTogNTAlO1xuICBjb2xvcjogI2Y0YjEzZTtcbn1cblxuLmstcHJvZHVjdGZvcm0tLXByaWNlICNrLWJ1bmRsZS1wcmljZS1wcmVmaXgge1xuICBtYXJnaW4tYm90dG9tOiAtMWVtO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmstcHJvZHVjdGZvcm0tLXByaWNlIHN1cCB7XG4gIHBhZGRpbmctbGVmdDogMWVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogdGV4dC10b3A7XG4gIG1hcmdpbi10b3A6IDEuMzNlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tc3VibWl0IHtcbiAgb3JkZXI6IDI7XG4gIGZsZXgtYmFzaXM6IDEwMCU7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cblxuLmstcHJvZHVjdGZvcm0tLXN1Ym1pdCAuay1idXR0b24ge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmstcHJvZHVjdGZvcm0tLWJ1bmRsZXNlbGVjdF9faXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tYnVuZGxlc2VsZWN0X19pdGVtIGlucHV0LFxuLmstcHJvZHVjdGZvcm0tLWJ1bmRsZXNlbGVjdF9faXRlbSBsYWJlbCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWluLXdpZHRoOiBhdXRvO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tYnVuZGxlc2VsZWN0X19pdGVtIGlucHV0OmhvdmVyLFxuLmstcHJvZHVjdGZvcm0tLWJ1bmRsZXNlbGVjdF9faXRlbSBsYWJlbDpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmstcHJvZHVjdGZvcm0tLWJ1bmRsZXNlbGVjdF9faXRlbSBpbnB1dCB7XG4gIG1hcmdpbi1yaWdodDogMWVtO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tYnVuZGxlc2VsZWN0X19pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tYnVuZGxlc2VsZWN0X19pdGVtLS1kcmF3ZXIge1xuICBoZWlnaHQ6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRyYW5zaXRpb246IGhlaWdodCAwLjJzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tYnVuZGxlc2VsZWN0X19pdGVtLS1kcmF3ZXIgLmstcHJvZHVjdGZvcm0tLWJ1bmRsZXNlbGVjdF9fdmFyaWFudCB7XG4gIG1hcmdpbi1ib3R0b206IDAuNWVtO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tYnVuZGxlc2VsZWN0X19pdGVtLS1kcmF3ZXIgLmstcHJvZHVjdGZvcm0tLWJ1bmRsZXNlbGVjdF9fdmFyaWFudDpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmstcHJvZHVjdGZvcm0tLWJ1bmRsZXNlbGVjdCBpbnB1dFt0eXBlPSdyYWRpbyddIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS1idW5kbGVzZWxlY3QgaW5wdXRbdHlwZT0ncmFkaW8nXSArIGxhYmVsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuICBjb2xvcjogI2NjYztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAwLjY2N2VtIDEuMTVlbTtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC40cyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmstcHJvZHVjdGZvcm0tLWJ1bmRsZXNlbGVjdCBpbnB1dFt0eXBlPSdyYWRpbyddICsgbGFiZWw6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS1idW5kbGVzZWxlY3QgaW5wdXRbdHlwZT0ncmFkaW8nXSArIGxhYmVsIHNwYW4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4uay1wcm9kdWN0Zm9ybS0tYnVuZGxlc2VsZWN0IGlucHV0W3R5cGU9J3JhZGlvJ10gKyBsYWJlbDphZnRlciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICMyMjIyMjI7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEsIDApO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b20gY2VudGVyO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS1idW5kbGVzZWxlY3QgaW5wdXRbdHlwZT0ncmFkaW8nXS5zZWxlY3RlZCArIGxhYmVsLCAuay1wcm9kdWN0Zm9ybS0tYnVuZGxlc2VsZWN0IGlucHV0W3R5cGU9J3JhZGlvJ106Y2hlY2tlZCArIGxhYmVsIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5rLXByb2R1Y3Rmb3JtLS1idW5kbGVzZWxlY3QgaW5wdXRbdHlwZT0ncmFkaW8nXS5zZWxlY3RlZCArIGxhYmVsOmFmdGVyLCAuay1wcm9kdWN0Zm9ybS0tYnVuZGxlc2VsZWN0IGlucHV0W3R5cGU9J3JhZGlvJ106Y2hlY2tlZCArIGxhYmVsOmFmdGVyIHtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSk7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSwgMSk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IHRvcCBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1ODBweCkge1xuICAuay1wcm9kdWN0aGVyby0tZGV0YWlsc19fY29udGVudCB7XG4gICAgcGFkZGluZzogMmVtO1xuICB9XG4gIC5rLXByb2R1Y3Rmb3JtLS1pdGVtIHtcbiAgICBvcmRlcjogMSAhaW1wb3J0YW50O1xuICB9XG4gIC5rLXByb2R1Y3Rmb3JtLS1xdWFudGl0eSwgLmstcHJvZHVjdGZvcm0tLXByaWNlLCAuay1wcm9kdWN0Zm9ybS0tc3VibWl0IHtcbiAgICBtYXJnaW4tdG9wOiAwLjVlbTtcbiAgfVxuICAuay1wcm9kdWN0Zm9ybS0tcXVhbnRpdHksIC5rLXByb2R1Y3Rmb3JtLS1wcmljZSB7XG4gICAgZmxleC1iYXNpczogMjUlO1xuICB9XG4gIC5rLXByb2R1Y3Rmb3JtLS1zdWJtaXQge1xuICAgIGZsZXgtYmFzaXM6IDQwJTtcbiAgfVxuICAuay1wcm9kdWN0Zm9ybS0tYnVuZGxlc2VsZWN0X19pdGVtLS1mbGV4IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgIHBhZGRpbmc6IDFlbSAwO1xuICB9XG4gIC5rLXByb2R1Y3Rmb3JtLS1idW5kbGVzZWxlY3RfX2l0ZW0tLWZsZXggLmstcHJvZHVjdGZvcm0tLWJ1bmRsZXNlbGVjdF9fdmFyaWFudCB7XG4gICAgZmxleC1iYXNpczogNDguNSU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gIC5rLXByb2R1Y3Rmb3JtLS12YXJpYW50cyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgfVxuICAuay1wcm9kdWN0Zm9ybS0tdmFyaWFudHNlbGVjdCB7XG4gICAgZmxleC1iYXNpczogNDguNSU7XG4gIH1cbiAgLmstcHJvZHVjdGZvcm0tLXF1YW50aXR5LCAuay1wcm9kdWN0Zm9ybS0tc3VibWl0LCAuay1wcm9kdWN0Zm9ybS0tcHJpY2Uge1xuICAgIG1hcmdpbi10b3A6IDJlbTtcbiAgfVxuICAuay1wcm9kdWN0Zm9ybS0tcXVhbnRpdHkge1xuICAgIGZsZXgtYmFzaXM6IDE1JTtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwJTtcbiAgfVxuICAuay1wcm9kdWN0Zm9ybS0tc3VibWl0IHtcbiAgICBmbGV4LWJhc2lzOiA1MCU7XG4gIH1cbiAgLmstcHJvZHVjdGZvcm0tLXF1YW50aXR5IGlucHV0W3R5cGU9J251bWJlciddIHtcbiAgICBwYWRkaW5nOiAxLjI1ZW0gMDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmstcHJvZHVjdGhlcm8gLmstaW5uZXIge1xuICAgIHBhZGRpbmc6IDRlbSA1JTtcbiAgfVxuICAuay1wcm9kdWN0aGVybyAuay1pbm5lcjpiZWZvcmUsIC5rLXByb2R1Y3RoZXJvIC5rLWlubmVyOmFmdGVyIHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBjb250ZW50OiAnJztcbiAgICBjbGVhcjogYm90aDtcbiAgfVxuICAuay1wcm9kdWN0aGVyby0tZ2FsbGVyeSwgLmstcHJvZHVjdGhlcm8tLWRldGFpbHMge1xuICAgIGZsb2F0OiBsZWZ0O1xuICB9XG4gIC5rLXByb2R1Y3RoZXJvLS1nYWxsZXJ5IHtcbiAgICB3aWR0aDogNDAlO1xuICAgIG1hcmdpbi1yaWdodDogNSU7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICAuay1wcm9kdWN0aGVyby0tZGV0YWlscyB7XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxuICAuay1wcm9kdWN0aGVyby0tZGV0YWlsc19fY29udGVudCB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICAuay1wcm9kdWN0Zm9ybS0tcXVhbnRpdHkge1xuICAgIGZsZXgtYmFzaXM6IDIwJTtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gIH1cbiAgLmstcHJvZHVjdGZvcm0tLXN1Ym1pdCB7XG4gICAgZmxleC1iYXNpczogNDUlO1xuICB9XG4gIC5rLXByb2R1Y3Rmb3JtLS1wcmljZSB7XG4gICAgZmxleC1iYXNpczogMjAlO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxNDQwcHgpIHtcbiAgLmstcHJvZHVjdGhlcm8gLmstaW5uZXIge1xuICAgIHBhZGRpbmc6IDhlbSA1JTtcbiAgfVxuICAuay1wcm9kdWN0aGVyby0tZ2FsbGVyeSB7XG4gICAgbWFyZ2luLXJpZ2h0OiAxNSU7XG4gIH1cbiAgLmstcHJvZHVjdGhlcm8tLWRldGFpbHMge1xuICAgIHdpZHRoOiA0NSU7XG4gIH1cbiAgLmstcHJvZHVjdGhlcm8gLmstcnRlLWNvbnRlbnQsXG4gIC5rLXByb2R1Y3RoZXJvIC5rLXByb2R1Y3Rmb3JtIHtcbiAgICB3aWR0aDogNzUlO1xuICB9XG59XG5cbi5rLXByb2R1Y3RkZXRhaWxzLS1pbWFnZSAuay1maWd1cmUge1xuICBib3JkZXItcmFkaXVzOiAwLjY2N2VtO1xufVxuXG4uay1wcm9kdWN0ZGV0YWlscy0taW1hZ2UgLmstZmlndXJlLS1saW5lciB7XG4gIHBhZGRpbmctYm90dG9tOiAxMjguNTclO1xufVxuXG4uay1wcm9kdWN0ZGV0YWlscy0tYWNjb3JkaW9uIHVsIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG5cbi5rLXByb2R1Y3RkZXRhaWxzLS1hY2NvcmRpb24gbGkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctbGVmdDogMWVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbn1cblxuLmstcHJvZHVjdGRldGFpbHMtLWFjY29yZGlvbiBsaSBwIHtcbiAgbWFyZ2luOiAwO1xuICBmb250LXNpemU6IDEyNSU7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG59XG5cbi5rLXByb2R1Y3RkZXRhaWxzLS1hY2NvcmRpb24gbGk6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5rLXByb2R1Y3RkZXRhaWxzLS1hY2NvcmRpb24gbGk6YmVmb3JlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMS4xZW07XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAwLjEyNWVtO1xuICBoZWlnaHQ6IDAuMTI1ZW07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZDogIzA4MDkwNztcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4uay1wcm9kdWN0ZGV0YWlscy0tYWNjb3JkaW9uX19pdGVtIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7XG59XG5cbi5rLXByb2R1Y3RkZXRhaWxzLS1hY2NvcmRpb25fX2l0ZW0ub3BlbiBzcGFuIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHJvdGF0ZSg0MDVkZWcpO1xufVxuXG4uay1wcm9kdWN0ZGV0YWlscy0tYWNjb3JkaW9uX19pdGVtOmxhc3QtY2hpbGQge1xuICBib3JkZXItYm90dG9tOiBub25lO1xufVxuXG4uay1wcm9kdWN0ZGV0YWlscy0tYWNjb3JkaW9uX190cmlnZ2VyIHtcbiAgcGFkZGluZzogMWVtIDA7XG59XG5cbi5rLXByb2R1Y3RkZXRhaWxzLS1hY2NvcmRpb25fX3RyaWdnZXIgcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogMTI1JTtcbn1cblxuLmstcHJvZHVjdGRldGFpbHMtLWFjY29yZGlvbl9fdHJpZ2dlciBzcGFuIHtcbiAgY29sb3I6ICNmNGIxM2U7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IC0xZW07XG4gIHRvcDogNDIuNSU7XG4gIGZvbnQtc2l6ZTogMTUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHJvdGF0ZSgwKTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNXMgY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMS4yNzUpO1xufVxuXG4uay1wcm9kdWN0ZGV0YWlscy0tYWNjb3JkaW9uX190cmlnZ2VyOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uay1wcm9kdWN0ZGV0YWlscy0tYWNjb3JkaW9uX19kcmF3ZXIge1xuICBoZWlnaHQ6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRyYW5zaXRpb246IGhlaWdodCAwLjJzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG4uay1wcm9kdWN0ZGV0YWlscy0tYWNjb3JkaW9uX19kcmF3ZXIgdWwge1xuICBwYWRkaW5nLWJvdHRvbTogMWVtO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgLmstcHJvZHVjdGRldGFpbHMtLWhlYWRsaW5lIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgLmstcHJvZHVjdGRldGFpbHMtLW1haW4ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgICBwYWRkaW5nLXRvcDogMmVtO1xuICB9XG4gIC5rLXByb2R1Y3RkZXRhaWxzLS1hY2NvcmRpb24sIC5rLXByb2R1Y3RkZXRhaWxzLS1pbWFnZSB7XG4gICAgZmxleC1iYXNpczogNDUlO1xuICB9XG4gIC5rLXByb2R1Y3RkZXRhaWxzLS1pbWFnZSB7XG4gICAgb3JkZXI6IDI7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDExOTlweCkge1xuICAuay1wcm9kdWN0ZGV0YWlscy0tYWNjb3JkaW9uIHtcbiAgICBmbGV4LWJhc2lzOiAzNSU7XG4gIH1cbiAgLmstcHJvZHVjdGRldGFpbHMtLWltYWdlIHtcbiAgICBmbGV4LWJhc2lzOiA1MCU7XG4gIH1cbn1cblxuLmstbGF0ZXN0YmF0Y2gtLXRpdGxlIC5rLWhlYWRsaW5lIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLmstbGF0ZXN0YmF0Y2gtLWludHJvIHtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuXG4uay1sYXRlc3RiYXRjaC0tdGFicyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7XG59XG5cbi5rLWxhdGVzdGJhdGNoLS10YWJzOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uay1sYXRlc3RiYXRjaC0tdGFic19fdGFiIHtcbiAgZmxleC1iYXNpczogMjUlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjY2NjO1xuICBwYWRkaW5nOiAwLjVlbSAwO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuNHMgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSk7XG59XG5cbi5rLWxhdGVzdGJhdGNoLS10YWJzX190YWIgc3BhbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDc1JTtcbiAgY29sb3I6ICNjY2NjY2M7XG59XG5cbi5rLWxhdGVzdGJhdGNoLS10YWJzX190YWIuYWN0aXZlIHtcbiAgYmFja2dyb3VuZDogIzIyMjIyMjtcbn1cblxuLmstbGF0ZXN0YmF0Y2gtLXRhYnNfX3RhYi5hY3RpdmUgc3BhbiB7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uay1sYXRlc3RiYXRjaC0tdGFic19fdGFiOmZpcnN0LWNoaWxkLCAuay1sYXRlc3RiYXRjaC0tdGFic19fdGFiOm50aC1jaGlsZCg1KSwgLmstbGF0ZXN0YmF0Y2gtLXRhYnNfX3RhYjpudGgtY2hpbGQoOSksIC5rLWxhdGVzdGJhdGNoLS10YWJzX190YWI6bnRoLWNoaWxkKDEzKSB7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2NjYztcbn1cblxuLmstbGF0ZXN0YmF0Y2gtLXJlc3VsdHNfX2xpbmVyIHtcbiAgYmFja2dyb3VuZDogI2Y3ZjdmNztcbiAgcGFkZGluZzogMWVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xufVxuXG4uay1sYXRlc3RiYXRjaC0tcmVzdWx0c19fY29sdW1uIHtcbiAgZmxleC1iYXNpczogMTAwJTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7XG4gIHBhZGRpbmc6IDFlbSAwO1xufVxuXG4uay1sYXRlc3RiYXRjaC0tcmVzdWx0c19fY29sdW1uOmZpcnN0LWNoaWxkIHtcbiAgcGFkZGluZy10b3A6IDA7XG59XG5cbi5rLWxhdGVzdGJhdGNoLS1yZXN1bHRzX19jb2x1bW46bnRoLWNoaWxkKDMpIHAge1xuICBmb250LXNpemU6IDIwMCU7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG59XG5cbi5rLWxhdGVzdGJhdGNoLS1yZXN1bHRzX19jb2x1bW46bnRoLWNoaWxkKDMpIHAgc3BhbiB7XG4gIGZvbnQtc2l6ZTogMC41ZW07XG4gIHZlcnRpY2FsLWFsaWduOiB0ZXh0LXRvcDtcbn1cblxuLmstbGF0ZXN0YmF0Y2gtLXJlc3VsdHNfX2NvbHVtbjpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMWVtO1xuICBwYWRkaW5nOiAyZW0gMDtcbiAgYm9yZGVyLWJvdHRvbTogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kOiByZWQ7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC40cyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbiAgYm9yZGVyLXJhZGl1czogMC4zM2VtO1xufVxuXG4uay1sYXRlc3RiYXRjaC0tcmVzdWx0c19fY29sdW1uOmxhc3QtY2hpbGQgYSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uay1sYXRlc3RiYXRjaC0tcmVzdWx0c19fY29sdW1uOmxhc3QtY2hpbGQgc3BhbiB7XG4gIGNvbG9yOiAjZmZmO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLmstbGF0ZXN0YmF0Y2gtLXJlc3VsdHNfX2NvbHVtbjpsYXN0LWNoaWxkOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogI2U2MDAwMDtcbn1cblxuLmstbGF0ZXN0YmF0Y2gtLXJlc3VsdHNfX2NvbHVtbiBkaXY6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi5rLWxhdGVzdGJhdGNoLS1yZXN1bHRzX19jb2x1bW4gcCB7XG4gIG1hcmdpbjogMDtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU4MHB4KSB7XG4gIC5rLWxhdGVzdGJhdGNoLS10YWJzX190YWIge1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgfVxuICAuay1sYXRlc3RiYXRjaC0tdGFic19fdGFiIHNwYW4ge1xuICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmstbGF0ZXN0YmF0Y2gtLWludHJvIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIH1cbiAgLmstbGF0ZXN0YmF0Y2gtLXRpdGxlLCAuay1sYXRlc3RiYXRjaC0tZGVzY3JpcHRpb24ge1xuICAgIGZsZXgtYmFzaXM6IDQ4LjUlO1xuICB9XG4gIC5rLWxhdGVzdGJhdGNoLS1kZXNjcmlwdGlvbiBwOmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMTk5cHgpIHtcbiAgLmstbGF0ZXN0YmF0Y2gtLWludHJvIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG4gIH1cbiAgLmstbGF0ZXN0YmF0Y2gtLXRhYnMge1xuICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIH1cbiAgLmstbGF0ZXN0YmF0Y2gtLXJlc3VsdHNfX2xpbmVyIHtcbiAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICAgIHBhZGRpbmc6IDMuNzVlbTtcbiAgfVxuICAuay1sYXRlc3RiYXRjaC0tcmVzdWx0c19fY29sdW1uIHtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDUlO1xuICB9XG4gIC5rLWxhdGVzdGJhdGNoLS1yZXN1bHRzX19jb2x1bW4gcCB7XG4gICAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgfVxuICAuay1sYXRlc3RiYXRjaC0tcmVzdWx0c19fY29sdW1uOmZpcnN0LWNoaWxkIHtcbiAgICBmbGV4LWJhc2lzOiAxMCU7XG4gIH1cbiAgLmstbGF0ZXN0YmF0Y2gtLXJlc3VsdHNfX2NvbHVtbjpudGgtY2hpbGQoMikge1xuICAgIGZsZXgtYmFzaXM6IDMwJTtcbiAgfVxuICAuay1sYXRlc3RiYXRjaC0tcmVzdWx0c19fY29sdW1uOm50aC1jaGlsZCgzKSB7XG4gICAgZmxleC1iYXNpczogMjUlO1xuICB9XG4gIC5rLWxhdGVzdGJhdGNoLS1yZXN1bHRzX19jb2x1bW46bnRoLWNoaWxkKDMpIHA6Zmlyc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICB9XG4gIC5rLWxhdGVzdGJhdGNoLS1yZXN1bHRzX19jb2x1bW46bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luOiAwIDAgMCBhdXRvO1xuICAgIGZsZXgtYmFzaXM6IDIwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTQ0MHB4KSB7XG4gIC5rLWxhdGVzdGJhdGNoLS1pbnRybyB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIG1hcmdpbi1ib3R0b206IDZlbTtcbiAgfVxuICAuay1sYXRlc3RiYXRjaC0tdGl0bGUge1xuICAgIG1hcmdpbi1yaWdodDogMS41JTtcbiAgfVxuICAuay1sYXRlc3RiYXRjaC0tZGVzY3JpcHRpb24ge1xuICAgIGZsZXgtYmFzaXM6IDM1JTtcbiAgfVxuICAuay1sYXRlc3RiYXRjaC0tcmVzdWx0c19fbGluZXIge1xuICAgIHBhZGRpbmc6IDRlbTtcbiAgfVxuICAuay1sYXRlc3RiYXRjaC0tcmVzdWx0c19fY29sdW1uIGRpdjpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMi4zM2VtO1xuICB9XG4gIC5rLWxhdGVzdGJhdGNoLS1yZXN1bHRzX19jb2x1bW46bnRoLWNoaWxkKDIpIHtcbiAgICBmbGV4LWJhc2lzOiAyNSU7XG4gIH1cbiAgLmstbGF0ZXN0YmF0Y2gtLXJlc3VsdHNfX2NvbHVtbjpudGgtY2hpbGQoMykge1xuICAgIGZsZXgtYmFzaXM6IDM1JTtcbiAgfVxuICAuay1sYXRlc3RiYXRjaC0tcmVzdWx0c19fY29sdW1uOm50aC1jaGlsZCgzKSBwIHtcbiAgICBmb250LXNpemU6IDI1MCU7XG4gIH1cbiAgLmstbGF0ZXN0YmF0Y2gtLXJlc3VsdHNfX2NvbHVtbjpudGgtY2hpbGQoMykgcCBzcGFuIHtcbiAgICBmb250LXNpemU6IDAuNWVtO1xuICB9XG4gIC5rLWxhdGVzdGJhdGNoLS1yZXN1bHRzX19jb2x1bW46bGFzdC1jaGlsZCB7XG4gICAgZmxleC1iYXNpczogMTUlO1xuICB9XG59XG5cbi5rLXByb2R1Y3RmYXEgLmstaW5uZXItLXhsIHtcbiAgYmFja2dyb3VuZDogI2YyZjJmMjtcbiAgYm9yZGVyLXJhZGl1czogLjc1ZW07XG59XG5cbi5rLXByb2R1Y3RmYXEtLXRpdGxlIC5rLWhlYWRsaW5lIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uay1wcm9kdWN0ZmFxLS1hY2NvcmRpb24gdWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuLmstcHJvZHVjdGZhcS0tYWNjb3JkaW9uX19pdGVtIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7XG59XG5cbi5rLXByb2R1Y3RmYXEtLWFjY29yZGlvbl9faXRlbTpmaXJzdC1jaGlsZCAuay1wcm9kdWN0ZmFxLS1hY2NvcmRpb25fX3RyaWdnZXIge1xuICBwYWRkaW5nLXRvcDogMDtcbn1cblxuLmstcHJvZHVjdGZhcS0tYWNjb3JkaW9uX19pdGVtOmxhc3QtY2hpbGQge1xuICBib3JkZXItYm90dG9tOiBub25lO1xufVxuXG4uay1wcm9kdWN0ZmFxLS1hY2NvcmRpb25fX2l0ZW0gLmstaGVhZGxpbmUge1xuICBtYXJnaW46IDA7XG59XG5cbi5rLXByb2R1Y3RmYXEtLWFjY29yZGlvbl9faXRlbTpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmstcHJvZHVjdGZhcS0tYWNjb3JkaW9uX190cmlnZ2VyIHtcbiAgcGFkZGluZzogMmVtIDAgMWVtIDA7XG59XG5cbi5rLXByb2R1Y3RmYXEtLWFjY29yZGlvbl9fZHJhd2VyIHtcbiAgaGVpZ2h0OiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0cmFuc2l0aW9uOiBoZWlnaHQgMC4ycyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbn1cblxuLmstcHJvZHVjdGZhcS0tYWNjb3JkaW9uX19kcmF3ZXItLWxpbmVyIHtcbiAgcGFkZGluZzogMCAwIDJlbSAwO1xufVxuXG4uay1wcm9kdWN0ZmFxLS1hY2NvcmRpb25fX2RyYXdlciBwIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmstcHJvZHVjdGZhcSAuay1pbm5lci0tbWQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgfVxuICAuay1wcm9kdWN0ZmFxLS10aXRsZSB7XG4gICAgZmxleC1iYXNpczogMjUlO1xuICB9XG4gIC5rLXByb2R1Y3RmYXEtLWFjY29yZGlvbiB7XG4gICAgZmxleC1iYXNpczogNjIuNSU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDExOTlweCkge1xuICAuay1wcm9kdWN0ZmFxLS1hY2NvcmRpb25fX2RyYXdlciBwIHtcbiAgICBtYXgtd2lkdGg6IDc1JTtcbiAgfVxufVxuXG4uay1wcm9kdWN0cmV2aWV3cy0tdGl0bGUgLmstaGVhZGxpbmUge1xuICBtYXJnaW46IDA7XG59XG5cbi5rLXByb2R1Y3RyZXZpZXdzLS1tYWluIGEge1xuICBjb2xvcjogI2Y0YjEzZTtcbn1cblxuLmstcHJvZHVjdHJldmlld3MtLW1haW4gYTpob3ZlciB7XG4gIGNvbG9yOiAjZDk4ZTBjO1xufVxuXG4uay1yZXZpZXcge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYztcbn1cblxuLmstcmV2aWV3Omxhc3QtY2hpbGQge1xuICBib3JkZXItYm90dG9tOiBub25lO1xufVxuXG4uay1yZXZpZXcgKiB7XG4gIG1hcmdpbjogMDtcbn1cblxuLmstcmV2aWV3LS1saW5lciB7XG4gIHBhZGRpbmc6IDNlbSAwO1xufVxuXG4uay1yZXZpZXctLXRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuXG4uay1yZXZpZXctLXRpdGxlIGgzIHtcbiAgZm9udC1mYW1pbHk6IFwiR1QgQW1lcmljYVwiLCBzYW5zLXNlcmlmO1xufVxuXG4uay1yZXZpZXctLWJvZHkge1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG5cbi5rLXJldmlldy0tbWV0YSBwLCAuay1yZXZpZXctLWFjdGlvbnMgcCB7XG4gIGNvbG9yOiAjY2NjY2NjO1xufVxuXG4uay1yZXZpZXctLW1ldGEge1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi5rLXJldmlldy0tYWN0aW9uc19faXRlbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmstcmV2aWV3LS1hY3Rpb25zX19pdGVtIC5rLWFycm93OmhvdmVyIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4uay1yZXZpZXctLWFjdGlvbnNfX2l0ZW0gLmstYXJyb3c6aG92ZXIgY2lyY2xlLFxuLmstcmV2aWV3LS1hY3Rpb25zX19pdGVtIC5rLWFycm93OmhvdmVyIHBvbHlsaW5lLFxuLmstcmV2aWV3LS1hY3Rpb25zX19pdGVtIC5rLWFycm93OmhvdmVyIGxpbmUge1xuICBzdHJva2U6ICNjY2NjY2M7XG59XG5cbi5rLXJldmlldy0tYWN0aW9uc19faXRlbSAqIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4uay1yZXZpZXctLWFjdGlvbnNfX2l0ZW0gLmstYXJyb3cge1xuICBtYXJnaW4tcmlnaHQ6IDAuNWVtO1xufVxuXG4uay1yZXZpZXctLWFjdGlvbnNfX2l0ZW06Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tcmlnaHQ6IDJlbTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5rLXByb2R1Y3RyZXZpZXdzIC5rLWlubmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIH1cbiAgLmstcHJvZHVjdHJldmlld3MgLmstcmV2aWV3OmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW4tdG9wOiAxZW07XG4gIH1cbiAgLmstcHJvZHVjdHJldmlld3MgLmstcmV2aWV3OmZpcnN0LWNoaWxkIC5rLXJldmlldy0tbGluZXIge1xuICAgIHBhZGRpbmctdG9wOiAwO1xuICB9XG4gIC5rLXByb2R1Y3RyZXZpZXdzIC5rLXJldmlldzpsYXN0LWNoaWxkIC5rLXJldmlldy0tbGluZXIge1xuICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICB9XG4gIC5rLXByb2R1Y3RyZXZpZXdzLS10aXRsZSB7XG4gICAgZmxleC1iYXNpczogMjUlO1xuICB9XG4gIC5rLXByb2R1Y3RyZXZpZXdzLS1tYWluIHtcbiAgICBmbGV4LWJhc2lzOiA2Mi41JTtcbiAgfVxufVxuXG4uay1wcm9kdWN0dmlkZW8tLXRpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG5cbi5rLXByb2R1Y3R2aWRlby0tdGl0bGUgLmstaGVhZGxpbmUge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uay1wcm9kdWN0dmlkZW8tLXZpZGVvaGVhZGluZyB7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgcGFkZGluZy10b3A6IDJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uay1wcm9kdWN0dmlkZW8tLXZpZGVvaGVhZGluZzpiZWZvcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwLjVlbTtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMC4zM2VtO1xuICBiYWNrZ3JvdW5kOiAjYzBkOGJlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG5cbi5rLXByb2R1Y3R2aWRlby0tdmlkZW9oZWFkaW5nICoge1xuICBtYXJnaW46IDA7XG59XG5cbi5rLXByb2R1Y3R2aWRlby0tYm9keSB7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cblxuLmstcHJvZHVjdHZpZGVvLS1ib2R5IC5rLWJ1dHRvbiB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cblxuLmstcHJvZHVjdHZpZGVvLS12aWRlbyB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDE1ZW07XG4gIG1hcmdpbjogYXV0bztcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gIC5rLXByb2R1Y3R2aWRlby0tdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDRlbTtcbiAgfVxuICAuay1wcm9kdWN0dmlkZW8tLW1haW4ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbiAgLmstcHJvZHVjdHZpZGVvLS12aWRlb2hlYWRpbmcge1xuICAgIGZsZXgtYmFzaXM6IDMzJTtcbiAgfVxuICAuay1wcm9kdWN0dmlkZW8tLWJvZHkge1xuICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG4gIC5rLXByb2R1Y3R2aWRlby0tdmlkZW8ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5rLXByb2R1Y3R2aWRlby0tdGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDVlbTtcbiAgfVxuICAuay1wcm9kdWN0dmlkZW8tLXZpZGVvaGVhZGluZyB7XG4gICAgZmxleC1iYXNpczogNDUlO1xuICB9XG4gIC5rLXByb2R1Y3R2aWRlby0tdmlkZW9oZWFkaW5nIHtcbiAgICBwYWRkaW5nLXRvcDogM2VtO1xuICB9XG4gIC5rLXByb2R1Y3R2aWRlby0tYm9keSB7XG4gICAgZmxleC1iYXNpczogNDUlO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbiAgLmstcHJvZHVjdHZpZGVvLS12aWRlbyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgfVxufVxuXG4uay12aWRlb2VtYmVkIC5rLWZpZ3VyZS0tbGluZXIge1xuICBwYWRkaW5nLWJvdHRvbTogNjIuNSU7XG59XG5cbi5rLXZpZGVvZW1iZWQ6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5rLWNhcnQge1xuICBiYWNrZ3JvdW5kOiAjZjJmMmYyO1xufVxuXG4uay1jYXJ0X19ub3RpY2VzIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uay1jYXJ0X19ub3RpY2VzIC53b29jb21tZXJjZS1ub3RpY2VzLXdyYXBwZXIsXG4uay1jYXJ0X19ub3RpY2VzIHVsIHtcbiAgcGFkZGluZy10b3A6IDNlbTtcbn1cblxuLmstY2FydF9fbm90aWNlcyB1bCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xufVxuXG4uay1jYXJ0LS1tZXRhIHtcbiAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDtcbn1cblxuLmstY2FydC0tbWV0YSBpbnB1dCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gIHBhZGRpbmc6IDFlbTtcbn1cblxuLmstY2FydC0tbWV0YV9fY291cG9uIHtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuXG4uay1jYXJ0LS1tZXRhX19jb3Vwb24gbGFiZWwsXG4uay1jYXJ0LS1tZXRhX19jb3Vwb24gaW5wdXQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWluLXdpZHRoOiAxMDAlO1xufVxuXG4uay1jYXJ0LS1tZXRhX19hY3Rpb25zIC5rLWJ1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uay1jYXJ0LS1tZXRhX19hY3Rpb25zIC5rLWJ1dHRvbjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLmstY2FydC0tcXVhbnRpdHkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi10b3A6IDAuNWVtO1xufVxuXG4uay1jYXJ0LS1xdWFudGl0eSBpbnB1dFt0eXBlPSdudW1iZXInXSB7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHBhZGRpbmc6IDEuMjVlbSAzZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkICMyMjIyMjI7XG4gIGJvcmRlci1yYWRpdXM6IDAuMjVlbTtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLmstY2FydC0tcXVhbnRpdHkgLmstcmVkdWNlLFxuLmstY2FydC0tcXVhbnRpdHkgLmstaW5jcmVhc2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiAwLjVlbTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5rLWNhcnQtLXF1YW50aXR5IC5rLXJlZHVjZTpob3Zlcixcbi5rLWNhcnQtLXF1YW50aXR5IC5rLWluY3JlYXNlOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uay1jYXJ0LS1xdWFudGl0eSAuay1pbmNyZWFzZSB7XG4gIHJpZ2h0OiAwLjVlbTtcbiAgbGVmdDogYXV0bztcbn1cblxuLmstY2FydC0tdGl0bGVyb3cge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uay1jYXJ0LS10aXRsZXJvdyBwIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uay1jYXJ0LS1pdGVtIHtcbiAgcGFkZGluZzogM2VtIDA7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xufVxuXG4uay1jYXJ0LS1pdGVtOmxhc3QtY2hpbGQge1xuICBib3JkZXItYm90dG9tOiAwO1xufVxuXG4uay1jYXJ0LS1pdGVtX19saW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbn1cblxuLmstY2FydC0taXRlbV9fdGh1bWJuYWlsLCAuay1jYXJ0LS1pdGVtX190aXRsZSB7XG4gIGZsZXgtYmFzaXM6IDEwMCU7XG59XG5cbi5rLWNhcnQtLWl0ZW1fX3F1YW50aXR5LCAuay1jYXJ0LS1pdGVtX19wcmljZSB7XG4gIGZsZXgtYmFzaXM6IDQ4LjUlO1xufVxuXG4uay1jYXJ0LS1pdGVtX19xdWFudGl0eSB7XG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG59XG5cbi5rLWNhcnQtLWl0ZW1fX3ByaWNlIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5rLWNhcnQtLWl0ZW1fX3RodW1ibmFpbCBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG4uay1jYXJ0LS1pdGVtX190aXRsZSAuay1oZWFkbGluZSB7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG4gIG1hcmdpbjogMDtcbn1cblxuLmstY2FydC0taXRlbV9fdGl0bGUgYSB7XG4gIGNvbG9yOiAjMDgwOTA3O1xufVxuXG4uay1jYXJ0LS1pdGVtX190aXRsZSBhOmhvdmVyIHtcbiAgY29sb3I6ICNmNGIxM2U7XG59XG5cbi5rLWNhcnQtLWl0ZW1fX3F1YW50aXR5IGxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5rLWNhcnQtLWl0ZW1fX3F1YW50aXR5IC5rLXByb2R1Y3Rmb3JtLS1xdWFudGl0eSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uay1jYXJ0LS1pdGVtX19wcmljZSB7XG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xuICBtYXJnaW4tYm90dG9tOiAwLjc1ZW07XG59XG5cbi5rLWNhcnQtLWl0ZW1fX3ByaWNlIC5rLWJpZ3RleHQge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogMS41ZW07XG59XG5cbi5rLWNhcnQtLWl0ZW0gdWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5rLWNhcnQtLWl0ZW1fX2J1bmRsZWRpdGVtIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZWRlZGU7XG4gIHBhZGRpbmc6IDAuNWVtIDA7XG59XG5cbi5rLWNhcnQtLWl0ZW1fX2J1bmRsZWRpdGVtOmZpcnN0LWNoaWxkIHtcbiAgcGFkZGluZy10b3A6IDA7XG59XG5cbi5rLWNhcnQtLWl0ZW1fX2J1bmRsZWRpdGVtOmxhc3QtY2hpbGQge1xuICBib3JkZXItYm90dG9tOiAwO1xufVxuXG4uay1jYXJ0LS1pdGVtX19idW5kbGVkaXRlbV9fcHJpY2Uge1xuICBjb2xvcjogI2Y0YjEzZTtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5rLWNhcnQtLWl0ZW1fX2J1bmRsZWRpdGVtX19wcmljZSBzdXAge1xuICBjb2xvcjogIzA4MDkwNztcbiAgcGFkZGluZy1sZWZ0OiAxZW07XG59XG5cbi5rLWNhcnQtLXNpZGViYXIge1xuICBtYXJnaW46IDJlbSAwO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxuXG4uay1jYXJ0LS1zaWRlYmFyIC5rLXZldGVyYW4tY291cG9uIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZWRlZGU7XG4gIHBhZGRpbmctYm90dG9tOiAwLjVlbTtcbn1cblxuLmstY2FydC0tc2lkZWJhciAuay12ZXRlcmFuLWNvdXBvbl9fbGluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5rLWNhcnQtLXNpZGViYXIgLmstdmV0ZXJhbi1jb3Vwb25fX3RpdGxlIHtcbiAgZmxleC1iYXNpczogNzUlO1xufVxuXG4uay1jYXJ0LS1zaWRlYmFyIC5rLXZldGVyYW4tY291cG9uX190aXRsZSBwIHtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbn1cblxuLmstY2FydC0tc2lkZWJhciAuay12ZXRlcmFuLWNvdXBvbl9fYW1vdW50IHtcbiAgZmxleC1iYXNpczogMjUlO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLmstY2FydC0tc2lkZWJhciAuay12ZXRlcmFuLWNvdXBvbl9fYW1vdW50IGEge1xuICBjb2xvcjogI2Y0YjEzZTtcbn1cblxuLmstY2FydC0tc2lkZWJhciAuay12ZXRlcmFuLWNvdXBvbl9fYW1vdW50IGE6aG92ZXIge1xuICBjb2xvcjogcmVkICFpbXBvcnRhbnQ7XG59XG5cbi5rLWNhcnQtLXNpZGViYXJfX2xpbmVyIHtcbiAgcGFkZGluZzogMmVtO1xufVxuXG4uay1jYXJ0LS1zaWRlYmFyICoge1xuICBtYXJnaW46IDA7XG59XG5cbi5rLWNhcnQtLXNpZGViYXIgLmstYmlndGV4dCB7XG4gIGZvbnQtc2l6ZTogMjAwJTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLmstY2FydC0tc2lkZWJhciAuay1jb3Vwb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgcGFkZGluZy1ib3R0b206IDFlbTtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZWRlZGU7XG59XG5cbi5rLWNhcnQtLXNpZGViYXIgLmstY291cG9uX190aXRsZSwgLmstY2FydC0tc2lkZWJhciAuay1jb3Vwb25fX2Rpc2NvdW50IHtcbiAgZmxleC1iYXNpczogNDguNSU7XG59XG5cbi5rLWNhcnQtLXNpZGViYXIgLmstY291cG9uX19kaXNjb3VudCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uay1jYXJ0LS1zaWRlYmFyIC5rLWNvdXBvbl9fZGlzY291bnQgYSB7XG4gIGNvbG9yOiAjZjRiMTNlO1xufVxuXG4uay1jYXJ0LS1zaWRlYmFyIC5rLWNvdXBvbl9fZGlzY291bnQgYTpob3ZlciB7XG4gIGNvbG9yOiByZWQgIWltcG9ydGFudDtcbn1cblxuLmstY2FydC0tc2lkZWJhciAuay1idXR0b24ge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmstY2FydC0tc2lkZWJhciAuay1idXR0b24tLXByaW1hcnkge1xuICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbn1cblxuLmstY2FydC0tc2lkZWJhcl9fbWV0YSB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cblxuLmstY2FydC0tc2lkZWJhcl9fbWV0YSBwIHtcbiAgZm9udC1zaXplOiA5MCU7XG59XG5cbi5rLWNhcnQtLWFjdGlvbnMge1xuICBtYXJnaW4tdG9wOiAyZW07XG4gIHBhZGRpbmctbGVmdDogMTAlO1xufVxuXG4uay1jYXJ0LS1hY3Rpb25zIHNwYW4gc3BhbiB7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5rLWNhcnRfX3N1YnRvdGFsIHtcbiAgcGFkZGluZy10b3A6IDFlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi5rLWNhcnRfX2NvbnRpbnVlIHtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuXG4uay1jYXJ0X19tZXRhIHAge1xuICBmb250LXNpemU6IDgwJTtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuXG4uay1jYXJ0X19tZXRhIHA6Zmlyc3QtY2hpbGQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5rLWNhcnRfX21ldGEgYSB7XG4gIGNvbG9yOiAjZjRiMTNlO1xufVxuXG4uay1jYXJ0X19tZXRhIGE6aG92ZXIge1xuICBjb2xvcjogI2Q5OGUwYyAhaW1wb3J0YW50O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgLmstY2FydC0taXRlbV9fdGl0bGUsIC5rLWNhcnQtLWl0ZW1fX3RodW1ibmFpbCB7XG4gICAgZmxleC1iYXNpczogNDguNSU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5rLWNhcnQgPiAuay1pbm5lcjpiZWZvcmUsIC5rLWNhcnQgPiAuay1pbm5lcjphZnRlciB7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgY29udGVudDogJyc7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbiAgLmstY2FydF9faGVhZGxpbmUge1xuICAgIHBhZGRpbmctYm90dG9tOiA0ZW07XG4gIH1cbiAgLmstY2FydF9faGVhZGxpbmUgaDEge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gIH1cbiAgLmstY2FydC0tbWFpbiwgLmstY2FydC0tc2lkZWJhciB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gIH1cbiAgLmstY2FydC0tbWFpbiB7XG4gICAgd2lkdGg6IDY1JTtcbiAgfVxuICAuay1jYXJ0LS1zaWRlYmFyIHtcbiAgICB3aWR0aDogMzAlO1xuICAgIG1hcmdpbi1sZWZ0OiA1JTtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgdG9wOiAxMGVtO1xuICB9XG4gIC5rLWNhcnQtLXRpdGxlcm93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG4gIH1cbiAgLmstY2FydC0tdGl0bGVyb3cgLmstY2FydC0tdGl0bGVpdGVtIHtcbiAgICBmbGV4LWJhc2lzOiAyMi41JTtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMWVtO1xuICB9XG4gIC5rLWNhcnQtLXRpdGxlcm93IC5rLWNhcnQtLXRpdGxlaXRlbTpmaXJzdC1jaGlsZCB7XG4gICAgZmxleC1iYXNpczogMzIuNSU7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxuICAuay1jYXJ0LS1xdWFudGl0eSB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxuICAuay1jYXJ0LS1pdGVtX19xdWFudGl0eSwgLmstY2FydC0taXRlbV9fcHJpY2Uge1xuICAgIGZsZXgtYmFzaXM6IDIyLjUlO1xuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG4gIH1cbiAgLmstY2FydC0taXRlbV9fdGh1bWJuYWlsIHtcbiAgICBmbGV4LWJhc2lzOiAxMCU7XG4gIH1cbiAgLmstY2FydC0taXRlbV9fdGl0bGUge1xuICAgIGZsZXgtYmFzaXM6IDMyLjUlO1xuICB9XG4gIC5rLWNhcnQtLWl0ZW1fX3ByaWNlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG4gIC5rLWNhcnQtLW1ldGEge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWF4LXdpZHRoOiAyNWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxNDQwcHgpIHtcbiAgLmstY2FydC0tbWFpbiB7XG4gICAgd2lkdGg6IDcwJTtcbiAgfVxuICAuay1jYXJ0LS1zaWRlYmFyIHtcbiAgICB3aWR0aDogMjUlO1xuICB9XG59XG5cbi5rLXByb2R1Y3RsaXN0aW5nIC5rLXByb2R1Y3RjYXJkIHtcbiAgbWFyZ2luLWJvdHRvbTogNGVtO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgLmstcHJvZHVjdGxpc3RpbmcgLmstaW5uZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICB9XG4gIC5rLXByb2R1Y3RsaXN0aW5nIC5rLXByb2R1Y3RjYXJkIHtcbiAgICBmbGV4LWJhc2lzOiA0OC41JTtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuNzUlO1xuICAgIG1hcmdpbi1ib3R0b206IDZlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTE5OXB4KSB7XG4gIC5rLXByb2R1Y3RsaXN0aW5nIC5rLXByb2R1Y3RjYXJkIHtcbiAgICBmbGV4LWJhc2lzOiAzMiU7XG4gICAgbWFyZ2luLXJpZ2h0OiAxJTtcbiAgfVxufVxuXG4uay1ibG9ncHJvbW8gLmstYXJ0aWNsZWNhcmQge1xuICBtYXJnaW4tYm90dG9tOiAzZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1ODBweCkge1xuICAuay1ibG9ncHJvbW8tLWFydGljbGVzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICB9XG4gIC5rLWJsb2dwcm9tbyAuay1hcnRpY2xlY2FyZCB7XG4gICAgZmxleC1iYXNpczogNDguNSU7XG4gIH1cbiAgLmstYmxvZ3Byb21vIC5rLWFydGljbGVjYXJkOmxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5rLWJsb2dwcm9tby0tYXJ0aWNsZXMge1xuICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgfVxuICAuay1ibG9ncHJvbW8gLmstYXJ0aWNsZWNhcmQge1xuICAgIGZsZXgtYmFzaXM6IDMyLjI1JTtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG59XG5cbi5rLXNlYXJjaHRyaWdnZXI6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5rLW1vZGFsID4gLmstaW5uZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5rLW1vZGFsLS1zZWFyY2gsIC5rLW1vZGFsLS1jYXJ0IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB3aWR0aDogMTAwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIG9wYWNpdHk6IDA7XG4gIHotaW5kZXg6IC0xMDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHMgY3ViaWMtYmV6aWVyKDAuMTY1LCAwLjg0LCAwLjQ0LCAxKTtcbn1cblxuLmstbW9kYWwtLXNlYXJjaC5rLW1vZGFsLS1vcGVuLCAuay1tb2RhbC0tY2FydC5rLW1vZGFsLS1vcGVuIHtcbiAgb3BhY2l0eTogMTtcbiAgei1pbmRleDogMTAwO1xuICBwb2ludGVyLWV2ZW50czogYWxsO1xufVxuXG4uay1tb2RhbC0tc2Nyb2xsaGludCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHJpZ2h0OiAtMS41ZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpIHRyYW5zbGF0ZVgoLTUwJSk7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5rLW1vZGFsLS1zY3JvbGxoaW50IHNwYW4ge1xuICBmb250LXNpemU6IDIwMCU7XG4gIGNvbG9yOiAjYzBkOGJlO1xufVxuXG4uay1tb2RhbC0tY2xvc2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMWVtO1xuICByaWdodDogMmVtO1xuICBjb2xvcjogIzA4MDkwNztcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5rLW1vZGFsLS1jbG9zZV9fbGluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5rLW1vZGFsLS1jbG9zZSAuay1oZWFkbGluZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtNDBweDtcbiAgcmlnaHQ6IDA7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGN1YmljLWJlemllcigwLjg2LCAwLCAwLjA3LCAxKTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXI7XG4gIGNvbG9yOiAjZjRiMTNlO1xuICBmb250LXNpemU6IDZlbTtcbn1cblxuLmstbW9kYWwtLWNsb3NlOmhvdmVyIC5rLWhlYWRsaW5lIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbn1cblxuLmstbW9kYWwtLXNlYXJjaCBmb3JtIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uay1tb2RhbC0tc2VhcmNoIGxhYmVsLFxuLmstbW9kYWwtLXNlYXJjaCBidXR0b24ge1xuICBmb250LWZhbWlseTogXCJSZWNvbGV0YSBSZWd1bGFyXCIsIHNlcmlmO1xuICBmb250LXNpemU6IDIwMCU7XG59XG5cbi5rLW1vZGFsLS1zZWFyY2ggaW5wdXQsXG4uay1tb2RhbC0tc2VhcmNoIGJ1dHRvbiB7XG4gIGNvbG9yOiAjZjRiMTNlO1xufVxuXG4uay1tb2RhbC0tc2VhcmNoIGlucHV0IHtcbiAgcGFkZGluZzogMC41ZW0gMDtcbiAgZm9udC1mYW1pbHk6IFwiUmVjb2xldGEgUmVndWxhclwiLCBzZXJpZjtcbiAgZm9udC1zaXplOiAyMDAlO1xufVxuXG4uay1tb2RhbC0tc2VhcmNoIGlucHV0OmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLmstbW9kYWwtLXNlYXJjaCBpbnB1dDpmb2N1cyArIGxhYmVsIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbn1cblxuLmstbW9kYWwtLXNlYXJjaCBsYWJlbCxcbi5rLW1vZGFsLS1zZWFyY2ggYnV0dG9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xufVxuXG4uay1tb2RhbC0tc2VhcmNoIGxhYmVsIHtcbiAgY29sb3I6ICNmZmY7XG4gIHRvcDogMDtcbiAgbGluZS1oZWlnaHQ6IDI7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG4uay1tb2RhbC0tc2VhcmNoIGJ1dHRvbiB7XG4gIHRvcDogNTAlO1xuICByaWdodDogMDtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG59XG5cbi5rLW1vZGFsLS1zZWFyY2ggYnV0dG9uOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uay1tb2RhbC0tc2VhcmNoIGJ1dHRvbjpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5rLW1vZGFsLS1zZWFyY2ggLmstbW9kYWwtLWNsb3NlIHtcbiAgdG9wOiAtM2VtO1xuICByaWdodDogMDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5rLW1vZGFsLS1yZXZpZXcge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMTBlbTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAxNTAlKTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNHMgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSksIG9wYWNpdHkgMC40cyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbiAgd2lkdGg6IDkwJTtcbiAgbWF4LXdpZHRoOiAzMmVtO1xuICBtYXgtaGVpZ2h0OiA2MHZoO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIHotaW5kZXg6IC0xMDA7XG4gIGJvcmRlci1yYWRpdXM6IDAuMzNlbTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5rLW1vZGFsLS1yZXZpZXcuay1tb2RhbC0tb3BlbiB7XG4gIHotaW5kZXg6IDEwMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCk7XG4gIG9wYWNpdHk6IDE7XG4gIHBvaW50ZXItZXZlbnRzOiBhbGw7XG59XG5cbi5rLW1vZGFsLS1yZXZpZXcuay1tb2RhbC0tc3VibWl0dGluZyAuay1mb3JtLCAuay1tb2RhbC0tcmV2aWV3LmstbW9kYWwtLXN1Y2Nlc3MgLmstZm9ybSB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5rLW1vZGFsLS1yZXZpZXcuay1tb2RhbC0tc3VjY2VzcyAuay1mb3JtIHtcbiAgaGVpZ2h0OiAwO1xufVxuXG4uay1tb2RhbC0tcmV2aWV3LmstbW9kYWwtLXN1Y2Nlc3MgLmstbW9kYWxfX3N1Y2Nlc3Ntc2cge1xuICBvcGFjaXR5OiAxO1xufVxuXG4uay1tb2RhbC0tcmV2aWV3IC5rLW1vZGFsX19zdWNjZXNzbXNnIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDJlbTtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgb3BhY2l0eTogMDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbn1cblxuLmstbW9kYWwtLXJldmlldyAuay1tb2RhbF9fc3VjY2Vzc21zZyBwIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uay1tb2RhbC0tcmV2aWV3IC5rLW1vZGFsLS1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgcGFkZGluZzogM2VtIDJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uay1tb2RhbC0tcmV2aWV3IC5rLW1vZGFsX19jbG9zZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwLjVlbTtcbiAgcmlnaHQ6IDAuNWVtO1xuICBmb250LWZhbWlseTogXCJSZWNvbGV0YSBSZWd1bGFyXCIsIHNlcmlmO1xuICBmb250LXNpemU6IDIwMCU7XG4gIG1hcmdpbjogMDtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG5cbi5rLW1vZGFsLS1yZXZpZXcgLmstbW9kYWxfX2Nsb3NlOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBjb2xvcjogcmVkO1xufVxuXG4uay1tb2RhbC0tcmV2aWV3IC5rLWhlYWRsaW5lIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uay1tb2RhbC0tcmV2aWV3IC5rLXJldmlld19fcHJvZHVjdHRpdGxlIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBjb2xvcjogI2Y0YjEzZTtcbn1cblxuLmstbW9kYWwtLXJldmlldyAuay1yZXZpZXdfX3JhdGluZyBwIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuLmstbW9kYWwtLXJldmlldyAuay1mb3JtIHtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpLCBoZWlnaHQgMC40cyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbiAgb3BhY2l0eTogMTtcbn1cblxuLmstbW9kYWwtLXJldmlldyAuay1mb3JtX19ncm91cCB7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLmstbW9kYWwtLXJldmlldyAuay1mb3JtX19ncm91cC0tdGV4dGFyZWEgbGFiZWwge1xuICBtYXJnaW4tYm90dG9tOiAwLjI1ZW07XG59XG5cbi5rLW1vZGFsLS1yZXZpZXcgLmstZm9ybV9fZ3JvdXAtLXRleHRhcmVhIHRleHRhcmVhIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLmstbW9kYWwtLXJldmlldyAuay1mb3JtX19hY3Rpb25zIHtcbiAgbWFyZ2luLXRvcDogMmVtO1xufVxuXG4uay1tb2RhbC0tcmV2aWV3IC5rLWZvcm1fX2FjdGlvbnMgLmstYnV0dG9uIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5rLW1vZGFsLS1yZXZpZXcgLmstcmV2aWV3X19yYXRpbmdpdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tdG9wOiAwLjMzZW07XG59XG5cbi5rLW1vZGFsLS1yZXZpZXcgLmstaW5wdXQgKyBsYWJlbCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxZW07XG59XG5cbi5rLW1vZGFsLS1yZXZpZXcgLmstaW5wdXQ6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuXG4uay1tb2RhbC0tcmV2aWV3IHRleHRhcmVhIHtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAwLjMzZW07XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgYmFja2dyb3VuZDogI2YyZjJmMjtcbn1cblxuLmstbW9kYWwtLXJldmlldyB0ZXh0YXJlYTpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAuay1tb2RhbC0tcmV2aWV3IHtcbiAgICB3aWR0aDogNjAlO1xuICAgIHRvcDogMTVlbTtcbiAgfVxufVxuXG4uay1mdWxsd2lkdGh2aWQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5rLWZ1bGx3aWR0aHZpZC52aWRlby1wbGF5aW5nIC5rLWZ1bGx3aWR0aHZpZC0tbGluZXIge1xuICBvcGFjaXR5OiAwO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLmstZnVsbHdpZHRodmlkLnZpZGVvLXBsYXlpbmcgLmstcGxheS1idXR0b24ge1xuICBvcGFjaXR5OiAwO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLmstZnVsbHdpZHRodmlkLnZpZGVvLXBsYXlpbmc6YWZ0ZXIge1xuICBvcGFjaXR5OiAwICFpbXBvcnRhbnQ7XG59XG5cbi5rLWZ1bGx3aWR0aHZpZCAuay1pbm5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm9yZGVyLXJhZGl1czogMC43NWVtO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uay1mdWxsd2lkdGh2aWQgLmstcGxheS1idXR0b24ge1xuICB6LWluZGV4OiAzO1xufVxuXG4uay1mdWxsd2lkdGh2aWQtLWJnaW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbn1cblxuLmstZnVsbHdpZHRodmlkLS1iZ2ltZy5sYXp5bG9hZC0tY29tcGxldGUge1xuICBvcGFjaXR5OiAxO1xufVxuXG4uay1mdWxsd2lkdGh2aWQtLWxpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLWJvdHRvbTogNTYuMjUlO1xuICBiYWNrZ3JvdW5kOiAjMDgwOTA3O1xuICB6LWluZGV4OiAyO1xufVxuXG4uay1mdWxsd2lkdGh2aWQgLnBseXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgei1pbmRleDogMTtcbn1cblxuLnBseXJfX2NvbnRyb2wge1xuICBiYWNrZ3JvdW5kOiAjZjRiMTNlO1xufVxuXG4ucGx5cl9fY29udHJvbDpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNkOThlMGMgIWltcG9ydGFudDtcbn1cblxuLnBseXJfX2NvbnRyb2wucGx5cl9fdGFiLWZvY3VzIHtcbiAgYmFja2dyb3VuZDogI2Q5OGUwYyAhaW1wb3J0YW50O1xufVxuXG4ucGx5ci0tZnVsbC11aSBpbnB1dFt0eXBlPSdyYW5nZSddIHtcbiAgY29sb3I6ICNmNGIxM2U7XG59XG5cbi5rLWNhcnQtc2lkZWJhciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgd2lkdGg6IDc1JTtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgei1pbmRleDogMTAxO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAxJSk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNkZGQ7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG91dGxpbmUtY29sb3I6ICNmNGIxM2U7XG59XG5cbi5rLWNhcnQtc2lkZWJhci0tb3BlbiB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgcG9pbnRlci1ldmVudHM6IGFsbDtcbn1cblxuLmstY2FydC1zaWRlYmFyX19saW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMCAxZW07XG59XG5cbi5rLWNhcnQtc2lkZWJhcl9fY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstY2FydC1zaWRlYmFyX19zdWJ0b3RhbCB7XG4gIG1hcmdpbjogMDtcbn1cblxuLmstY2FydC1zaWRlYmFyX19hY3Rpb25zIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDA7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIHdpZHRoOiAxMDAlO1xuICBib3gtc2hhZG93OiAwIDAgMC4yNWVtICNkZWRlZGU7XG59XG5cbi5rLWNhcnQtc2lkZWJhcl9fYWN0aW9ucyAuay1saW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMWVtO1xufVxuXG4uay1jYXJ0LXNpZGViYXJfX2FjdGlvbnMgLmstbGluZXI6Zmlyc3Qtb2YtdHlwZSB7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xufVxuXG4uay1jYXJ0LXNpZGViYXJfX2FjdGlvbnMgLmstYnV0dG9uIHtcbiAgZmxleC1iYXNpczogMTAwJTtcbiAgcGFkZGluZzogMC41ZW0gMDtcbn1cblxuLmstY2FydC1zaWRlYmFyX19hY3Rpb25zIC5rLWJ1dHRvbjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDAuMjVlbTtcbn1cblxuLmstY2FydC1zaWRlYmFyX19pdGVtLWFjdGlvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWJhc2lzOiAxMDAlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstY2FydC1zaWRlYmFyX19pdGVtLWFjdGlvbnMgLmstcHJvZHVjdGZvcm0tLXF1YW50aXR5IHtcbiAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbiAgZmxleC1iYXNpczogYXV0byAhaW1wb3J0YW50O1xufVxuXG4uay1jYXJ0LXNpZGViYXJfX2l0ZW0tYWN0aW9ucyBpbnB1dFt0eXBlPSdudW1iZXInXSB7XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgbWF4LXdpZHRoOiA4Y2g7XG59XG5cbi5rLWNhcnQtc2lkZWJhcl9faXRlbS1hY3Rpb25zIC5rLXJlZHVjZSB7XG4gIHBvc2l0aW9uOiBzdGF0aWM7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbn1cblxuLmstY2FydC1zaWRlYmFyX19pdGVtLWFjdGlvbnMgLmstaW5jcmVhc2Uge1xuICBwb3NpdGlvbjogc3RhdGljO1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG59XG5cbi5rLWNhcnQtc2lkZWJhcl9faXRlbS1hY3Rpb25zIC5rLWJpZ3RleHQge1xuICBtYXJnaW4tbGVmdDogYXV0bztcbn1cblxuLmstY2FydC1zaWRlYmFyX19xdWFudGl0eSB7XG4gIG1hcmdpbi1yaWdodDogMWVtICFpbXBvcnRhbnQ7XG59XG5cbi5rLWNhcnQtc2lkZWJhcl9faXRlbS11cGRhdGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMCU7XG4gIHJpZ2h0OiAwJTtcbiAgcGFkZGluZzogMC41ZW07XG4gIG9wYWNpdHk6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNjVzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG4uay1jYXJ0LXNpZGViYXJfX2l0ZW0tdXBkYXRlLS1hY3RpdmUge1xuICBvcGFjaXR5OiAxO1xuICBwb2ludGVyLWV2ZW50czogYXV0bztcbn1cblxuLmstY2FydC1zaWRlYmFyX19jbG9zZSwgLmstY2FydC1zaWRlYmFyX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDFlbTtcbn1cblxuLmstY2FydC1zaWRlYmFyX19jbG9zZSAqLCAuay1jYXJ0LXNpZGViYXJfX3RpdGxlICoge1xuICBtYXJnaW46IDA7XG59XG5cbi5rLWNhcnQtc2lkZWJhcl9fdGl0bGUge1xuICBsZWZ0OiAxZW07XG4gIGNvbG9yOiAjZjRiMTNlO1xufVxuXG4uay1jYXJ0LXNpZGViYXJfX2Nsb3NlIHtcbiAgcmlnaHQ6IDFlbTtcbiAgdG9wOiAwO1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBjdWJpYy1iZXppZXIoMC44NiwgMCwgMC4wNywgMSk7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyO1xuICBjb2xvcjogI2Y0YjEzZTtcbiAgZm9udC1zaXplOiAyZW07XG59XG5cbi5rLWNhcnQtc2lkZWJhcl9fY2xvc2U6aG92ZXIge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xufVxuXG4uay1jYXJ0LXNpZGViYXIgI2stYWpheGNhcnQtY2FydGl0ZW1zIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDNlbTtcbiAgYm90dG9tOiA2ZW07XG4gIG92ZXJmbG93OiBzY3JvbGw7XG4gIG1hcmdpbjogMmVtIDA7XG59XG5cbi5rLWNhcnQtc2lkZWJhciAjay1hamF4Y2FydC1jYXJ0aXRlbXM6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgd2lkdGg6IDBweDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbi5rLWNhcnQtc2lkZWJhcl9faXRlbSB7XG4gIGZvbnQtc2l6ZTogODAlO1xuICBwYWRkaW5nOiAxZW0gMDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG59XG5cbi5rLWNhcnQtc2lkZWJhcl9faXRlbTpsYXN0LWNoaWxkIHtcbiAgYm9yZGVyLWJvdHRvbTogMDtcbn1cblxuLmstY2FydC1zaWRlYmFyX19pdGVtICoge1xuICBtYXJnaW46IDA7XG59XG5cbi5rLWNhcnQtc2lkZWJhcl9faXRlbV9fbGluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5rLWNhcnQtc2lkZWJhcl9faXRlbSBpbWcsXG4uay1jYXJ0LXNpZGViYXJfX2l0ZW0gaDMge1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi5rLWNhcnQtc2lkZWJhcl9faXRlbSBpbWcge1xuICBmbGV4LWJhc2lzOiAyZW07XG4gIG1heC13aWR0aDogNmVtO1xufVxuXG4uay1jYXJ0LXNpZGViYXJfX2l0ZW0gaDMge1xuICBmbGV4LWJhc2lzOiA2OCU7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uay1jYXJ0LXNpZGViYXJfX2l0ZW0gaDMgYSB7XG4gIGNvbG9yOiAjMDgwOTA3O1xufVxuXG4uay1jYXJ0LXNpZGViYXJfX2l0ZW0gcDpsYXN0LWNoaWxkIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAuay1jYXJ0LXNpZGViYXIge1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbiAgLmstY2FydC1zaWRlYmFyX19saW5lciB7XG4gICAgcGFkZGluZzogMCAzZW07XG4gIH1cbiAgLmstY2FydC1zaWRlYmFyX19jbG9zZSwgLmstY2FydC1zaWRlYmFyX190aXRsZSB7XG4gICAgdG9wOiAyZW07XG4gIH1cbiAgLmstY2FydC1zaWRlYmFyX19jbG9zZSB7XG4gICAgcmlnaHQ6IDFlbTtcbiAgICB0b3A6IDFyZW07XG4gIH1cbiAgLmstY2FydC1zaWRlYmFyX19jbG9zZTpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gIC5rLWNhcnQtc2lkZWJhcl9fdGl0bGUge1xuICAgIGxlZnQ6IDJlbTtcbiAgfVxuICAuay1jYXJ0LXNpZGViYXJfX2l0ZW0ge1xuICAgIHBhZGRpbmc6IDJlbSAwO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMTk5cHgpIHtcbiAgLmstY2FydC1zaWRlYmFyIHtcbiAgICB3aWR0aDogMzMlO1xuICB9XG4gIC5rLWNhcnQtc2lkZWJhcl9fbGluZXIge1xuICAgIHBhZGRpbmc6IDAgM2VtO1xuICB9XG4gIC5rLWNhcnQtc2lkZWJhcl9fc3VtbWFyeSBoNCB7XG4gICAgbWFyZ2luOiAwLjVlbSAwO1xuICB9XG4gIC5rLWNhcnQtc2lkZWJhcl9fYWN0aW9ucyAuay1saW5lciB7XG4gICAgcGFkZGluZzogMWVtIDNlbTtcbiAgfVxuICAuay1jYXJ0LXNpZGViYXJfX2FjdGlvbnMgLmstbGluZXI6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgcGFkZGluZzogMWVtIDNlbSAwO1xuICB9XG4gIC5rLWNhcnQtc2lkZWJhcl9fYWN0aW9ucyAuay1idXR0b24ge1xuICAgIHBhZGRpbmc6IDEuMjVlbSAyZW07XG4gIH1cbiAgLmstY2FydC1zaWRlYmFyX19hY3Rpb25zIC5rLWJ1dHRvbjpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gIH1cbiAgLmstY2FydC1zaWRlYmFyX19pdGVtIGltZyB7XG4gICAgZmxleC1iYXNpczogMjUlO1xuICAgIG1heC13aWR0aDogMjUlO1xuICB9XG4gIC5rLWNhcnQtc2lkZWJhcl9faXRlbSBoMyB7XG4gICAgZmxleC1iYXNpczogNTAlO1xuICB9XG4gIC5rLWNhcnQtc2lkZWJhcl9fY2xvc2Uge1xuICAgIHJpZ2h0OiAxZW07XG4gIH1cbiAgLmstY2FydC1zaWRlYmFyX190aXRsZSB7XG4gICAgbGVmdDogM2VtO1xuICB9XG59XG5cbi5rLXByb2Nlc3MgLmstaW5uZXIge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2RkZDtcbiAgcGFkZGluZy10b3A6IDUuODU5NWVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5rLXByb2Nlc3NfX2ljb25yb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi5rLXByb2Nlc3NfX2ljb25yb3dfX2l0ZW0ge1xuICBmbGV4LWJhc2lzOiAyMSU7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLmstcHJvY2Vzc19faWNvbnJvd19faXRlbTpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmstcHJvY2Vzc19faWNvbnJvd19faXRlbTpob3ZlciAuay1wcm9jZXNzX19pY29ucm93X19pY29uOmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSBzY2FsZSgxLjI1KTtcbn1cblxuLmstcHJvY2Vzc19faWNvbnJvd19faXRlbS5hY3RpdmUgLmstcHJvY2Vzc19faWNvbnJvd19faWNvbjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kOiAjYzBkOGJlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgc2NhbGUoMS4yNSk7XG59XG5cbi5rLXByb2Nlc3NfX2ljb25yb3dfX2ljb24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogYXV0bztcbiAgd2lkdGg6IDY2LjY3JTtcbn1cblxuLmstcHJvY2Vzc19faWNvbnJvd19faWNvbjpiZWZvcmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29udGVudDogJyc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiA1MCU7XG4gIHdpZHRoOiAyLjVlbTtcbiAgaGVpZ2h0OiAyLjVlbTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQ6ICNmMmYyZjI7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKSwgYmFja2dyb3VuZCAxcyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbn1cblxuLmstcHJvY2Vzc19faWNvbnJvd19fdGl0bGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uay1wcm9jZXNzX19jYXJvdXNlbF9fc2xpZGUge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwIDFlbTtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGN1YmljLWJlemllcigwLjYsIDAuMDQsIDAuOTgsIDAuMzM1KTtcbn1cblxuLmstcHJvY2Vzc19fY2Fyb3VzZWxfX3NsaWRlLmlzLXNlbGVjdGVkIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLmstcHJvY2Vzc19fY2Fyb3VzZWxfX3RleHQge1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC44cyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuXG4uay1wcm9jZXNzX19jYXJvdXNlbF9fdGV4dCBoMiB7XG4gIGZvbnQtZmFtaWx5OiBcIkdUIEFtZXJpY2FcIiwgc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLmstcHJvY2Vzc19fY2Fyb3VzZWxfX2ltYWdlIHtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuOHMgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSk7XG59XG5cbi5rLXByb2Nlc3NfX2Nhcm91c2VsIC5rLWZpZ3VyZS0tbGluZXIge1xuICBwYWRkaW5nLWJvdHRvbTogNzEuNDIlO1xufVxuXG4uay1wcm9jZXNzX19jb250cm9scyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5rLXByb2Nlc3NfX3ByZXY6aG92ZXIsIC5rLXByb2Nlc3NfX25leHQ6aG92ZXIge1xuICBjb2xvcjogI2Y0YjEzZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgLmstcHJvY2Vzc19faWNvbnJvdyB7XG4gICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgfVxuICAuay1wcm9jZXNzX19pY29ucm93X19pdGVtIHtcbiAgICBmbGV4LWJhc2lzOiA3JTtcbiAgfVxuICAuay1wcm9jZXNzX19jYXJvdXNlbF9fc2xpZGUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB9XG4gIC5rLXByb2Nlc3NfX2Nhcm91c2VsX190ZXh0LCAuay1wcm9jZXNzX19jYXJvdXNlbF9faW1hZ2Uge1xuICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgfVxuICAuay1wcm9jZXNzX19jYXJvdXNlbF9fdGV4dCB7XG4gICAgcGFkZGluZy1yaWdodDogMmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAuay1wcm9jZXNzX19pY29ucm93IHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMGVtO1xuICB9XG4gIC5rLXByb2Nlc3NfX2ljb25yb3dfX2l0ZW0ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuay1wcm9jZXNzX19pY29ucm93X190aXRsZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxNTAlO1xuICAgIGxlZnQ6IC0yNSU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIH1cbiAgLmstcHJvY2Vzc19fY2Fyb3VzZWxfX3RleHQge1xuICAgIHBhZGRpbmc6IDAgNy41JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTQ0MHB4KSB7XG4gIC5rLXByb2Nlc3NfX2NvbnRyb2xzIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgZm9udC1zaXplOiAxMjUlO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAtM2VtO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxODAwcHgpIHtcbiAgLmstcHJvY2Vzc19fY2Fyb3VzZWxfX3NsaWRlIHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIH1cbn1cblxuLmstcmVzb3VyY2VzY2FsbG91dCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstcmVzb3VyY2VzY2FsbG91dDpiZWZvcmUsIC5rLXJlc291cmNlc2NhbGxvdXRfX2JnaW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5rLXJlc291cmNlc2NhbGxvdXQ6YmVmb3JlIHtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvcGFjaXR5OiAwLjU7XG4gIGJhY2tncm91bmQ6ICMwODA5MDc7XG4gIHotaW5kZXg6IC0xO1xufVxuXG4uay1yZXNvdXJjZXNjYWxsb3V0X19iZ2ltZyB7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIHotaW5kZXg6IC0yO1xufVxuXG4uay1yZXNvdXJjZXNjYWxsb3V0X19pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogM2VtO1xufVxuXG4uay1yZXNvdXJjZXNjYWxsb3V0X19kZXNjcmlwdGlvbiB7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLmstcmVzb3VyY2VzY2FsbG91dCBoMiB7XG4gIGNvbG9yOiAjYzBkOGJlO1xufVxuXG4uay1yZXNvdXJjZXNjYWxsb3V0IHAge1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmstcmVzb3VyY2VzY2FsbG91dCBhIHtcbiAgY29sb3I6ICNmNGIxM2U7XG59XG5cbi5rLXJlc291cmNlc2NhbGxvdXQgYTpob3ZlciB7XG4gIGNvbG9yOiAjYzBkOGJlICFpbXBvcnRhbnQ7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAuay1yZXNvdXJjZXNjYWxsb3V0X19jb250ZW50IHtcbiAgICBtYXJnaW4tbGVmdDogNTAlO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMTk5cHgpIHtcbiAgLmstcmVzb3VyY2VzY2FsbG91dF9fY29udGVudCB7XG4gICAgbWFyZ2luLWxlZnQ6IDcwJTtcbiAgfVxufVxuXG4uay1jdGEtLXN1YnNjcmliZSAuay1jdGEtLWNvbnRlbnQge1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuLmstY3RhLS1mYWRpbmcge1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNzVzIGVhc2Utb3V0O1xuICBvcGFjaXR5OiAwO1xufVxuXG4uay1jdGFfX3N1YnNjcmliZS1jb250ZW50IHtcbiAgZmxleC1iYXNpczogMTAwJTtcbn1cblxuLmstY3RhX19mb3JtLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHdpZHRoOiAxMDAlO1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNzVzIGVhc2UtaW47XG59XG5cbi5rLWN0YV9fZm9ybS1jb250YWluZXItLW9wZW4ge1xuICBvcGFjaXR5OiAxO1xufVxuXG4uay1jdGFfX2Zvcm0tY29udGFpbmVyIC5rLWlubmVyIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXIgIWltcG9ydGFudDtcbn1cblxuLmstY3RhX19mb3JtLWNvbnRhaW5lciBmb3JtIHtcbiAgbWluLXdpZHRoOiA1MCU7XG59XG5cbi5rLWN0YV9fZm9ybS1jb250YWluZXIgZmllbGRzZXQge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi5rLWN0YV9fZm9ybS1jb250YWluZXIgZmllbGRzZXQ6bGFzdC1vZi10eXBlIHtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuXG4uay1jdGFfX2Zvcm0tY29udGFpbmVyIGxhYmVsIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5rLWN0YV9fZm9ybS1jb250YWluZXIgaW5wdXQge1xuICBjb2xvcjogI2ZmZjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5rLWN0YV9fZm9ybS1jb250YWluZXIgZm9ybSB7XG4gICAgbWluLXdpZHRoOiAzMyU7XG4gIH1cbn1cblxuLmstYnJlYWRjcnVtYiBhIHtcbiAgY29sb3I6ICNmNGIxM2U7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstYnJlYWRjcnVtYiBhOmhvdmVyIHtcbiAgY29sb3I6ICMyMjIyMjIgIWltcG9ydGFudDtcbn1cblxuLmstb3ZlcnZpZXcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5rLW92ZXJ2aWV3LS1pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuXG4uay1vdmVydmlldy0taXRlbSAuay1maWd1cmUge1xuICB3aWR0aDogOTAlO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLmstb3ZlcnZpZXctLWl0ZW0gLmstaGVhZGxpbmUgYSB7XG4gIGNvbG9yOiAjMDgwOTA3O1xufVxuXG4uay1vdmVydmlldy0taXRlbSAuay1oZWFkbGluZSBhOmhvdmVyIHtcbiAgY29sb3I6ICNmNGIxM2UgIWltcG9ydGFudDtcbn1cblxuLmstb3ZlcnZpZXctLWludHJvIC5rLXByZWhlYWRpbmcgc3BhbiB7XG4gIGNvbG9yOiAjYzBkOGJlO1xufVxuXG4uay1vdmVydmlldy0taW50cm9fX3RleHQge1xuICBtYXJnaW4tYm90dG9tOiAxLjVlbTtcbn1cblxuLmstb3ZlcnZpZXctLWludHJvX19jYXJkIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uay1vdmVydmlldy0taW50cm9fX2NhcmQgLmstZmlndXJlLS1saW5lciB7XG4gIHBhZGRpbmctYm90dG9tOiAxNDQuMjMlO1xufVxuXG4uay1vdmVydmlldy0taW50cm9fX2NhcmQgLmstY29ybmVyaW1nIHtcbiAgYm90dG9tOiAtMi41ZW07XG4gIHJpZ2h0OiAtMTAlO1xuICB3aWR0aDogNDAlO1xufVxuXG4uay1vdmVydmlldyAuay1jb3JuZXJpbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi5rLW92ZXJ2aWV3LS10b3BpY2FscyAuay1maWd1cmUtLWxpbmVyIHtcbiAgcGFkZGluZy1ib3R0b206IDYyLjk2JTtcbn1cblxuLmstb3ZlcnZpZXctLXRvcGljYWxzIC5rLWNvcm5lcmltZyB7XG4gIGJvdHRvbTogLTIuNWVtO1xuICByaWdodDogLTEwJTtcbiAgd2lkdGg6IDUwJTtcbn1cblxuLmstb3ZlcnZpZXctLXBldHMgLmstZmlndXJlIHtcbiAgd2lkdGg6IDgwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmstb3ZlcnZpZXctLXBldHMgLmstZmlndXJlLS1saW5lciB7XG4gIHBhZGRpbmctYm90dG9tOiAxNTEuMTglO1xufVxuXG4uay1vdmVydmlldy0tZWRpYmxlcyAuay1maWd1cmUtLWxpbmVyIHtcbiAgcGFkZGluZy1ib3R0b206IDU4LjgyJTtcbn1cblxuLmstb3ZlcnZpZXctLWVkaWJsZXMgLmstY29ybmVyaW1nIHtcbiAgYm90dG9tOiAtMi41ZW07XG4gIHJpZ2h0OiAtMjUlO1xuICB3aWR0aDogNTAlO1xufVxuXG4uay1vdmVydmlldy0tdmFwZV9fY2FyZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmstb3ZlcnZpZXctLXZhcGUgLmstZmlndXJlIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIGZsZXgtYmFzaXM6IDQwJTtcbn1cblxuLmstb3ZlcnZpZXctLXZhcGUgLmstZmlndXJlLS1saW5lciB7XG4gIHBhZGRpbmctYm90dG9tOiAxNDQuNjQlO1xufVxuXG4uay1vdmVydmlldy0tdmFwZV9fdGV4dCB7XG4gIGZsZXgtYmFzaXM6IDUwJTtcbn1cblxuLmstb3ZlcnZpZXctLXZhcGVfX3RleHQgLmstaGVhZGxpbmUge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuXG4uay1vdmVydmlldy0tdmFwZSAuay1jb3JuZXJpbWcge1xuICBib3R0b206IC0yLjVlbTtcbiAgcmlnaHQ6IC0xMCU7XG4gIHdpZHRoOiA0MCU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAuay1vdmVydmlldy0taXRlbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuICAuay1vdmVydmlldy0taXRlbSAuay1maWd1cmUge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5rLW92ZXJ2aWV3LS1pbnRybyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cbiAgLmstb3ZlcnZpZXctLWludHJvX190ZXh0IHtcbiAgICBmbGV4LWJhc2lzOiA1NSU7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuICAuay1vdmVydmlldy0taW50cm9fX2NhcmQge1xuICAgIGZsZXgtYmFzaXM6IDQwJTtcbiAgfVxuICAuay1vdmVydmlldy0taW50cm9fX2NhcmQgLmstY29ybmVyaW1nIHtcbiAgICByaWdodDogLTE2LjUlO1xuICB9XG4gIC5rLW92ZXJ2aWV3LS1pbnRybyAuay10ZXh0Ym9keSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICB9XG4gIC5rLW92ZXJ2aWV3LS10b3BpY2FscyB7XG4gICAgd2lkdGg6IDU1JTtcbiAgICBtYXJnaW4tdG9wOiAtOGVtO1xuICB9XG4gIC5rLW92ZXJ2aWV3LS1wZXRzIHtcbiAgICBtYXJnaW46IDAgMCAyZW0gNjUlO1xuICB9XG4gIC5rLW92ZXJ2aWV3LS1lZGlibGVzIHtcbiAgICB3aWR0aDogNTUlO1xuICAgIG1hcmdpbi10b3A6IC0xNWVtO1xuICB9XG4gIC5rLW92ZXJ2aWV3LS1lZGlibGVzX190ZXh0IHtcbiAgICBtYXgtd2lkdGg6IDI0LjcyZW07XG4gIH1cbiAgLmstb3ZlcnZpZXctLXZhcGUge1xuICAgIG1hcmdpbjogMmVtIDAgMCAzMy4zMyU7XG4gICAgd2lkdGg6IGF1dG87XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDExOTlweCkge1xuICAuay1vdmVydmlldy0taW50cm9fX3RleHQge1xuICAgIG1heC13aWR0aDogMzhlbTtcbiAgfVxuICAuay1vdmVydmlldy0taW50cm9fX2NhcmQge1xuICAgIG1heC13aWR0aDogMjhlbTtcbiAgfVxuICAuay1vdmVydmlldy0tdG9waWNhbHMge1xuICAgIG1hcmdpbi10b3A6IC0xMmVtO1xuICAgIG1heC13aWR0aDogMzBlbTtcbiAgfVxuICAuay1vdmVydmlldy0tcGV0cyB7XG4gICAgbWFyZ2luOiAwIDAgMCBhdXRvO1xuICAgIG1heC13aWR0aDogMjEuNjZlbTtcbiAgfVxuICAuay1vdmVydmlldy0tZWRpYmxlcyB7XG4gICAgbWF4LXdpZHRoOiA0MmVtO1xuICAgIG1hcmdpbi10b3A6IC0yNWVtO1xuICB9XG4gIC5rLW92ZXJ2aWV3LS12YXBlIHtcbiAgICBtYXJnaW4tbGVmdDogMzMuMzNlbTtcbiAgICBtYXJnaW4tdG9wOiAwZW07XG4gICAgbWF4LXdpZHRoOiA0NC4xNmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxODAwcHgpIHtcbiAgLmstb3ZlcnZpZXctLWludHJvX190ZXh0IHtcbiAgICBtYXgtd2lkdGg6IDQ1ZW07XG4gIH1cbn1cblxuLmstYmxvZ2xpc3QgLmstYXJ0aWNsZWNhcmQge1xuICBtYXJnaW4tYm90dG9tOiAzZW07XG59XG5cbi5rLWJsb2duYXYge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5rLWJsb2duYXYtLWZpbHRlcmJ5IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDNlbTtcbiAgcmlnaHQ6IDUlO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLmstYmxvZ25hdiBzZWxlY3Qge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgLW1zLWV4cGFuZDogbm9uZTtcbiAgd2lkdGg6IGF1dG87XG4gIG1pbi13aWR0aDogYXV0bztcbn1cblxuLmstYmxvZ25hdiBzZWxlY3Q6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuXG4uay1ibG9nbmF2IHNlbGVjdDpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6ICNmNGIxM2U7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAuay1ibG9nbGlzdCAuay1pbm5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgfVxuICAuay1ibG9nbGlzdCAuay1hcnRpY2xlY2FyZCB7XG4gICAgZmxleC1iYXNpczogNDguNSU7XG4gIH1cbiAgLmstYmxvZ25hdi0tZmlsdGVyYnkge1xuICAgIHJpZ2h0OiAxMi41JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmstYmxvZ2xpc3QgLmstaW5uZXIge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgfVxuICAuay1ibG9nbGlzdCAuay1hcnRpY2xlY2FyZCB7XG4gICAgZmxleC1iYXNpczogMzEuNSU7XG4gICAgbWFyZ2luLXJpZ2h0OiAxLjMzJTtcbiAgfVxufVxuXG4uay1zaWRlYmFyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmstc2lkZWJhci0tbmV3c2xldHRlcl9fY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstc2lkZWJhci0tbmV3c2xldHRlcl9fYmdpbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgei1pbmRleDogLTE7XG59XG5cbi5rLXNpZGViYXIgLmstZm9ybSBpbnB1dCxcbi5rLXNpZGViYXIgLmstZm9ybSBidXR0b24sXG4uay1zaWRlYmFyIC5rLWZvcm0gbGFiZWwsXG4uay1zaWRlYmFyIC5rLWZvcm0gLmstZm9ybS0tbWVzc2FnZSB7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbn1cblxuLmstc2lkZWJhciAuay1mb3JtIGlucHV0LFxuLmstc2lkZWJhciAuay1mb3JtIGJ1dHRvbixcbi5rLXNpZGViYXIgLmstZm9ybSBsYWJlbCB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5rLXNpZGViYXIgLmstZm9ybSAuay1mb3JtLS1tZXNzYWdlIHtcbiAgb3BhY2l0eTogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG59XG5cbi5rLXNpZGViYXIgLmstZm9ybS0tc3VibWl0dGluZyBpbnB1dCxcbi5rLXNpZGViYXIgLmstZm9ybS0tc3VibWl0dGluZyBidXR0b24sXG4uay1zaWRlYmFyIC5rLWZvcm0tLXN1Ym1pdHRpbmcgbGFiZWwsIC5rLXNpZGViYXIgLmstZm9ybS0tc3VibWl0dGVkIGlucHV0LFxuLmstc2lkZWJhciAuay1mb3JtLS1zdWJtaXR0ZWQgYnV0dG9uLFxuLmstc2lkZWJhciAuay1mb3JtLS1zdWJtaXR0ZWQgbGFiZWwge1xuICBvcGFjaXR5OiAwO1xufVxuXG4uay1zaWRlYmFyIC5rLWZvcm0tLXN1Ym1pdHRlZCAuay1mb3JtLS1tZXNzYWdlIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gIC5rLWJsb2djb250ZW50ID4gLmstaW5uZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgfVxuICAuay1zaWRlYmFyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmbGV4LWJhc2lzOiA0NSU7XG4gIH1cbiAgLmstc2lkZWJhciAuay1wcm9kdWN0Y2FyZCB7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA0ZW0pO1xuICB9XG4gIC5rLXNpZGViYXItLW5ld3NsZXR0ZXIge1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgdG9wOiAwO1xuICB9XG4gIC5rLXNpZGViYXItLW5ld3NsZXR0ZXJfX2NvbnRlbnQge1xuICAgIHBhZGRpbmc6IDcuODEyNWVtIDJlbSAyZW07XG4gIH1cbiAgLmstc2lkZWJhci0tbmV3c2xldHRlciBzcGFuIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIH1cbiAgLmstc2lkZWJhciAuay1mb3JtIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbiAgLmstc2lkZWJhciAuay1mb3JtIGxhYmVsIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwLjY2N2VtO1xuICAgIGxlZnQ6IDA7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC1mYW1pbHk6IFwiUmVjb2xldGEgUmVndWxhclwiLCBzZXJpZjtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICBmb250LXNpemU6IDEyNSU7XG4gIH1cbiAgLmstc2lkZWJhciAuay1mb3JtIGlucHV0IHtcbiAgICBmb250LXNpemU6IDEyNSU7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC1mYW1pbHk6IFwiUmVjb2xldGEgUmVndWxhclwiLCBzZXJpZjtcbiAgfVxuICAuay1zaWRlYmFyIC5rLWZvcm0gaW5wdXQ6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cbiAgLmstc2lkZWJhciAuay1mb3JtIGlucHV0OmZvY3VzICsgbGFiZWwge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMS41ZW0pO1xuICB9XG4gIC5rLXNpZGViYXIgLmstZm9ybSBidXR0b24ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDAuNjY3ZW07XG4gICAgcmlnaHQ6IDA7XG4gICAgZm9udC1zaXplOiAxMjUlO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgbGluZS1oZWlnaHQ6IDI7XG4gIH1cbiAgLmstc2lkZWJhciAuay1mb3JtIGJ1dHRvbjpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gIC5rLWFydGljbGUge1xuICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTE5OXB4KSB7XG4gIC5rLWJsb2djb250ZW50IC5rLXNpZGViYXIge1xuICAgIGZsZXgtYmFzaXM6IDM1JTtcbiAgfVxuICAuay1ibG9nY29udGVudCAuay1zaWRlYmFyLS1uZXdzbGV0dGVyX19jb250ZW50IHtcbiAgICBwYWRkaW5nOiAxMS43MTg3ZW0gNGVtIDRlbTtcbiAgfVxuICAuay1ibG9nY29udGVudCAuay1hcnRpY2xlIHtcbiAgICBmbGV4LWJhc2lzOiA1NSU7XG4gICAgcGFkZGluZy1yaWdodDogMTUlO1xuICB9XG59XG5cbi5rLWNoZWNrb3V0X19oZWFkbGluZSB7XG4gIHBhZGRpbmc6IDRlbSAwO1xufVxuXG4uay1jaGVja291dF9faGVhZGxpbmUgaDEge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuXG4uay1jaGVja291dF9fZm9ybXMge1xuICBib3JkZXItdG9wOiAwLjI1ZW0gc29saWQgI2Y0YjEzZTtcbiAgYm94LXNoYWRvdzogMCAwIDVweCAjZGVkZWRlO1xufVxuXG4uay1jaGVja291dF9fZm9ybXMgPiAuay1saW5lciB7XG4gIHBhZGRpbmc6IDFlbSAyZW07XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59XG5cbi5wYWdlLXRlbXBsYXRlLXBhZ2UtY2hlY2tvdXQge1xuICBiYWNrZ3JvdW5kOiAjZjJmMmYyO1xufVxuXG4ucGFnZS10ZW1wbGF0ZS1wYWdlLWNoZWNrb3V0ICNzaGlwLXRvLWRpZmZlcmVudC1hZGRyZXNzIGlucHV0LFxuLnBhZ2UtdGVtcGxhdGUtcGFnZS1jaGVja291dCAjc2hpcC10by1kaWZmZXJlbnQtYWRkcmVzcyBzcGFuIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4ucGFnZS10ZW1wbGF0ZS1wYWdlLWNoZWNrb3V0ICNzaGlwLXRvLWRpZmZlcmVudC1hZGRyZXNzIGlucHV0IHtcbiAgbWFyZ2luLXJpZ2h0OiAxZW07XG59XG5cbi5wYWdlLXRlbXBsYXRlLXBhZ2UtY2hlY2tvdXQgLmstZm9ybS0tY29sdW1uc19fY29sIHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgcGFkZGluZzogMWVtO1xuICBib3gtc2hhZG93OiAwIDAgMnB4IC0xcHggIzIyMjtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuXG4ucGFnZS10ZW1wbGF0ZS1wYWdlLWNoZWNrb3V0IC5rLWZvcm0tLWNvbHVtbnMgaW5wdXQ6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuXG4ucGFnZS10ZW1wbGF0ZS1wYWdlLWNoZWNrb3V0IC5rLWNoZWNrb3V0LS1zaGlwcGluZ19faGVhZGVyIHtcbiAgbWFyZ2luLWxlZnQ6IDJlbTtcbn1cblxuLnBhZ2UtdGVtcGxhdGUtcGFnZS1jaGVja291dCAuay1jaGVja291dC0tc2hpcHBpbmdfX2hlYWRlciBpbnB1dCxcbi5wYWdlLXRlbXBsYXRlLXBhZ2UtY2hlY2tvdXQgLmstY2hlY2tvdXQtLXNoaXBwaW5nX19oZWFkZXIgbGFiZWwge1xuICBtaW4td2lkdGg6IGF1dG87XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4ucGFnZS10ZW1wbGF0ZS1wYWdlLWNoZWNrb3V0IC5rLWNoZWNrb3V0LS1zaGlwcGluZ19faGVhZGVyIGlucHV0OmhvdmVyLFxuLnBhZ2UtdGVtcGxhdGUtcGFnZS1jaGVja291dCAuay1jaGVja291dC0tc2hpcHBpbmdfX2hlYWRlciBsYWJlbDpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnBhZ2UtdGVtcGxhdGUtcGFnZS1jaGVja291dCAuay1jaGVja291dC0tc2hpcHBpbmdfX2hlYWRlciBpbnB1dCB7XG4gIG1hcmdpbi1yaWdodDogMWVtO1xufVxuXG4ucGFnZS10ZW1wbGF0ZS1wYWdlLWNoZWNrb3V0IC5rLWNoZWNrb3V0LS1zaGlwcGluZ19faGVhZGVyIGxhYmVsIHtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbi5wYWdlLXRlbXBsYXRlLXBhZ2UtY2hlY2tvdXQgLnNoaXBwaW5nX2FkZHJlc3Mge1xuICBoZWlnaHQ6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRyYW5zaXRpb246IGhlaWdodCAwLjRzIGN1YmljLWJlemllcigwLjE2NSwgMC44NCwgMC40NCwgMSk7XG59XG5cbi5rLXJldmlldy1vcmRlci0tdGl0bGVyb3cge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uay1yZXZpZXctb3JkZXItLXRpdGxlcm93IHAge1xuICBmbGV4LWJhc2lzOiA1MCU7XG4gIGNvbG9yOiAjZjRiMTNlO1xufVxuXG4uay1yZXZpZXctb3JkZXItLXRpdGxlcm93IHA6bGFzdC1jaGlsZCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uay1yZXZpZXctb3JkZXItLWl0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBwYWRkaW5nOiAyZW0gMDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG59XG5cbi5rLXJldmlldy1vcmRlci0taXRlbSAucHJvZHVjdC1uYW1lLFxuLmstcmV2aWV3LW9yZGVyLS1pdGVtIC5wcm9kdWN0LXRvdGFsIHtcbiAgZmxleC1iYXNpczogNTAlO1xufVxuXG4uay1yZXZpZXctb3JkZXItLWl0ZW0gLnByb2R1Y3QtYnVuZGxlZGl0ZW1zIHtcbiAgZmxleC1iYXNpczogMTAwJTtcbn1cblxuLmstcmV2aWV3LW9yZGVyLS1pdGVtIC5wcm9kdWN0LWJ1bmRsZWRpdGVtcyB1bCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLmstcmV2aWV3LW9yZGVyLS1pdGVtIC5wcm9kdWN0LWJ1bmRsZWRpdGVtcyBsaSB7XG4gIHBhZGRpbmc6IDFlbTtcbn1cblxuLmstcmV2aWV3LW9yZGVyLS1pdGVtIC5wcm9kdWN0LWJ1bmRsZWRpdGVtcyBsaTpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQ6ICNmMmYyZjI7XG59XG5cbi5rLXJldmlldy1vcmRlci0taXRlbSAucHJvZHVjdC1idW5kbGVkaXRlbXMgbGkgYSB7XG4gIGNvbG9yOiAjMDgwOTA3O1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmstcmV2aWV3LW9yZGVyLS1pdGVtIC5wcm9kdWN0LWJ1bmRsZWRpdGVtcyBsaSBhOmhvdmVyIHtcbiAgY29sb3I6ICNkOThlMGMgIWltcG9ydGFudDtcbn1cblxuLmstcmV2aWV3LW9yZGVyLS1pdGVtIC5wcm9kdWN0LWJ1bmRsZWRpdGVtcyBsaSBwIHtcbiAgY29sb3I6ICNmNGIxM2U7XG4gIG1hcmdpbjogMDtcbn1cblxuLmstcmV2aWV3LW9yZGVyLS1pdGVtIC5wcm9kdWN0LWJ1bmRsZWRpdGVtcyBsaSBwIHNwYW4ge1xuICBjb2xvcjogIzA4MDkwNztcbn1cblxuLmstcmV2aWV3LW9yZGVyLS1pdGVtIC5wcm9kdWN0LWJ1bmRsZWRpdGVtcyBsaSBzdXAge1xuICBjb2xvcjogIzA4MDkwNztcbiAgcGFkZGluZy1sZWZ0OiAxZW07XG59XG5cbi5rLXJldmlldy1vcmRlci0taXRlbSAucHJvZHVjdC10b3RhbCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uay1yZXZpZXctb3JkZXItLWl0ZW0gLnByb2R1Y3QtdG90YWwgdWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5rLXJldmlldy1vcmRlciAucHJvZHVjdC1xdWFudGl0eSB7XG4gIGNvbG9yOiAjZjRiMTNlO1xufVxuXG4uay1yZXZpZXctb3JkZXIgLmstYmlndGV4dCB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiAxMjUlO1xufVxuXG4uay1yZXZpZXctb3JkZXIgLndvb2NvbW1lcmNlLXJlbW92ZS1jb3Vwb24ge1xuICBjb2xvcjogI2Y0YjEzZTtcbiAgZm9udC1zaXplOiA3NSU7XG4gIHZlcnRpY2FsLWFsaWduOiBzdXBlcjtcbn1cblxuLmstcmV2aWV3LW9yZGVyIC53b29jb21tZXJjZS1yZW1vdmUtY291cG9uOmhvdmVyIHtcbiAgY29sb3I6IHJlZCAhaW1wb3J0YW50O1xufVxuXG4ud29vY29tbWVyY2UtZm9ybS1sb2dpbi10b2dnbGUge1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi53b29jb21tZXJjZS1mb3JtLWxvZ2luLXRvZ2dsZSBhIHtcbiAgY29sb3I6ICNmNGIxM2U7XG59XG5cbi53b29jb21tZXJjZS1mb3JtLWxvZ2luLXRvZ2dsZSBhOmhvdmVyIHtcbiAgY29sb3I6ICNkOThlMGMgIWltcG9ydGFudDtcbn1cblxuLndjX3BheW1lbnRfbWV0aG9kcy5wYXltZW50X21ldGhvZHMge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuLndvb2NvbW1lcmNlLWNoZWNrb3V0LXBheW1lbnQge1xuICBtYXJnaW4tdG9wOiA3LjgxMjVlbTtcbn1cblxuLndvb2NvbW1lcmNlLWNoZWNrb3V0LXBheW1lbnQgKiB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi53b29jb21tZXJjZS1jaGVja291dC1wYXltZW50IHNwYW4ge1xuICBmb250LXdlaWdodDogNDAwO1xufVxuXG4ud29vY29tbWVyY2UtY2hlY2tvdXQtcGF5bWVudCBpbnB1dFt0eXBlPSd0ZXh0J10sXG4ud29vY29tbWVyY2UtY2hlY2tvdXQtcGF5bWVudCBpbnB1dFt0eXBlPSd0ZWwnXSB7XG4gIHBhZGRpbmctbGVmdDogMWVtO1xufVxuXG4ud29vY29tbWVyY2UtY2hlY2tvdXQtcGF5bWVudCAuY2hlY2tib3ggaW5wdXRbdHlwZT0nY2hlY2tib3gnXTpjaGVja2VkICsgLndvb2NvbW1lcmNlLXRlcm1zLWFuZC1jb25kaXRpb25zLWNoZWNrYm94LXRleHQ6YmVmb3JlIHtcbiAgYmFja2dyb3VuZDogI2Y0YjEzZTtcbn1cblxuLndvb2NvbW1lcmNlLWNoZWNrb3V0LXBheW1lbnQgLmNoZWNrYm94IC53b29jb21tZXJjZS10ZXJtcy1hbmQtY29uZGl0aW9ucy1jaGVja2JveC10ZXh0IHtcbiAgbWFyZ2luLWxlZnQ6IDJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ud29vY29tbWVyY2UtY2hlY2tvdXQtcGF5bWVudCAuY2hlY2tib3ggLndvb2NvbW1lcmNlLXRlcm1zLWFuZC1jb25kaXRpb25zLWNoZWNrYm94LXRleHQ6YmVmb3JlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogLTJlbTtcbiAgd2lkdGg6IDFlbTtcbiAgaGVpZ2h0OiAxZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC40cyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbn1cblxuLmstcGF5bWVudC1tZXRob2Qtc2VsZWN0IGlucHV0LFxuLmstcGF5bWVudC1tZXRob2Qtc2VsZWN0IGxhYmVsIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uay1wYXltZW50LW1ldGhvZC1zZWxlY3QgaW5wdXQge1xuICB3aWR0aDogMmVtO1xufVxuXG4uay1wYXltZW50LW1ldGhvZC1zZWxlY3QgbGFiZWwge1xuICBtaW4td2lkdGg6IGF1dG87XG59XG5cbi53b29jb21tZXJjZS1jaGVja291dC1yZXZpZXctb3JkZXIge1xuICBib3JkZXItdG9wOiAwLjI1ZW0gc29saWQgI2Y0YjEzZTtcbiAgYm94LXNoYWRvdzogMCAwIDVweCAjZGVkZWRlO1xuICBtYXJnaW4tdG9wOiAyZW07XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIHBhZGRpbmc6IDFlbTtcbn1cblxuLndvb2NvbW1lcmNlLXRlcm1zLWFuZC1jb25kaXRpb25zLWNoZWNrYm94LXRleHQ6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAuay1jaGVja291dF9fZm9ybXMgPiAuay1saW5lciB7XG4gICAgcGFkZGluZzogNGVtIDNlbTtcbiAgfVxuICAuay1jaGVja291dF9fYmlsbGluZywgLmstY2hlY2tvdXRfX3NoaXBwaW5nIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIH1cbiAgLmstY2hlY2tvdXRfX2JpbGxpbmcge1xuICAgIHBhZGRpbmctYm90dG9tOiA0ZW07XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZWRlZGU7XG4gIH1cbiAgLmstY2hlY2tvdXRfX3NoaXBwaW5nIHtcbiAgICBtYXJnaW4tdG9wOiA0ZW07XG4gICAgcGFkZGluZy10b3A6IDRlbTtcbiAgfVxuICAuay1jaGVja291dF9fdGl0bGUge1xuICAgIGZsZXgtYmFzaXM6IDQwJTtcbiAgfVxuICAuay1jaGVja291dF9fdGl0bGUgLmstbGluZXIge1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgdG9wOiAxMGVtO1xuICB9XG4gIC5rLWNoZWNrb3V0X190aXRsZSBoMyB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gIH1cbiAgLmstY2hlY2tvdXRfX2ZpZWxkcyB7XG4gICAgZmxleC1iYXNpczogNTAlO1xuICB9XG4gIC5rLWNoZWNrb3V0X19maWVsZHMgLmZvcm0tcm93OmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICB9XG4gIC5rLWNoZWNrb3V0X19maWVsZHMgLmZvcm0tcm93Omxhc3QtY2hpbGQge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cblxuLmstdG9nZ2xlLXNoaXBwaW5nIHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLndvb2NvbW1lcmNlLWNoZWNrb3V0LXJldmlldy1vcmRlciB7XG4gICAgcGFkZGluZzogNGVtIDNlbTtcbiAgfVxufVxuXG4uay1zZWFyY2hyZXN1bHRzLS1pdGVtIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcbn1cblxuLmstc2VhcmNocmVzdWx0cy0taXRlbV9fbGluZXIge1xuICBwYWRkaW5nOiAyZW0gMCA0ZW0gMDtcbn1cblxuLmstc2VhcmNocmVzdWx0cy0taXRlbV9fdGl0bGUgYSB7XG4gIGNvbG9yOiAjMDgwOTA3O1xufVxuXG4uay1zZWFyY2hyZXN1bHRzLS1pdGVtX190aXRsZSBhOmhvdmVyIHtcbiAgY29sb3I6ICNmNGIxM2U7XG59XG5cbi5rLXNlYXJjaHJlc3VsdHMtLWl0ZW0gdWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLmstc2VhcmNocmVzdWx0cy0taXRlbSBsaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gIC5rLXNlYXJjaHJlc3VsdHMtLWl0ZW0ge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cbiAgLmstc2VhcmNocmVzdWx0cy0taXRlbV9fbGluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG4gIC5rLXNlYXJjaHJlc3VsdHMtLWl0ZW1fX2ltYWdlIHtcbiAgICBmbGV4LWJhc2lzOiAxMCU7XG4gIH1cbiAgLmstc2VhcmNocmVzdWx0cy0taXRlbV9fdGl0bGUge1xuICAgIGZsZXgtYmFzaXM6IDM1JTtcbiAgfVxuICAuay1zZWFyY2hyZXN1bHRzLS1pdGVtX19yZXZpZXdzIHtcbiAgICBmbGV4LWJhc2lzOiAxMCU7XG4gIH1cbiAgLmstc2VhcmNocmVzdWx0cy0taXRlbV9fcHJpY2Uge1xuICAgIGZsZXgtYmFzaXM6IDE1JTtcbiAgfVxuICAuay1zZWFyY2hyZXN1bHRzLS1pdGVtX19hY3Rpb24ge1xuICAgIGZsZXgtYmFzaXM6IGF1dG87XG4gIH1cbiAgLmstc2VhcmNocmVzdWx0cy0taXRlbSAuay1iaWd0ZXh0IHtcbiAgICBmb250LXNpemU6IDE1MCU7XG4gIH1cbn1cblxuLmstbG9naW4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5rLWxvZ2luX19iZ2ltZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICB6LWluZGV4OiAxO1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uay1sb2dpbl9fbWlkaW1nIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmstbG9naW5fX2Zvcm1zIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uay1sb2dpbl9fZm9ybXMgLmstbGluZXIge1xuICB3aWR0aDogODAlO1xuICBtYXJnaW46IGF1dG87XG59XG5cbi5rLWxvZ2luX19mb3JtIHtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpLCB0cmFuc2Zvcm0gMC40cyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKSwgaGVpZ2h0IDAuNHMgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwJSk7XG4gIG9wYWNpdHk6IDA7XG4gIGhlaWdodDogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmstbG9naW5fX2Zvcm0uaXMtdmlzaWJsZSB7XG4gIG9wYWNpdHk6IDE7XG4gIGhlaWdodDogYXV0bztcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xufVxuXG4uay1sb2dpbl9fZm9ybSAud29vY29tbWVyY2UtZm9ybS1yb3cge1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG5cbi5rLWxvZ2luIGZvcm0gLmZvcm0tcm93IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uay1sb2dpbiBmb3JtIGlucHV0W3R5cGU9J3RleHQnXSxcbi5rLWxvZ2luIGZvcm0gaW5wdXRbdHlwZT0nZW1haWwnXSxcbi5rLWxvZ2luIGZvcm0gaW5wdXRbdHlwZT0ncGFzc3dvcmQnXSB7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG59XG5cbi5rLWxvZ2luIGZvcm0gaW5wdXRbdHlwZT0ndGV4dCddICsgbGFiZWwsXG4uay1sb2dpbiBmb3JtIGlucHV0W3R5cGU9J2VtYWlsJ10gKyBsYWJlbCxcbi5rLWxvZ2luIGZvcm0gaW5wdXRbdHlwZT0ncGFzc3dvcmQnXSArIGxhYmVsIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDFlbTtcbiAgbGVmdDogMDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgY29sb3I6ICNjY2NjY2M7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG4uay1sb2dpbiBmb3JtIGlucHV0W3R5cGU9J3RleHQnXTpmb2N1cyxcbi5rLWxvZ2luIGZvcm0gaW5wdXRbdHlwZT0nZW1haWwnXTpmb2N1cyxcbi5rLWxvZ2luIGZvcm0gaW5wdXRbdHlwZT0ncGFzc3dvcmQnXTpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5rLWxvZ2luIGZvcm0gaW5wdXRbdHlwZT0ndGV4dCddOmZvY3VzICsgbGFiZWwsXG4uay1sb2dpbiBmb3JtIGlucHV0W3R5cGU9J2VtYWlsJ106Zm9jdXMgKyBsYWJlbCxcbi5rLWxvZ2luIGZvcm0gaW5wdXRbdHlwZT0ncGFzc3dvcmQnXTpmb2N1cyArIGxhYmVsIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbn1cblxuLmstbG9naW4gZm9ybSBpbnB1dFt0eXBlPSdjaGVja2JveCddIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4uay1sb2dpbiBmb3JtIGlucHV0W3R5cGU9J2NoZWNrYm94J106aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5rLWxvZ2luIGZvcm0gaW5wdXRbdHlwZT0nY2hlY2tib3gnXSArIGxhYmVsIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtaW4td2lkdGg6IGF1dG87XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5rLWxvZ2luIGZvcm0gaW5wdXRbdHlwZT0nY2hlY2tib3gnXSArIGxhYmVsOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uay1sb2dpbiBmb3JtIGEge1xuICBjb2xvcjogI2NjY2NjYztcbn1cblxuLmstbG9naW4gZm9ybSBhOmhvdmVyIHtcbiAgY29sb3I6ICNmNGIxM2U7XG59XG5cbi5rLWRhc2hib2FyZCB7XG4gIGJhY2tncm91bmQ6ICNmMmYyZjI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstZGFzaGJvYXJkID4gLmstaW5uZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7XG59XG5cbi5rLWRhc2hib2FyZC0tbWFpbl9fbGluZXIsIC5rLWRhc2hib2FyZC0tc2lkZWJhcl9fbGluZXIge1xuICBib3JkZXItcmFkaXVzOiAwLjMzZW07XG59XG5cbi5rLWRhc2hib2FyZC0tbWFpbl9fbGluZXIgLm15LWRhc2hib2FyZCB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgcGFkZGluZzogMmVtO1xuICBmb250LXNpemU6IDEuMWVtO1xuICBtYXJnaW46IDAgMCAxZW0gMDtcbiAgYm9yZGVyLXJhZGl1czogMC4zM2VtO1xuICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IC41cyBlYXNlO1xufVxuXG4uay1kYXNoYm9hcmQtLW1haW5fX2xpbmVyIC5teS1kYXNoYm9hcmQ6bnRoLWNoaWxkKDIpIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmstZGFzaGJvYXJkLS1tYWluX19saW5lciAubXktZGFzaGJvYXJkOm50aC1jaGlsZCgyKTpiZWZvcmUge1xuICBjb250ZW50OiAnTXkgQWNjb3VudCc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1JTtcbiAgbGVmdDogNSU7XG59XG5cbi5rLWRhc2hib2FyZC0tbWFpbl9fbGluZXIgLm15LWRhc2hib2FyZCAuay1idXR0b24sIC5rLWRhc2hib2FyZC0tbWFpbl9fbGluZXIgLm15LWRhc2hib2FyZCAuay1idXR0b24tLXByaW1hcnkge1xuICBwYWRkaW5nOiAuM2VtIDJlbTtcbn1cblxuLmstZGFzaGJvYXJkLS1tYWluX19saW5lciAubXktZGFzaGJvYXJkIHNwYW4ge1xuICBtYXJnaW46IDFlbSAwO1xufVxuXG4uay1kYXNoYm9hcmQtLW1haW5fX2xpbmVyIC5teS1kYXNoYm9hcmQ6bnRoLWNoaWxkKDMpIGEge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgY29sb3I6ICMwMDA7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5rLWRhc2hib2FyZC0tbWFpbl9fbGluZXIgLm15LWRhc2hib2FyZDpob3ZlciB7XG4gIGJveC1zaGFkb3c6IDAgMCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbn1cblxuLmstZGFzaGJvYXJkLS1zaWRlYmFyIHtcbiAgbWFyZ2luOiAyZW0gMDtcbn1cblxuLmstZGFzaGJvYXJkLS1zaWRlYmFyX19saW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstZGFzaGJvYXJkLS1zaWRlYmFyX19saW5lciB1bCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjtcbn1cblxuLmstZGFzaGJvYXJkLS1zaWRlYmFyX19saW5lciBsaSB7XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgLjVzIGVhc2U7XG59XG5cbi5rLWRhc2hib2FyZC0tc2lkZWJhcl9fbGluZXIgbGkgYSB7XG4gIHBhZGRpbmc6IC41ZW07XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBib3JkZXItcmFkaXVzOiAwLjMzZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG59XG5cbi5rLWRhc2hib2FyZC0tc2lkZWJhcl9fbGluZXIgbGk6aG92ZXIge1xuICBib3gtc2hhZG93OiAwIDAgMjBweCByZ2JhKDAsIDAsIDAsIDAuMik7XG59XG5cbi5rLWRhc2hib2FyZC0tc2lkZWJhcl9fbGluZXIgbGk6aG92ZXIgYSB7XG4gIGNvbG9yOiAjZjRiMTNlO1xufVxuXG4uay1kYXNoYm9hcmQtLXNpZGViYXIgdWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLmstZGFzaGJvYXJkLS1zaWRlYmFyIGxpIHtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuXG4uay1kYXNoYm9hcmQtLXNpZGViYXIgbGk6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5rLWRhc2hib2FyZC0tc2lkZWJhciBhIHtcbiAgY29sb3I6ICMwODA5MDc7XG4gIGZvbnQtZmFtaWx5OiBcIlJlY29sZXRhIFJlZ3VsYXJcIiwgc2VyaWY7XG59XG5cbi53b29jb21tZXJjZS1NeUFjY291bnQtbmF2aWdhdGlvbi1saW5rLndvb2NvbW1lcmNlLU15QWNjb3VudC1uYXZpZ2F0aW9uLWxpbmstLXBheW1lbnQtbWV0aG9kcyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAuay1sb2dpbiB7XG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gOS43NWVtKTtcbiAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmstbG9naW5fX2JnaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuICAuay1sb2dpbl9fbWlkaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAyZW07XG4gICAgbGVmdDogNDguNiU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHdpZHRoOiAyMCU7XG4gICAgei1pbmRleDogMztcbiAgfVxuICAuay1sb2dpbl9fbWlkaW1nIC5rLWZpZ3VyZS0tbGluZXIge1xuICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICB9XG4gIC5rLWxvZ2luX19mb3JtcyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgei1pbmRleDogMjtcbiAgfVxuICAuay1sb2dpbl9fZm9ybXMgLmstbGluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDY2LjY3JTtcbiAgICBtYXgtd2lkdGg6IDI3LjVlbTtcbiAgfVxuICAuay1sb2dpbl9fcmVtZW1iZXJtZSB7XG4gICAgbWFyZ2luLXRvcDogMmVtICFpbXBvcnRhbnQ7XG4gIH1cbiAgLmstbG9naW5fX2Zvcm0ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0b3A6IDUwJTtcbiAgfVxuICAuay1sb2dpbl9fZm9ybS5pcy12aXNpYmxlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIH1cbiAgLmstbG9naW5fX2Zvcm0gYnV0dG9uW3R5cGU9J3N1Ym1pdCddIHtcbiAgICBtYXJnaW46IDJlbSAwIDFlbSAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5rLWxvZ2luX19mb3JtIHAge1xuICAgIG1hcmdpbjogMCAwIDAuNWVtIDA7XG4gIH1cbiAgLmstbG9naW5fX2Zvcm0gYSB7XG4gICAgY29sb3I6ICNjY2NjY2M7XG4gIH1cbiAgLmstbG9naW5fX2Zvcm0gYTpob3ZlciB7XG4gICAgY29sb3I6ICNmNGIxM2U7XG4gIH1cbiAgLmstZGFzaGJvYXJkID4gLmstaW5uZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cbiAgLmstZGFzaGJvYXJkLS1zaWRlYmFyIHtcbiAgICBmbGV4LWJhc2lzOiAyNSU7XG4gICAgbWFyZ2luOiAwIDAgMmVtIDA7XG4gIH1cbiAgLmstZGFzaGJvYXJkLS1tYWluIHtcbiAgICBmbGV4LWJhc2lzOiA3MCU7XG4gIH1cbiAgLmstZGFzaGJvYXJkLS1tYWluX19saW5lciBwOm50aC1jaGlsZCgyKTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICdNeSBBY2NvdW50JztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMiU7XG4gICAgbGVmdDogMzIlO1xuICB9XG59XG5cbi5rLWZhcSA+IC5rLWlubmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmstZmFxLS1oZWFkaW5nIHtcbiAgcGFkZGluZy1sZWZ0OiA1JTtcbn1cblxuLmstZmFxLS1zaWRlYmFyIHtcbiAgb3JkZXI6IDI7XG59XG5cbi5rLWZhcS0tc2lkZWJhciB1bCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxuXG4uay1mYXEtLXNpZGViYXIgYSB7XG4gIGNvbG9yOiAjMDgwOTA3O1xufVxuXG4uay1mYXEtLXNpZGViYXIgcCB7XG4gIG1hcmdpbjogMDtcbn1cblxuLmstZmFxLS1pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogM2VtO1xufVxuXG4uay1mYXEtLWl0ZW06bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5rLWZhcS0taXRlbS5pcy1vcGVuIC5rLWZhcS0taXRlbV9fc3RhdHVzIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHJvdGF0ZSg0MDVkZWcpO1xufVxuXG4uay1mYXEtLWl0ZW1fX2hlYWRpbmcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICB0cmFuc2l0aW9uOiBjb2xvciAuMjVzIGVhc2U7XG59XG5cbi5rLWZhcS0taXRlbV9faGVhZGluZzpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6ICNmNGIxM2U7XG59XG5cbi5rLWZhcS0taXRlbV9faGVhZGluZyBoMiB7XG4gIHdpZHRoOiA5MCU7XG4gIG1hcmdpbjogMCAwIDFlbSAwO1xufVxuXG4uay1mYXEtLWl0ZW1fX3N0YXR1cyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHJpZ2h0OiAwO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIGZvbnQtc2l6ZTogMjAwJTtcbiAgY29sb3I6ICNmNGIxM2U7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjVzIGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIsIDEuMjc1KTtcbn1cblxuLmstZmFxLS1pdGVtX19kcmF3ZXIge1xuICBoZWlnaHQ6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRyYW5zaXRpb246IGhlaWdodCAwLjJzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG4uay1mYXEtLWl0ZW1fX2RyYXdlciBwIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uay1mYXEtLWl0ZW1fX2hlaWdodHRhcmdldCB7XG4gIHBhZGRpbmctYm90dG9tOiAyZW07XG59XG5cbi5rLWNvbnRhY3R1cyB7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgdHJhbnNpdGlvbjogaGVpZ2h0IDFzIGN1YmljLWJlemllcigwLjE2NSwgMC44NCwgMC40NCwgMSk7XG59XG5cbi5rLWNvbnRhY3R1cyAuay1pbm5lci0teGwge1xuICBiYWNrZ3JvdW5kOiAjZjJmMmYyO1xuICBib3JkZXItcmFkaXVzOiAwLjc1ZW07XG59XG5cbi5rLWNvbnRhY3R1cyAuay1maWd1cmUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uay1jb250YWN0dXMgLmstZmlndXJlLS1saW5lciB7XG4gIHBhZGRpbmctYm90dG9tOiA2Ny4xNyU7XG59XG5cbi5rLWNvbnRhY3R1cy0tbWFpbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstY29udGFjdHVzIC5rLWZvcm0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRyYW5zaXRpb246IGhlaWdodCAxcyBjdWJpYy1iZXppZXIoMC4xNjUsIDAuODQsIDAuNDQsIDEpO1xufVxuXG4uay1jb250YWN0dXMgLmstZm9ybS0tc3VibWl0dGluZyBmaWVsZHNldCxcbi5rLWNvbnRhY3R1cyAuay1mb3JtLS1zdWJtaXR0aW5nIGJ1dHRvbiwgLmstY29udGFjdHVzIC5rLWZvcm0tLXN1Ym1pdHRlZCBmaWVsZHNldCxcbi5rLWNvbnRhY3R1cyAuay1mb3JtLS1zdWJtaXR0ZWQgYnV0dG9uIHtcbiAgb3BhY2l0eTogMCAhaW1wb3J0YW50O1xufVxuXG4uay1jb250YWN0dXMgLmstZm9ybS0tc3VibWl0dGVkIHtcbiAgaGVpZ2h0OiAwO1xufVxuXG4uay1jb250YWN0dXMgLmstZm9ybS0tc3VibWl0dGVkICsgLmstZm9ybS0tbWVzc2FnZSB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5rLWNvbnRhY3R1cyAuay1mb3JtLS1ncm91cCB7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLmstY29udGFjdHVzIC5rLWZvcm0gaW5wdXQge1xuICBwYWRkaW5nLXRvcDogMC43NWVtO1xuICBmb250LWZhbWlseTogXCJSZWNvbGV0YSBSZWd1bGFyXCIsIHNlcmlmO1xuICBmb250LXNpemU6IDE0MCU7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5rLWNvbnRhY3R1cyAuay1mb3JtIGlucHV0OmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLmstY29udGFjdHVzIC5rLWZvcm0gbGFiZWwge1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG4uay1jb250YWN0dXMgLmstZm9ybSBmaWVsZHNldCxcbi5rLWNvbnRhY3R1cyAuay1mb3JtIGJ1dHRvbiB7XG4gIG9wYWNpdHk6IDE7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbn1cblxuLmstY29udGFjdHVzIC5rLWZvcm0tLW1lc3NhZ2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIG9wYWNpdHk6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgLmstZmFxLS1oZWFkaW5nIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmstZmFxID4gLmstaW5uZXIge1xuICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cbiAgLmstZmFxLS1oZWFkaW5nIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDUwJTtcbiAgfVxuICAuay1mYXEtLXNpZGViYXIsIC5rLWZhcS0tYWNjb3JkaW9uIHtcbiAgICBvcmRlcjogMTtcbiAgfVxuICAuay1mYXEtLXNpZGViYXIge1xuICAgIGZsZXgtYmFzaXM6IDQ1JTtcbiAgICBtYXJnaW4tcmlnaHQ6IDUlO1xuICB9XG4gIC5rLWZhcS0tc2lkZWJhcl9fbGluZXIge1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgdG9wOiAxMmVtO1xuICB9XG4gIC5rLWZhcS0tYWNjb3JkaW9uIHtcbiAgICBmbGV4LWJhc2lzOiA1MCU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDExOTlweCkge1xuICAuay1mYXEtLWhlYWRpbmcge1xuICAgIHBhZGRpbmctbGVmdDogNDEuNzUlO1xuICB9XG4gIC5rLWZhcS0tc2lkZWJhciB7XG4gICAgZmxleC1iYXNpczogMzUlO1xuICB9XG4gIC5rLWZhcS0tYWNjb3JkaW9uIHtcbiAgICBmbGV4LWJhc2lzOiA2MCU7XG4gIH1cbiAgLmstZmFxLS1pdGVtX19zdGF0dXMge1xuICAgIGZvbnQtc2l6ZTogMzAwJTtcbiAgfVxuICAuay1jb250YWN0dXMgLmstaW5uZXItLXhsIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbiAgLmstY29udGFjdHVzIC5rLWZpZ3VyZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IC01JTtcbiAgICB3aWR0aDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgfVxuICAuay1jb250YWN0dXMtLXRpdGxlLCAuay1jb250YWN0dXMtLW1haW4ge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWFyZ2luLWxlZnQ6IDUwJTtcbiAgfVxufVxuXG4uay1oZXJvLS1hYm91dHVzIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbn1cblxuLmstdHdvdXAtdGV4dCB7XG4gIGJhY2tncm91bmQ6ICNmMmYyZjI7XG59XG5cbi5rLXR3b3VwLXRleHQgLmstaGVhZGxpbmUge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuXG4uay10d291cC10ZXh0IC5rLWJpZ3RleHQge1xuICBmb250LXNpemU6IDE0MCU7XG59XG5cbi5rLXR3b3VwLXRleHQgLmstdHdvdXAtaW1hZ2Vyb3cgaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDBweDtcbiAgd2lkdGg6IDMwJTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uay1wcmVzc3Byb21vIHtcbiAgYmFja2dyb3VuZDogI2YyZjJmMjtcbn1cblxuLmstcHJlc3Nwcm9tby0taW1hZ2Uge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uay1wcmVzc3Byb21vLS1pbWFnZSAuay1maWd1cmUtLWxpbmVyIHtcbiAgcGFkZGluZy1ib3R0b206IDY3LjE3JTtcbn1cblxuLmstcHJlc3Nwcm9tby0tdGl0bGUgaDIge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuXG4uay1wcmVzc3Byb21vLS1jYXJkIHtcbiAgbWFyZ2luLWJvdHRvbTogMmVtO1xufVxuXG4uay1wcmVzc3Byb21vLS1jYXJkOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uay1wcmVzc3Byb21vLS1jYXJkIC5rLWhlYWRsaW5lIGEge1xuICBjb2xvcjogIzA4MDkwNztcbn1cblxuLmstcHJlc3Nwcm9tby0tY2FyZCAuay1oZWFkbGluZSBhOmhvdmVyIHtcbiAgY29sb3I6ICNmNGIxM2UgIWltcG9ydGFudDtcbn1cblxuLmstcHJlc3Nwcm9tby0tY2FyZCAuay1wcmVoZWFkaW5nIHtcbiAgY29sb3I6ICNjMGQ4YmU7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5rLXByZXNzcHJvbW8tLWNhcmRfX2JvZHkge1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi5rLXByZXNzcHJvbW8tLWNhcmRfX2FjdGlvbiBhIHtcbiAgY29sb3I6ICNjY2NjY2M7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAuay10d291cC10ZXh0ID4gLmstaW5uZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgfVxuICAuay10d291cC10ZXh0LS10aXRsZSwgLmstdHdvdXAtdGV4dC0tYm9keSB7XG4gICAgZmxleC1iYXNpczogNDguNSU7XG4gIH1cbiAgLmstcHJlc3Nwcm9tbyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4gIC5rLXByZXNzcHJvbW8tLWltYWdlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDQwJTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgfVxuICAuay1wcmVzc3Byb21vLS1tYWluIHtcbiAgICB3aWR0aDogNTUlO1xuICAgIG1hcmdpbi1sZWZ0OiA0NSU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDExOTlweCkge1xuICAuay1wcmVzc3Byb21vLS1jYXJkcyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICB9XG4gIC5rLXByZXNzcHJvbW8tLWNhcmQge1xuICAgIGZsZXgtYmFzaXM6IDQ1JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgLmstYWxsLXByb2R1Y3RzIC5rLWlubmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICB9XG4gIC5rLWFsbC1wcm9kdWN0cyAuay1wcm9kdWN0Y2FyZCB7XG4gICAgZmxleC1iYXNpczogNDguNSU7XG4gICAgbWFyZ2luLXJpZ2h0OiAwLjc1JTtcbiAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gIH1cbiAgLmstYWxsLXByb2R1Y3RzIC5rLXByb2R1Y3RjYXJkLS10aXRsZSAuay1ydGUtY29udGVudCAqIHtcbiAgICBjb2xvcjogI2NjY2NjYztcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTE5OXB4KSB7XG4gIC5rLWFsbC1wcm9kdWN0cyAuay1wcm9kdWN0Y2FyZCB7XG4gICAgZmxleC1iYXNpczogMzIlO1xuICAgIG1hcmdpbi1yaWdodDogMSU7XG4gIH1cbn1cblxuLmstaGVyby0tbGFicmVzdWx0cyAuay1wcmVoZWFkaW5nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbG9yOiAjYzBkOGJlO1xuICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbn1cblxuLmstaGVyby0tbGFicmVzdWx0cyAuay1oZXJvX19tYWluIHtcbiAgcGFkZGluZzogNy44MTI1ZW0gMDtcbn1cblxuLmstbGFicmVzdWx0c19fc2VhcmNoZm9ybSAuay1wcmVoZWFkaW5nIHtcbiAgY29sb3I6ICNjMGQ4YmU7XG59XG5cbi5rLWxhYnJlc3VsdHNfX3NlYXJjaGZvcm0gLmstZm9ybSBidXR0b25bdHlwZT0nc3VibWl0J10ge1xuICBtYXJnaW4tdG9wOiAwLjVlbTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5rLWxhYnJlc3VsdHNfX3NlYXJjaGZvcm0gLmstZm9ybSBpbnB1dFt0eXBlPSd0ZXh0J10ge1xuICBmb250LXNpemU6IDIwMCU7XG4gIGZvbnQtZmFtaWx5OiBcIlJlY29sZXRhIFJlZ3VsYXJcIiwgc2VyaWY7XG4gIHBhZGRpbmc6IDAuNWVtIDAgMDtcbn1cblxuLmstbGFicmVzdWx0c19fc2VhcmNoZm9ybSAuay1mb3JtIGlucHV0W3R5cGU9J3RleHQnXTpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5rLWxhYnJlc3VsdHMgLmstbGF0ZXN0YmF0Y2gtLXJlc3VsdHMge1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAuay1oZXJvLS1sYWJyZXN1bHRzIC5rLWhlcm9fX21haW4ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICBwYWRkaW5nOiAxNS42MjVlbSAwIDcuODEyNWVtO1xuICB9XG4gIC5rLWhlcm8tLWxhYnJlc3VsdHMgLmstaGVyb19faGVhZGluZyB7XG4gICAgZmxleC1iYXNpczogNDAlO1xuICAgIG1hcmdpbi1yaWdodDogMTAlO1xuICB9XG4gIC5rLWhlcm8tLWxhYnJlc3VsdHMgLmstaGVyb19faGVhZGluZyAuay1oZWFkbGluZSB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG4gIC5rLWhlcm8tLWxhYnJlc3VsdHMgLmstaGVyb19fYm9keSB7XG4gICAgZmxleC1iYXNpczogMzAlO1xuICB9XG4gIC5rLWxhYnJlc3VsdHNfX3NlYXJjaGZvcm0gLmstZm9ybV9fY29udGVudCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4gIC5rLWxhYnJlc3VsdHNfX3NlYXJjaGZvcm0gLmstZm9ybSBpbnB1dFt0eXBlPSd0ZXh0J10ge1xuICAgIG1heC13aWR0aDogNzUlO1xuICAgIG1pbi13aWR0aDogNzUlO1xuICAgIGZvbnQtc2l6ZTogNDAwJTtcbiAgICBwYWRkaW5nOiAwLjI1ZW0gMDtcbiAgICBib3JkZXI6IG5vbmU7XG4gIH1cbiAgLmstbGFicmVzdWx0c19fc2VhcmNoZm9ybSAuay1mb3JtIGJ1dHRvblt0eXBlPSdzdWJtaXQnXSB7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICBtYXJnaW46IDA7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDExOTlweCkge1xuICAuay1sYWJyZXN1bHRzX19zZWFyY2hmb3JtIC5rLWZvcm0gYnV0dG9uW3R5cGU9J3N1Ym1pdCddIHtcbiAgICByaWdodDogMy43NWVtO1xuICB9XG4gIC5rLWxhYnJlc3VsdHMgLmstbGF0ZXN0YmF0Y2gtLXJlc3VsdHMge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbiAgLmstbGFicmVzdWx0cyAuay1sYXRlc3RiYXRjaC0tcmVzdWx0c19fbGluZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjRzIGN1YmljLWJlemllcigwLjA3NSwgMC44MiwgMC4xNjUsIDEpO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGVkZWRlO1xuICB9XG4gIC5rLWxhYnJlc3VsdHMgLmstbGF0ZXN0YmF0Y2gtLXJlc3VsdHNfX2xpbmVyOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y3O1xuICB9XG59XG5cbi5rLW9yZGVycmVjZWl2ZWRfX2hlYWQsIC5rLW9yZGVycmVjZWl2ZWRfX2l0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5rLW9yZGVycmVjZWl2ZWRfX2hlYWQgPiBkaXYsIC5rLW9yZGVycmVjZWl2ZWRfX2l0ZW0gPiBkaXYge1xuICBmbGV4LWJhc2lzOiA1MCU7XG59XG5cbi5rLW9yZGVycmVjZWl2ZWRfX2hlYWQgPiBkaXY6bnRoLWNoaWxkKDIpLCAuay1vcmRlcnJlY2VpdmVkX19pdGVtID4gZGl2Om50aC1jaGlsZCgyKSB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uay1vcmRlcnJlY2VpdmVkX19oZWFkIHAsXG4uay1vcmRlcnJlY2VpdmVkX19oZWFkIGgzLCAuay1vcmRlcnJlY2VpdmVkX19pdGVtIHAsXG4uay1vcmRlcnJlY2VpdmVkX19pdGVtIGgzIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4uay1vcmRlcnJlY2VpdmVkX19oZWFkIGEsIC5rLW9yZGVycmVjZWl2ZWRfX2l0ZW0gYSB7XG4gIGNvbG9yOiAjZjRiMTNlO1xufVxuXG4uay1vcmRlcnJlY2VpdmVkX19oZWFkIGE6aG92ZXIsIC5rLW9yZGVycmVjZWl2ZWRfX2l0ZW0gYTpob3ZlciB7XG4gIGNvbG9yOiAjZDk4ZTBjICFpbXBvcnRhbnQ7XG59XG5cbi5rLW9yZGVycmVjZWl2ZWRfX2hlYWQge1xuICBiYWNrZ3JvdW5kOiAjZGVkZWRlO1xuICBwYWRkaW5nOiAwLjY2N2VtIDFlbTtcbn1cblxuLmstb3JkZXJyZWNlaXZlZF9faXRlbSB7XG4gIHBhZGRpbmc6IDAuNjY3ZW0gMWVtO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RlZGVkZTtcbn1cblxuLmstb3JkZXJyZWNlaXZlZF9faXRlbTpsYXN0LWNoaWxkIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbn1cblxuLmstb3JkZXJyZWNlaXZlZF9faXRlbSAuay1iaWd0ZXh0IHtcbiAgZm9udC1zaXplOiAxMjUlO1xufVxuXG4ucGFnZS10ZW1wbGF0ZS12ZXRlcmFuLXNpZ251cCAuay1pbnRyb3RleHQge1xuICBwYWRkaW5nLWJvdHRvbTogMmVtO1xufVxuXG4ucGFnZS10ZW1wbGF0ZS12ZXRlcmFuLXNpZ251cCAuay1pbnRyb3RleHQgaDIge1xuICBtYXJnaW46IDAgMCAxZW0gMDtcbn1cblxuLmstdmV0ZXJhbnMgLmstZm9ybV9fYWN0aW9ucyB7XG4gIG1hcmdpbi10b3A6IDJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uay12ZXRlcmFuc19fZm9ybXMge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXItdG9wOiAwLjI1ZW0gc29saWQgI2Y0YjEzZTtcbiAgYm94LXNoYWRvdzogMCAwIDVweCAjZGVkZWRlO1xufVxuXG4uay12ZXRlcmFuc19fZm9ybSA+IC5rLWxpbmVyIHtcbiAgcGFkZGluZzogMWVtIDJlbTtcbn1cblxuLmstdmV0ZXJhbnNfX2Zvcm06Zmlyc3QtY2hpbGQge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RlZGVkZTtcbn1cblxuLmstdmV0ZXJhbnNfX2Zvcm0gaW5wdXRbdHlwZT0nZmlsZSddIHtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgb3BhY2l0eTogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xufVxuXG4uay12ZXRlcmFuc19fZm9ybSBpbnB1dFt0eXBlPSdmaWxlJ10uaGFzLXZhbHVlICsgbGFiZWwge1xuICBiYWNrZ3JvdW5kOiAjYzBkOGJlO1xufVxuXG4uay12ZXRlcmFuc19fZm9ybSBpbnB1dFt0eXBlPSdmaWxlJ10uaGFzLXZhbHVlICsgbGFiZWw6YWZ0ZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgb3BhY2l0eTogMTtcbiAgY29udGVudDogJ0dvdCBpdCEnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICByaWdodDogLTUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICBjb2xvcjogI2Y0YjEzZTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLmstdmV0ZXJhbnNfX2Zvcm0gaW5wdXRbdHlwZT0nZmlsZSddLmhhcy12YWx1ZSArIGxhYmVsOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogIzIyMjIyMjtcbn1cblxuLmstdmV0ZXJhbnNfX2Zvcm0gaW5wdXRbdHlwZT0nZmlsZSddOmZvY3VzICsgbGFiZWwge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwKTtcbn1cblxuLmstdmV0ZXJhbnNfX2Zvcm0gaW5wdXRbdHlwZT0nZmlsZSddICsgbGFiZWwge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwKTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBhbGw7XG4gIGJhY2tncm91bmQ6ICMyMjIyMjI7XG4gIGNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAxZW0gMS41ZW07XG4gIGJvcmRlci1yYWRpdXM6IDAuMzNlbTtcbiAgbWluLXdpZHRoOiBhdXRvO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC40cyBjdWJpYy1iZXppZXIoMC4wNzUsIDAuODIsIDAuMTY1LCAxKTtcbn1cblxuLmstdmV0ZXJhbnNfX2Zvcm0gaW5wdXRbdHlwZT0nZmlsZSddICsgbGFiZWw6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5rLXZldGVyYW5zIC5rLWlucHV0IHtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuXG4uay12ZXRlcmFucyAuay1pbnB1dCArIGxhYmVsIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDFlbTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNHMgY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSk7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGNvbG9yOiAjY2NjY2NjO1xufVxuXG4uay12ZXRlcmFucyAuay1pbnB1dDpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAuay12ZXRlcmFuc19fZm9ybSA+IC5rLWxpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBwYWRkaW5nOiA0ZW0gM2VtO1xuICB9XG4gIC5rLXZldGVyYW5zX19oZWFkaW5nIHtcbiAgICBmbGV4LWJhc2lzOiA0MCU7XG4gIH1cbiAgLmstdmV0ZXJhbnNfX2hlYWRpbmcgLmstbGluZXIge1xuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgdG9wOiAxMGVtO1xuICB9XG4gIC5rLXZldGVyYW5zX19oZWFkaW5nOmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW4tdG9wOiAxZW07XG4gIH1cbiAgLmstdmV0ZXJhbnNfX2hlYWRpbmcgaDMge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuICAuay12ZXRlcmFuc19fZmllbGRzIHtcbiAgICBmbGV4LWJhc2lzOiA1MCU7XG4gIH1cbn1cblxuLnBhZ2UtdGVtcGxhdGUtbG9jYXRpb24tZmluZGVyIC5rLWN0YWJhbm5lcixcbi5wYWdlLXRlbXBsYXRlLWxvY2F0aW9uLWZpbmRlciAuay1mb290ZXIge1xuICB6LWluZGV4OiA5OTtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cblxuLnBhZ2UtdGVtcGxhdGUtbG9jYXRpb24tZmluZGVyIC5tYXBib3hnbC1wb3B1cC1hbmNob3ItYm90dG9tIHtcbiAgei1pbmRleDogOTk7XG59XG5cbi5wYWdlLXRlbXBsYXRlLWxvY2F0aW9uLWZpbmRlciAjbGZlLXJvb3QgZm9ybSBsYWJlbCB7XG4gIG1pbi13aWR0aDogMDtcbn1cblxuLnBhZ2UtdGVtcGxhdGUtY2FydCAuay1oZWFkZXIge1xuICB0b3A6IDAgIWltcG9ydGFudDtcbn1cblxuLnBhZ2UtdGVtcGxhdGUtY2FydCAuay1oZWFkZXItLXRvcCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5wYWdlLXRlbXBsYXRlLWNhcnQgLmstaGVhZGVyLS1uYXYge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucGFnZS10ZW1wbGF0ZS1jYXJ0IC5rLWhlYWRlci0tbmF2dG9nZ2xlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnBhZ2UtdGVtcGxhdGUtY2FydCAuay1oZWFkZXItLWxvZ28ge1xuICB0cmFuc2Zvcm06IHNjYWxlKDAuNyk7XG59XG5cbi5wYWdlLXRlbXBsYXRlLWNhcnQgLmstY2FydF9faGVhZGxpbmUgaDEge1xuICBtYXJnaW4tdG9wOiAwO1xufVxuXG4ucGFnZS10ZW1wbGF0ZS1jYXJ0IC5rLWN0YWJhbm5lciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5rb2ktZXJyb3Ige1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA4NXZoO1xuICBtYXJnaW46IDAgMCAyZW0gMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogMCAxZW07XG59XG5cbi5rb2ktZXJyb3I6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbnRlbnQ6ICcnO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgei1pbmRleDogMjtcbn1cblxuLmtvaS1lcnJvciBpbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5rb2ktZXJyb3IgaDEge1xuICB6LWluZGV4OiAzO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogM2VtO1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5rb2ktZXJyb3IgcCB7XG4gIHotaW5kZXg6IDM7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxLjNlbTtcbiAgY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiAwIDJlbTtcbn1cblxuLmtvaS1lcnJvciBhIHtcbiAgbWFyZ2luOiAzZW0gMCAwIDA7XG4gIHotaW5kZXg6IDM7XG59XG4iLCJAZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdSZWNvbGV0YSBSZWd1bGFyJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogdXJsKCcuLi8uLi9kaXN0L2ZvbnRzL1JlY29sZXRhLVJlZ3VsYXIuZW90JykgZm9ybWF0KCdlb3QnKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JlY29sZXRhIFJlZ3VsYXInO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoJy4uLy4uL2Rpc3QvZm9udHMvUmVjb2xldGEtUmVndWxhci50dGYnKSBmb3JtYXQoJ3R0ZicpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUmVjb2xldGEgUmVndWxhcic7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybCgnLi4vLi4vZGlzdC9mb250cy9SZWNvbGV0YS1SZWd1bGFyLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JlY29sZXRhIFJlZ3VsYXInO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoJy4uLy4uL2Rpc3QvZm9udHMvUmVjb2xldGEtUmVndWxhci53b2ZmMicpIGZvcm1hdCgnd29mZjInKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JlY29sZXRhIFJlZ3VsYXInO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoJy4uLy4uL2Rpc3QvZm9udHMvUmVjb2xldGFSZWd1bGFyLm90ZicpIGZvcm1hdCgnb3RmJyk7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0dUIEFtZXJpY2EnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoJy4uLy4uL2Rpc3QvZm9udHMvR1QtQW1lcmljYS1MaWdodC5vdGYnKSBmb3JtYXQoJ290ZicpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnR1QgQW1lcmljYSc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybCgnLi4vLi4vZGlzdC9mb250cy9ndC1hbWVyaWNhLWxpZ2h0LXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnR1QgQW1lcmljYSc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybCgnLi4vLi4vZGlzdC9mb250cy9ndC1hbWVyaWNhLWxpZ2h0LXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyk7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0dUIEFtZXJpY2EnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoJy4uLy4uL2Rpc3QvZm9udHMvR1QtQW1lcmljYS1SZWd1bGFyLm90ZicpIGZvcm1hdCgnb3RmJyk7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdHVCBBbWVyaWNhJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogdXJsKCcuLi8uLi9kaXN0L2ZvbnRzL2d0LWFtZXJpY2EtcmVndWxhci13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0dUIEFtZXJpY2EnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoJy4uLy4uL2Rpc3QvZm9udHMvZ3QtYW1lcmljYS1yZWd1bGFyLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyk7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0dUIEFtZXJpY2EnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoJy4uLy4uL2Rpc3QvZm9udHMvR1QtQW1lcmljYS1NZWRpdW0ub3RmJykgZm9ybWF0KCdvdGYnKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0dUIEFtZXJpY2EnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoJy4uLy4uL2Rpc3QvZm9udHMvZ3QtYW1lcmljYS1tZWRpdW0td2ViZm9udC53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdHVCBBbWVyaWNhJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogdXJsKCcuLi8uLi9kaXN0L2ZvbnRzL2d0LWFtZXJpY2EtbWVkaXVtLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyk7XG59XG5cbiRoZWFkaW5nLWZvbnQ6ICdSZWNvbGV0YSBSZWd1bGFyJywgc2VyaWY7XG4kYm9keS1mb250OiAnR1QgQW1lcmljYScsIHNhbnMtc2VyaWY7XG5cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sLFxuYm9keSB7XG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xufVxuXG5ib2R5IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gIG1pbi13aWR0aDogMzIwcHg7XG4gIGZvbnQtZmFtaWx5OiAkYm9keS1mb250O1xuICBsaW5lLWhlaWdodDogMS44NTtcbn1cblxuI3toZWFkaW5ncygpfSB7XG4gIGZvbnQtZmFtaWx5OiAkaGVhZGluZy1mb250O1xuICBsaW5lLWhlaWdodDogMTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cblxuaDEge1xufVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogMS44ZW07XG59XG5cbi5rLWhlYWRsaW5lIHtcbiAgZm9udC1mYW1pbHk6ICRoZWFkaW5nLWZvbnQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjIyNTtcblxuICAmLS14cyB7XG4gICAgZm9udC1zaXplOiAxLjVlbTtcbiAgfVxuXG4gICYtLXNtIHtcbiAgICBmb250LXNpemU6IDEuOWVtO1xuICB9XG5cbiAgJi0tbWQge1xuICAgIGZvbnQtc2l6ZTogMi4yZW07XG4gIH1cblxuICAmLS1sZyB7XG4gICAgZm9udC1zaXplOiAzZW07XG4gIH1cblxuICAmLS1mYWtlIHtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBmb250LWZhbWlseTogJGJvZHktZm9udDtcbiAgICBsaW5lLWhlaWdodDogMS40O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIH1cblxuICAmLS1ib2R5IHtcbiAgICBmb250LWZhbWlseTogJGJvZHktZm9udDtcbiAgICAvLyBmb250LXdlaWdodDogNTAwO1xuICB9XG59XG5cbi5rLXdlaWdodCB7XG4gICYtLXNtIHtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICB9XG5cbiAgJi0tbWQge1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIH1cblxuICAmLS1sZyB7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgfVxufVxuXG4uay1hY2NlbnQtdGV4dCB7XG4gIGNvbG9yOiAkYWNjZW50LXRleHQ7XG59XG5cbi5rLXVuZGVybGluZSB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG4uay1ydGUtY29udGVudCB7XG4gICN7aGVhZGluZ3MoKX0ge1xuICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG4gIH1cblxuICBhIHtcbiAgICBjb2xvcjogJGJsYWNrO1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG4gIH1cblxuICAuay1idXR0b24ge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgICYtLWRhcmsge1xuICAgICAgY29sb3I6ICR0cnVlLXdoaXRlO1xuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIH1cbiAgfVxuXG4gIGltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG1pbi13aWR0aDogMTAwJTtcbiAgfVxuXG4gIHAge1xuICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG4gIH1cbn1cblxuLm9uLWRhcmsge1xuICAje2hlYWRpbmdzKCl9LFxuICBhLFxuICBwLFxuICB1bCxcbiAgbGksXG4gIHNwYW4sXG4gIC5rLWhlYWRsaW5lIHtcbiAgICBjb2xvcjogJHRydWUtd2hpdGU7XG4gIH1cblxuICBhOmhvdmVyIHtcbiAgICBjb2xvcjogJHByaW1hcnk7XG4gIH1cbn1cblxuLmstYWxpZ24ge1xuICAmLS1sZWZ0IHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG5cbiAgJi0tY2VudGVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAmLS1yaWdodCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cbn1cblxuYSxcbi5rLWZha2VsaW5rIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjRzICRlYXNlLW91dC1xdWFydDtcblxuICAmOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgY29sb3I6ICRwcmltYXJ5ICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLmstdXBjYXNlIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLmstYmctZGFyayB7XG4gIGJhY2tncm91bmQ6ICRiZy1ncmF5O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLW1kKSB7XG4gIC5rLWhlYWRsaW5lIHtcbiAgICAmLS1tZCB7XG4gICAgICBmb250LXNpemU6IDIuOGVtO1xuICAgIH1cblxuICAgICYtLWxnIHtcbiAgICAgIGZvbnQtc2l6ZTogMy41ZW07XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgLmstaGVhZGxpbmUge1xuICAgICYtLW1kIHtcbiAgICAgIGZvbnQtc2l6ZTogM2VtO1xuICAgIH1cblxuICAgICYtLWxnIHtcbiAgICAgIGZvbnQtc2l6ZTogMy44ZW07XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgLmstaGVhZGxpbmUge1xuICAgICYtLW1kIHtcbiAgICAgIGZvbnQtc2l6ZTogMy41ZW07XG4gICAgfVxuXG4gICAgJi0tbGcge1xuICAgICAgZm9udC1zaXplOiA0LjVlbTtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC14bCkge1xuICAuay1oZWFkbGluZSB7XG4gICAgJi0tc20ge1xuICAgICAgZm9udC1zaXplOiAyLjVlbTtcbiAgICB9XG5cbiAgICAmLS1tZCB7XG4gICAgICBmb250LXNpemU6IDMuOGVtO1xuICAgIH1cblxuICAgICYtLWxnIHtcbiAgICAgIGZvbnQtc2l6ZTogNWVtO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXh4bCkge1xuICAuay1oZWFkbGluZSB7XG4gICAgJi0teHMge1xuICAgICAgZm9udC1zaXplOiAxLjg1ZW07XG4gICAgfVxuXG4gICAgJi0tc20ge1xuICAgICAgZm9udC1zaXplOiAyLjhlbTtcbiAgICB9XG5cbiAgICAvLyAmLS1tZCB7XG4gICAgLy8gICBmb250LXNpemU6IDQuMzNlbTtcbiAgICAvLyB9XG5cbiAgICAmLS1sZyB7XG4gICAgICBmb250LXNpemU6IDZlbTtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1tYXgpIHtcbiAgYm9keSB7XG4gICAgZm9udC1zaXplOiAwLjg5dnc7XG4gICAgdHJhbnNpdGlvbjogZm9udC1zaXplIDAuMnMgJGVhc2Utb3V0LWNpcmM7XG4gIH1cblxuICAuay1oZWFkbGluZSB7XG4gICAgJi0teHMge1xuICAgICAgZm9udC1zaXplOiAxLjllbTtcbiAgICB9XG5cbiAgICAmLS1zbSB7XG4gICAgICBmb250LXNpemU6IDMuMmVtO1xuICAgIH1cblxuICAgIC8vICYtLW1kIHtcbiAgICAvLyAgIGZvbnQtc2l6ZTogNC44ZW07XG4gICAgLy8gfVxuXG4gICAgJi0tbGcge1xuICAgICAgZm9udC1zaXplOiA2LjU1ZW07XG4gICAgfVxuICB9XG59XG5cbi8vIEBtZWRpYShtaW4td2lkdGg6IDIwMDBweCkge1xuLy8gICBib2R5IHtcbi8vICAgICBmb250LXNpemU6IC44NjV2dztcbi8vICAgfVxuLy8gfVxuIiwiJGVhc2UtaW4tcXVhZDogY3ViaWMtYmV6aWVyKDAuNTUsIDAuMDg1LCAwLjY4LCAwLjUzKTtcbiRlYXNlLWluLWN1YmljOiBjdWJpYy1iZXppZXIoMC41NSwgMC4wNTUsIDAuNjc1LCAwLjE5KTtcbiRlYXNlLWluLXF1YXJ0OiBjdWJpYy1iZXppZXIoMC44OTUsIDAuMDMsIDAuNjg1LCAwLjIyKTtcbiRlYXNlLWluLXF1aW50OiBjdWJpYy1iZXppZXIoMC43NTUsIDAuMDUsIDAuODU1LCAwLjA2KTtcbiRlYXNlLWluLXNpbmU6IGN1YmljLWJlemllcigwLjQ3LCAwLCAwLjc0NSwgMC43MTUpO1xuJGVhc2UtaW4tZXhwbzogY3ViaWMtYmV6aWVyKDAuOTUsIDAuMDUsIDAuNzk1LCAwLjAzNSk7XG4kZWFzZS1pbi1jaXJjOiBjdWJpYy1iZXppZXIoMC42LCAwLjA0LCAwLjk4LCAwLjMzNSk7XG4kZWFzZS1pbi1iYWNrOiBjdWJpYy1iZXppZXIoMC42LCAtMC4yOCwgMC43MzUsIDAuMDQ1KTtcblxuJGVhc2Utb3V0LXF1YWQ6IGN1YmljLWJlemllcigwLjI1LCAwLjQ2LCAwLjQ1LCAwLjk0KTtcbiRlYXNlLW91dC1jdWJpYzogY3ViaWMtYmV6aWVyKDAuMjE1LCAwLjYxLCAwLjM1NSwgMSk7XG4kZWFzZS1vdXQtcXVhcnQ6IGN1YmljLWJlemllcigwLjE2NSwgMC44NCwgMC40NCwgMSk7XG4kZWFzZS1vdXQtcXVpbnQ6IGN1YmljLWJlemllcigwLjIzLCAxLCAwLjMyLCAxKTtcbiRlYXNlLW91dC1zaW5lOiBjdWJpYy1iZXppZXIoMC4zOSwgMC41NzUsIDAuNTY1LCAxKTtcbiRlYXNlLW91dC1leHBvOiBjdWJpYy1iZXppZXIoMC4xOSwgMSwgMC4yMiwgMSk7XG4kZWFzZS1vdXQtY2lyYzogY3ViaWMtYmV6aWVyKDAuMDc1LCAwLjgyLCAwLjE2NSwgMSk7XG4kZWFzZS1vdXQtYmFjazogY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMS4yNzUpO1xuXG4kZWFzZS1pbi1vdXQtcXVhZDogY3ViaWMtYmV6aWVyKDAuNDU1LCAwLjAzLCAwLjUxNSwgMC45NTUpO1xuJGVhc2UtaW4tb3V0LWN1YmljOiBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMSk7XG4kZWFzZS1pbi1vdXQtcXVhcnQ6IGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG4kZWFzZS1pbi1vdXQtcXVpbnQ6IGN1YmljLWJlemllcigwLjg2LCAwLCAwLjA3LCAxKTtcbiRlYXNlLWluLW91dC1zaW5lOiBjdWJpYy1iZXppZXIoMC40NDUsIDAuMDUsIDAuNTUsIDAuOTUpO1xuJGVhc2UtaW4tb3V0LWV4cG86IGN1YmljLWJlemllcigxLCAwLCAwLCAxKTtcbiRlYXNlLWluLW91dC1jaXJjOiBjdWJpYy1iZXppZXIoMC43ODUsIDAuMTM1LCAwLjE1LCAwLjg2KTtcbiRlYXNlLWluLW91dC1iYWNrOiBjdWJpYy1iZXppZXIoMC42OCwgLTAuNTUsIDAuMjY1LCAxLjU1KTtcblxuJHRydWUtd2hpdGU6ICNmZmY7XG4kdHJ1ZS1ibGFjazogIzAwMDtcbiRibGFjazogIzA4MDkwNztcbiRwcmltYXJ5OiAjZjRiMTNlO1xuJHByaW1hcnktZGFyazogZGFya2VuKCRwcmltYXJ5LCAxNSUpO1xuJGFjY2VudC10ZXh0OiAjY2NjY2NjO1xuJGJnLWdyYXk6ICNmMmYyZjI7XG4kYmctZ3JheS1saWdodDogI2Y3ZjdmNztcbiRiZy1kYXJrOiAjMjIyMjIyO1xuJGhpZ2hsaWdodDogI2MwZDhiZTtcblxuJGJwLXNtOiA1ODBweDtcbiRicC1tZDogNzY3cHg7XG4kYnAtbGc6IDk5MnB4O1xuJGJwLXhsOiAxMTk5cHg7XG4kYnAteHhsOiAxNDQwcHg7XG4kYnAtbWF4OiAxODAwcHg7XG5cbkBmdW5jdGlvbiBoZWFkaW5ncygpIHtcbiAgQHJldHVybiBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2O1xufVxuXG5AbWl4aW4gY2xlYXJmaXgoKSB7XG4gICY6YmVmb3JlLFxuICAmOmFmdGVyIHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBjb250ZW50OiAnJztcbiAgICBjbGVhcjogYm90aDtcbiAgfVxufVxuXG5AbWl4aW4gZmlsbC1wYXJlbnQoKSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG5AbWl4aW4gYWJzb2x1dGUtY2VudGVyKCkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufVxuXG5AbWl4aW4gc3ZnLWhhY2soJGFtdCkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgLnN2Zy13cmFwcGVyIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogJGFtdDtcbiAgfVxuXG4gIGEsXG4gIHN2ZyB7XG4gICAgQGluY2x1ZGUgZmlsbC1wYXJlbnQoKTtcbiAgfVxuXG4gIHN2ZyB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxufVxuXG5AbWl4aW4gdW5zdHlsZS1saXN0KCkge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuQG1peGluIHBhZGRpbmctYm90dG9tLWhhY2soJGFtdCkge1xuICBwYWRkaW5nLWJvdHRvbTogJGFtdDtcblxuICAuZmlsbC1wYWRkaW5nLWJvdHRvbSxcbiAgaW1nIHtcbiAgICBAaW5jbHVkZSBmaWxsLXBhcmVudCgpO1xuICB9XG59XG4iLCIkcGFkZGluZy1taW5pOiAzZW07XG4kcGFkZGluZy14czogNS44NTk1ZW07XG4kcGFkZGluZy1zbTogNy44MTI1ZW07XG4kcGFkZGluZy1tZDogMTEuNzE4N2VtO1xuJHBhZGRpbmctbGc6IDE1LjYyNWVtO1xuXG4uay1ibG9jayB7XG4gICYtLXNtIHtcbiAgICBwYWRkaW5nOiAkcGFkZGluZy1taW5pIDA7XG4gIH1cblxuICAmLS1tZCB7XG4gICAgcGFkZGluZzogJHBhZGRpbmcteHMgMDtcbiAgfVxuXG4gICYtLWxnIHtcbiAgICBwYWRkaW5nOiAkcGFkZGluZy1zbSAwO1xuICB9XG59XG5cbi5rLWlubmVyIHtcbiAgbWFyZ2luOiBhdXRvO1xuXG4gICYtLXNtLFxuICAmLS1tZCxcbiAgJi0tbGcsXG4gICYtLXhsIHtcbiAgICB3aWR0aDogOTAlO1xuICB9XG5cbiAgJi0tc20ge1xuICAgIG1heC13aWR0aDogNTguMzNlbTtcbiAgfVxufVxuXG4uay1uby1wYWRkaW5nIHtcbiAgJi0tdG9wIHtcbiAgICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50O1xuICB9XG5cbiAgJi0tYm90dG9tIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuICB9XG59XG5cbi5rLWhhbGYtcGFkZGluZyB7XG4gICYtLXRvcCB7XG4gICAgcGFkZGluZy10b3A6IDQuNzVlbSAhaW1wb3J0YW50O1xuICB9XG5cbiAgJi0tYm90dG9tIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogNC43NWVtICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1tZCkge1xuICAuay1ibG9jayB7XG4gICAgJi0tbWQge1xuICAgICAgcGFkZGluZzogJHBhZGRpbmctc20gMDtcbiAgICB9XG5cbiAgICAmLS1sZyB7XG4gICAgICBwYWRkaW5nOiAkcGFkZGluZy1tZCAwO1xuICAgIH1cbiAgfVxuXG4gIC5rLWlubmVyIHtcbiAgICAmLS1tZCB7XG4gICAgICB3aWR0aDogODAlO1xuICAgIH1cblxuICAgICYtLXhsIHtcbiAgICAgIC5rLWlubmVyLS1tZCB7XG4gICAgICAgIHdpZHRoOiA4OC44ODklO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXhsKSB7XG4gIC5rLWJsb2NrIHtcbiAgICAmLS1tZCB7XG4gICAgICBwYWRkaW5nOiAkcGFkZGluZy1tZCAwO1xuICAgIH1cblxuICAgICYtLWxnIHtcbiAgICAgIHBhZGRpbmc6ICRwYWRkaW5nLWxnIDA7XG4gICAgfVxuICB9XG5cbiAgLmstaW5uZXIge1xuICAgICYtLWxnIHtcbiAgICAgIHdpZHRoOiA4OCU7XG4gICAgfVxuXG4gICAgJi0teGwge1xuICAgICAgd2lkdGg6IDk0LjQ0JTtcblxuICAgICAgLmstaW5uZXItLW1kIHtcbiAgICAgICAgd2lkdGg6IDg0LjcxMSU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuay1oZWFkZXJwYWRkaW5nIHtcbiAgLy8gdHJhbnNpdGlvbjogcGFkZGluZyAuNHMgJGVhc2Utb3V0LWNpcmM7XG59XG5cbi5mYWRlIHtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjM1cyAkZWFzZS1vdXQtY2lyYztcbn1cbiIsIi5pcy1pZTExIHtcbiAgI2stYmFja2Ryb3Age1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cblxuYm9keSB7XG4gICYuY2FydC1zaWRlYmFyLW9wZW4ge1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gIH1cbn1cblxuI2stYmFja2Ryb3Age1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZDogJGJsYWNrO1xuICB6LWluZGV4OiAtMTAwO1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHMgJGVhc2Utb3V0LXF1YXJ0O1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG5cbiAgJi5hY3RpdmUge1xuICAgIHotaW5kZXg6IDEwMDtcbiAgICBvcGFjaXR5OiAwLjk7XG4gICAgcG9pbnRlci1ldmVudHM6IGFsbDtcbiAgfVxufVxuXG5pbWdbZGF0YS1zcmNdIHtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgJGVhc2UtaW4tY2lyYywgdHJhbnNmb3JtIDFzICRlYXNlLW91dC1jaXJjO1xuXG4gICYubGF6eWxvYWQtLWNvbXBsZXRlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIH1cbn1cblxuLmstYmxvZy1icmVhZGNydW1iIHtcbiAgZGlzcGxheTogbm9uZTsgLy8ganVzdCBkb24ndCBldmVuIHNob3cgaXQgb24gbW9iaWxlXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuXG4gICYgPiAuay1pbm5lciB7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG4gIH1cblxuICAmLS1jb250ZW50IHtcbiAgICBwYWRkaW5nOiAxLjVlbSAxNSUgMS41ZW0gMDtcbiAgfVxuXG4gIHVsIHtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cblxuICBsaSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtc2l6ZTogODUlO1xuICB9XG5cbiAgYSB7XG4gICAgY29sb3I6ICRibGFjaztcblxuICAgICY6aG92ZXIge1xuICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgIH1cbiAgfVxufVxuXG4uay1oZWFkZXItLWNhcnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbiNrLWNhcnRudW0ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIC8vIHRvcDogLTEuMTVlbTtcbiAgLy8gbGVmdDogNTAlO1xuICB0b3A6IDMzJTtcbiAgbGVmdDogM2VtO1xuICBsaW5lLWhlaWdodDogMDtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGNvbG9yOiAkdHJ1ZS13aGl0ZTtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMTAwJSk7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMXMgJGVhc2Utb3V0LWNpcmMsIHRyYW5zZm9ybSAxcyAkZWFzZS1vdXQtY2lyYztcblxuICAmLmstaGFzLXZhbHVlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDApO1xuICB9XG5cbiAgJjphZnRlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHdpZHRoOiAxLjVlbTtcbiAgICBoZWlnaHQ6IDEuNWVtO1xuICAgIGJhY2tncm91bmQ6ICRwcmltYXJ5O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB6LWluZGV4OiAtMTtcbiAgfVxufVxuXG4uay1maWd1cmUge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAmLS1yb3VuZGVkIHtcbiAgICBib3JkZXItcmFkaXVzOiAwLjY2N2VtO1xuICB9XG5cbiAgJi0tZnBvIHtcbiAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeTtcblxuICAgICY6YWZ0ZXIge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb250ZW50OiAnRiBQIE8nO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgZm9udC1mYW1pbHk6ICRoZWFkaW5nLWZvbnQ7XG4gICAgICBmb250LXNpemU6IDQwMCU7XG4gICAgICBjb2xvcjogJHRydWUtd2hpdGU7XG4gICAgfVxuICB9XG5cbiAgJi0taW1nIHtcbiAgICBAaW5jbHVkZSBmaWxsLXBhcmVudCgpO1xuICB9XG59XG5cbi5rb2ktYmcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IC0xO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiBhdXRvO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuXG4gIHBhdGgge1xuICAgIGZpbGw6IGxpZ2h0ZW4oJGFjY2VudC10ZXh0LCAxMCUpO1xuICB9XG59XG5cbi5rb2ktc3ZnIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gIHN2ZyB7XG4gICAgQGluY2x1ZGUgZmlsbC1wYXJlbnQoKTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICB9XG59XG5cbi5oYXMtcGxheS1idXR0b24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJjphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb250ZW50OiAnJztcbiAgICB3aWR0aDogMDtcbiAgICBoZWlnaHQ6IDA7XG4gICAgYm9yZGVyLXRvcDogMC42N2VtIHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1ib3R0b206IDAuNjdlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItbGVmdDogMWVtIHNvbGlkICRibGFjaztcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICB6LWluZGV4OiAzO1xuICB9XG59XG5cbi5rLXBsYXktYnV0dG9uIHtcbiAgZmlsbDogJHRydWUtd2hpdGU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjZzICRlYXNlLW91dC1jaXJjO1xuICB3aWR0aDogMzAlO1xuICBtYXgtd2lkdGg6IDcuODEyNWVtO1xuXG4gICY6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoMzYwZGVnKSBzY2FsZSgwLjgsIDAuOCk7XG4gIH1cbn1cblxuLmstZ29sZHN0YXIge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmLS1saW5lciB7XG4gICAgcGFkZGluZy1ib3R0b206IDEwMCU7XG4gIH1cblxuICBzdmcge1xuICAgIEBpbmNsdWRlIGZpbGwtcGFyZW50KCk7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxufVxuXG4uay1hcnJvdyB7XG4gIHdpZHRoOiAxLjVlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICYtLWxpbmVyIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcbiAgfVxuXG4gIHN2ZyB7XG4gICAgQGluY2x1ZGUgZmlsbC1wYXJlbnQoKTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgY2lyY2xlLFxuICAgIHBvbHlsaW5lLFxuICAgIGxpbmUge1xuICAgICAgc3Ryb2tlOiAkYWNjZW50LXRleHQ7XG4gICAgICB0cmFuc2l0aW9uOiBzdHJva2UgMC40cyAkZWFzZS1vdXQtY2lyYztcbiAgICB9XG4gIH1cblxuICAmOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICBzdmcge1xuICAgICAgY2lyY2xlLFxuICAgICAgcG9seWxpbmUsXG4gICAgICBsaW5lIHtcbiAgICAgICAgc3Ryb2tlOiAkYmctZGFyaztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1tZCkge1xuICAjay1jYXJ0bnVtIHtcbiAgICB0b3A6IC0xLjE1ZW07XG4gICAgbGVmdDogNTAlO1xuICAgIHJpZ2h0OiBhdXRvO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgLmstYmxvZy1icmVhZGNydW1iIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuIiwiZm9ybSB7XG4gIGgzIHtcbiAgICBmb250LXNpemU6IDJlbTtcbiAgfVxuXG4gIGZpZWxkc2V0IHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXI6IDA7XG4gIH1cblxuICBsYWJlbCxcbiAgaW5wdXQsXG4gIHRleHRhcmVhLFxuICBzZWxlY3Qge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cblxuICBsYWJlbCB7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcblxuICAgIGFiYnIge1xuICAgICAgY29sb3I6IHJlZDtcbiAgICB9XG4gIH1cblxuICBpbnB1dCB7XG4gICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kOiAwO1xuICAgIGJvcmRlcjogMDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIHBhZGRpbmc6IDEuNWVtIDAgMC41ZW0gMDtcbiAgfVxuXG4gIHRleHRhcmVhIHtcbiAgICBtaW4taGVpZ2h0OiAxMi41ZW07XG4gICAgcmVzaXplOiBub25lO1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgICBtYXJnaW4tdG9wOiAxZW07XG4gIH1cblxuICBzZWxlY3Qge1xuICAgIG1hcmdpbi10b3A6IDFlbTtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xuICAgIGFwcGVhcmFuY2U6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZWRlZGU7XG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDAgIWltcG9ydGFudDtcblxuICAgICY6Oi1tcy1leHBhbmQge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cblxuICBhYmJyW3RpdGxlXSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG5cbiAgc3Bhbi5yZXF1aXJlZCB7XG4gICAgY29sb3I6IHJlZDtcbiAgfVxuXG4gIGlucHV0W3R5cGU9J2NoZWNrYm94J10sXG4gIGlucHV0W3R5cGU9J3JhZGlvJ10ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBvcGFjaXR5OiAwO1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBjdXJzb3I6IHBvaW50ZXIgIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAmOmNoZWNrZWQge1xuICAgICAgJiArIGxhYmVsOmJlZm9yZSB7XG4gICAgICAgIGJhY2tncm91bmQ6ICRwcmltYXJ5O1xuICAgICAgfVxuICAgIH1cblxuICAgICYgKyBsYWJlbCB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtaW4td2lkdGg6IGF1dG87XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgbWFyZ2luLWxlZnQ6IDJlbTtcblxuICAgICAgJjpiZWZvcmUge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiA0OSU7IC8vIHNvbWUgd2VpcmRuZXNzXG4gICAgICAgIGxlZnQ6IC0yZW07XG4gICAgICAgIHdpZHRoOiAxZW07XG4gICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xuICAgICAgICBiYWNrZ3JvdW5kOiAkdHJ1ZS13aGl0ZTtcbiAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjRzICRlYXNlLW91dC1jaXJjO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgICB9XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi5rLWZvcm1fX3JhZGlvYnV0dG9uIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uay1mb3JtX19ncm91cCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstZm9ybV9fZmlsZXVwbG9hZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmstaW5wdXQge1xuICAmICsgbGFiZWwge1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzICRlYXNlLW91dC1jaXJjO1xuICB9XG5cbiAgJi5oYXMtdmFsdWUsXG4gICY6Zm9jdXMge1xuICAgICYgKyBsYWJlbCB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xuICAgIH1cbiAgfVxufVxuIiwiLmstaGVhZGVyIHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAtMi43NWVtOyAvLyBhY3R1YWwgdmFsdWUgZ2V0cyBzZXQgYnkgSlMgYmFzZWQgb24gdGhlIGhlaWdodCBvZiB0aGUgcHJvbW8gYmFyIGFib3ZlXG4gIHdpZHRoOiAxMDAlO1xuICB6LWluZGV4OiAxMDE7XG4gIGJhY2tncm91bmQ6ICR0cnVlLXdoaXRlO1xuXG4gICZfX3NraXAtdG8tbWFpbiB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTEwNSUpO1xuICAgIHotaW5kZXg6IDk5O1xuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAxcyAkZWFzZS1vdXQtY2lyYywgY29sb3IgMXMgJGVhc2Utb3V0LWNpcmMsXG4gICAgICBib3JkZXItY29sb3IgMXMgJGVhc2Utb3V0LWNpcmMsIHRyYW5zZm9ybSAwLjM1cyAkZWFzZS1vdXQtY2lyYyAhaW1wb3J0YW50O1xuXG4gICAgJi0tZm9jdXNlZCB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcbiAgICB9XG4gIH1cblxuICAuay1oYXMtZHJvcGRvd24ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICYgPiBhIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgc3BhbiB7XG4gICAgICAgIGZvbnQtc2l6ZTogNTAlO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICByaWdodDogLTJlbTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICBjb2xvcjogJGhpZ2hsaWdodDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuay1kcm9wZG93biB7XG4gICAgaGVpZ2h0OiAwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuMnMgJGVhc2Utb3V0LWNpcmM7XG4gICAgcGFkZGluZy1sZWZ0OiAxZW07XG5cbiAgICAmLS1saW5lciB7XG4gICAgICBwYWRkaW5nOiAxZW0gMDtcbiAgICB9XG5cbiAgICBsaSB7XG4gICAgICBmb250LXNpemU6IDgwJTtcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICB9XG4gIH1cblxuICAmLS10cmF2ZWxpbmcge1xuICAgIGJveC1zaGFkb3c6IDAgMCAzcHggLTJweCAkYmctZGFyaztcbiAgfVxuXG4gICYuaXMtb3BlbiB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuXG4gICAgLmstaGVhZGVyIHtcbiAgICAgICYtLW5hdiB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcblxuICAgICAgICAmX19jb250ZW50IHtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAwLjEyNWVtIHNvbGlkICRwcmltYXJ5O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICYtLW5hdnRvZ2dsZSB7XG4gICAgICAgICZfX2xpbmUge1xuICAgICAgICAgICY6Zmlyc3QtY2hpbGQsXG4gICAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgICY6bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHJvdGF0ZSgtNDVkZWcpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICYtLXRvcCB7XG4gICAgYmFja2dyb3VuZDogJGJsYWNrO1xuICAgIGNvbG9yOiAkdHJ1ZS13aGl0ZTtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcblxuICAgIC5rLWlubmVyIHtcbiAgICAgIHBhZGRpbmc6IDAuMjVlbSAwO1xuICAgIH1cblxuICAgIHNwYW4ge1xuICAgICAgZm9udC1zaXplOiA3MCU7XG4gICAgfVxuICB9XG5cbiAgJl9fbmV3c2xldHRlci1zaWdudXAge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogJGJsYWNrO1xuXG4gICAgZm9ybSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgcGFkZGluZy1ib3R0b206IDFlbTtcbiAgICB9XG5cbiAgICBmaWVsZHNldCB7XG4gICAgICBmbGV4LWJhc2lzOiAxMDAlO1xuICAgICAgcGFkZGluZzogMWVtIDA7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIH1cblxuICAgIGlucHV0IHtcbiAgICAgIGZvbnQtc3R5bGU6IDE0MCU7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgY29sb3I6ICR0cnVlLXdoaXRlO1xuICAgIH1cblxuICAgIGJ1dHRvbiB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxuICB9XG5cbiAgJl9fbmV3c2xldHRlci10cmlnZ2VyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyAkZWFzZS1vdXQtY2lyYztcblxuICAgICY6aG92ZXIge1xuICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgIH1cbiAgfVxuXG4gICZfX25ld3NsZXR0ZXItbGFiZWwge1xuICAgIGNvbG9yOiAkdHJ1ZS13aGl0ZTtcbiAgfVxuXG4gICYtLW1haW4ge1xuICAgIGJhY2tncm91bmQ6ICR0cnVlLXdoaXRlO1xuXG4gICAgLmstaW5uZXIge1xuICAgICAgcGFkZGluZzogMC41ZW0gMDtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgYmFja2dyb3VuZDogJHRydWUtd2hpdGU7XG4gICAgfVxuICB9XG5cbiAgJi0tbG9nbyB7XG4gICAgd2lkdGg6IDMuNWVtO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzICRlYXNlLW91dC1jaXJjO1xuXG4gICAgaW1nIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIH1cbiAgfVxuXG4gICYtLW5hdiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyAkZWFzZS1vdXQtY2lyYztcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTE1MCUpO1xuICAgIHotaW5kZXg6IC0xO1xuICAgIGJhY2tncm91bmQ6ICR0cnVlLXdoaXRlO1xuXG4gICAgJl9fY29udGVudCB7XG4gICAgICBwYWRkaW5nOiAyZW0gNSUgMmVtIDUlO1xuICAgIH1cblxuICAgIHVsIHtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgfVxuXG4gICAgbGkge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgfVxuXG4gICAgYSB7XG4gICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgLy8gZm9udC1zaXplOiAxMjUlO1xuICAgIH1cblxuICAgIC5rLWRyb3Bkb3duLS1saW5lciB7XG4gICAgICBhIHtcbiAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICYtLW5hdnRvZ2dsZSB7XG4gICAgd2lkdGg6IDJlbTtcbiAgICBoZWlnaHQ6IDEuNWVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICZfX2xpbmUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgaGVpZ2h0OiAycHg7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGJhY2tncm91bmQ6ICRibGFjaztcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzICRlYXNlLW91dC1jaXJjO1xuXG4gICAgICAmOm50aC1jaGlsZCgyKSB7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHMgJGVhc2Utb3V0LWNpcmM7XG4gICAgICB9XG5cbiAgICAgICY6bnRoLWNoaWxkKDMpIHtcbiAgICAgICAgdG9wOiAxMDAlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLW1kKSB7XG4gIC5rLWhlYWRlciB7XG4gICAgJi0tdHJhdmVsaW5nIHtcbiAgICAgIC5rLWhlYWRlci0tbG9nbyB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC43KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuay1oYXMtZHJvcGRvd24ge1xuICAgICAgJiA+IGEgc3BhbiB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmstZHJvcGRvd24ge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICB0b3A6IDcuNWVtO1xuICAgICAgei1pbmRleDogMTAyO1xuICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuXG4gICAgICBsaSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMS4yNWVtO1xuICAgICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgIH1cblxuICAgICAgYSB7XG4gICAgICAgIGNvbG9yOiAkdHJ1ZS13aGl0ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLS10b3Age1xuICAgICAgLmstaW5uZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIHBhZGRpbmc6IDAuNzVlbSAwO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX25ld3NsZXR0ZXItc2lnbnVwIHtcbiAgICAgIGZvcm0ge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMDtcblxuICAgICAgICBmaWVsZHNldCB7XG4gICAgICAgICAgZmxleC1iYXNpczogYXV0bztcbiAgICAgICAgICBwYWRkaW5nOiAxZW0gMC41ZW07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLS1tYWluIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG5cbiAgICAmLS1sb2dvIHtcbiAgICAgIHdpZHRoOiA2LjI1ZW07XG4gICAgfVxuXG4gICAgJi0tbmF2IHtcbiAgICAgIHotaW5kZXg6IDI7XG4gICAgICB3aWR0aDogODguODg5JTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgbGVmdDogNS41NSU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcblxuICAgICAgJl9fY29udGVudCB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgICB9XG5cbiAgICAgIHVsIHtcbiAgICAgICAgcGFkZGluZzogMDtcblxuICAgICAgICBsaTpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGkge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMC43NWVtO1xuICAgICAgICBwb2ludGVyLWV2ZW50czogYWxsO1xuICAgICAgfVxuXG4gICAgICBhIHtcbiAgICAgICAgZm9udC1zaXplOiA5MCU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi0tbmF2dG9nZ2xlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgLmstaGVhZGVyIHtcbiAgICAmLS1tYWluIHtcbiAgICAgIC5rLWlubmVyIHtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLS1sb2dvIHtcbiAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMS4xMjVlbSk7XG4gICAgfVxuXG4gICAgJi0tbmF2IHtcbiAgICAgICZfX2NvbnRlbnQge1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICB9XG5cbiAgICAgIHVsIHtcbiAgICAgICAgbGk6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcbiAgICAgIH1cblxuICAgICAgYSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTEwJTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC14bCkge1xuICAuay1oZWFkZXIge1xuICAgICYtLW5hdiB7XG4gICAgICB3aWR0aDogOTQuNDQlO1xuICAgICAgbGVmdDogMi43OCU7XG4gICAgfVxuICB9XG59XG4iLCIuay1mb290ZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJi0tdG9wIC5rLWlubmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB9XG5cbiAgJi0tYm90dG9tIC5rLWlubmVyIHtcbiAgICBwYWRkaW5nOiAyZW0gMDtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2NjY2NjYztcbiAgfVxuXG4gICYtLWJnaW1nIHtcbiAgICBAaW5jbHVkZSBmaWxsLXBhcmVudCgpO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIHotaW5kZXg6IC0xO1xuICB9XG5cbiAgJi0tbG9nbyB7XG4gICAgZmxleC1iYXNpczogNTAlO1xuXG4gICAgLmstZmlndXJlIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICAgIG1heC13aWR0aDogOC43NWVtO1xuXG4gICAgICAmLS1saW5lciB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMTAuNDIlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICYtLXNvY2lhbCB7XG4gICAgYSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcblxuICAgICAgLy8gJjpmaXJzdC1jaGlsZCB7XG4gICAgICAvLyAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIC8vICAgbWFyZ2luLXJpZ2h0OiAxZW07XG5cbiAgICAgIC8vICAgJjphZnRlciB7XG4gICAgICAvLyAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAvLyAgICAgY29udGVudDogJyc7XG4gICAgICAvLyAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgLy8gICAgIHRvcDogNTAlOyByaWdodDogLS42ZW07XG4gICAgICAvLyAgICAgaGVpZ2h0OiA1MCU7IHdpZHRoOiAxcHg7XG4gICAgICAvLyAgICAgYmFja2dyb3VuZDogJGJsYWNrO1xuICAgICAgLy8gICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgIC8vICAgfVxuICAgICAgLy8gfVxuICAgIH1cbiAgfVxuXG4gICYtLWxpbmtzIHtcbiAgICBmbGV4LWJhc2lzOiA1MCU7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG5cbiAgICAmX19pdGVtIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICB9XG5cbiAgICBoNCB7XG4gICAgICBmb250LWZhbWlseTogJGJvZHktZm9udDtcbiAgICAgIG1hcmdpbjogMCAwIDFlbSAwO1xuICAgIH1cblxuICAgIHVsIHtcbiAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICB9XG5cbiAgJi0tYmFkZ2VzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXG4gICAgaW1nIHtcbiAgICAgIGZsZXgtYmFzaXM6IDMzJTtcbiAgICAgIG1heC13aWR0aDogNi4yNWVtO1xuICAgIH1cbiAgfVxuXG4gICYtLWRpc2NsYWltZXIgcCB7XG4gICAgZm9udC1zaXplOiA2NSU7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1tZCkge1xuICAuay1mb290ZXIge1xuICAgICYtLWxpbmtzIHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgfVxuXG4gICAgJi0tYmFkZ2VzIHtcbiAgICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgICAgIG1hcmdpbi10b3A6IC0xMGVtO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLWxnKSB7XG4gIC5rLWZvb3RlciB7XG4gICAgJi0tdG9wIC5rLWlubmVyIHtcbiAgICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICB9XG5cbiAgICAmLS1ib3R0b20ge1xuICAgICAgLmstaW5uZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIH1cblxuICAgICAgLmstZm9vdGVyLS1jb3B5IHtcbiAgICAgICAgZmxleC1iYXNpczogMjUlO1xuICAgICAgfVxuXG4gICAgICAuay1mb290ZXItLWRpc2NsYWltZXIge1xuICAgICAgICBmbGV4LWJhc2lzOiA3NSU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi0tbG9nbyB7XG4gICAgICBmbGV4LWJhc2lzOiAyNSU7XG4gICAgfVxuXG4gICAgJi0tbGlua3Mge1xuICAgICAgZmxleC1iYXNpczogNTAlO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuICAgICAgJl9faXRlbSB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDMxJTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLS1iYWRnZXMge1xuICAgICAgZmxleC1iYXNpczogMjAlO1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG5cbiAgICAmLS1jb3B5LFxuICAgICYtLWRpc2NsYWltZXIgcCB7XG4gICAgICBmb250LXNpemU6IDgwJTtcbiAgICB9XG4gIH1cbn1cbiIsIi5rLWhlcm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgI3toZWFkaW5ncygpfSxcbiAgcCB7XG4gICAgY29sb3I6ICRibGFjaztcbiAgfVxuXG4gICYtLWxvYWRlZCB7XG4gICAgI3toZWFkaW5ncygpfSxcbiAgICBwIHtcbiAgICAgIGNvbG9yOiAkdHJ1ZS13aGl0ZTtcbiAgICB9XG4gIH1cblxuICAmLS1iZ2ltZyB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDFzICRlYXNlLW91dC1jaXJjO1xuXG4gICAgJi5sYXp5bG9hZC0tY29tcGxldGUge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG4gIH1cblxuICAmLS1kZWZhdWx0IHtcbiAgICAuay1pbm5lciB7XG4gICAgICBwYWRkaW5nOiAkcGFkZGluZy14cyAwO1xuICAgIH1cblxuICAgIC5rLWhlcm8tLXRleHQge1xuICAgICAgcGFkZGluZy1ib3R0b206IDRlbTtcblxuICAgICAgaDEsXG4gICAgICBoMiB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmLS1vbi1kYXJrIHtcbiAgICBjb2xvcjogJHRydWUtd2hpdGU7XG4gIH1cblxuICAmLS1iZ2ltZyB7XG4gICAgQGluY2x1ZGUgZmlsbC1wYXJlbnQoKTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICB6LWluZGV4OiAtMTtcbiAgfVxuXG4gICYtLWJpZ3RleHQge1xuICAgIG1hcmdpbi10b3A6IDFlbTtcblxuICAgIGgxLFxuICAgIC5rLWhlYWRsaW5lLS1mYWtlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTIwJTtcbiAgICB9XG4gIH1cblxuICAmLS1hY3Rpb24ge1xuICAgIC5rLWJ1dHRvbiB7XG4gICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tdG9wOiAxZW07XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgLmstaGVybyB7XG4gICAgJi0tYWN0aW9uIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICAgIC5rLWJ1dHRvbiB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwLjVlbTtcblxuICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogMC41ZW07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1sZykge1xuICAuay1oZXJvIHtcbiAgICAmLS1jZW50ZXIge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cblxuICAgICYtLWRlZmF1bHQge1xuICAgICAgLmstaGVyby0tdGV4dCBoMSB7XG4gICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgIG1heC13aWR0aDogMzQuMzc1ZW07XG4gICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLS1hY3Rpb24ge1xuICAgICAgLmstYnV0dG9uIHtcbiAgICAgICAgZmxleC1iYXNpczogYXV0bztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLS1iaWd0ZXh0IHtcbiAgICAgIG1hcmdpbi10b3A6IDJlbTtcblxuICAgICAgaDEsXG4gICAgICAuay1oZWFkbGluZS0tZmFrZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTU1JTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC14bCkge1xuICAuay1oZXJvIHtcbiAgICAmLS1kZWZhdWx0IHtcbiAgICAgIC5rLWlubmVyIHtcbiAgICAgICAgcGFkZGluZzogJHBhZGRpbmctc20gMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC14eGwpIHtcbiAgLmstaGVybyB7XG4gICAgJi0tZGVmYXVsdCB7XG4gICAgICAuay1pbm5lciB7XG4gICAgICAgIHBhZGRpbmc6IDE1ZW0gMCAxM2VtIDA7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuay1oZXJvLS1wcm9kdWN0bGlzdGluZyB7XG4gIC5rLWhlcm8ge1xuICAgICYtLWNvbnRlbnQge1xuICAgICAgcGFkZGluZzogJHBhZGRpbmctc20gMDtcblxuICAgICAgKiB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgIH1cblxuICAgICAgLmstaGVhZGxpbmUge1xuICAgICAgICBtYXJnaW46IDAuMjVlbSAwIDFlbSAwO1xuICAgICAgfVxuXG4gICAgICAuay1ydGUtY29udGVudCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTI1JTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLS1wcmVoZWFkaW5nIHtcbiAgICAgIGNvbG9yOiAkaGlnaGxpZ2h0O1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLW1kKSB7XG4gIC5rLWhlcm8tLXByb2R1Y3RsaXN0aW5nIHtcbiAgICAuay1oZXJvIHtcbiAgICAgICYtLWNvbnRlbnQge1xuICAgICAgICBtYXgtd2lkdGg6IDUwJTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC14bCkge1xuICAuay1oZXJvLS1wcm9kdWN0bGlzdGluZyB7XG4gICAgLmstaGVybyB7XG4gICAgICAmLS1jb250ZW50IHtcbiAgICAgICAgcGFkZGluZzogJHBhZGRpbmctbGcgMCAkcGFkZGluZy1zbSAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmstaGVyby0tYmxvZ3NpbmdsZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOmJlZm9yZSB7XG4gICAgQGluY2x1ZGUgZmlsbC1wYXJlbnQoKTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb250ZW50OiAnJztcbiAgICBiYWNrZ3JvdW5kOiAkYmxhY2s7XG4gICAgb3BhY2l0eTogMC4yNTtcbiAgfVxuXG4gICYgPiAuay1pbm5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDI7XG4gIH1cblxuICAuay1oZXJvIHtcbiAgICAmLS1tYWluIHtcbiAgICAgIHBhZGRpbmc6ICRwYWRkaW5nLXNtIDA7XG5cbiAgICAgICoge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi0tdGl0bGUge1xuICAgICAgLmstaGVhZGxpbmUge1xuICAgICAgICBtYXJnaW46IDFlbSAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLWxnKSB7XG4gIC5rLWhlcm8tLWJsb2dzaW5nbGUge1xuICAgIC5rLWhlcm8ge1xuICAgICAgJi0tbWFpbiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICAgIHBhZGRpbmc6ICRwYWRkaW5nLW1kIDAgJHBhZGRpbmcteHM7XG4gICAgICB9XG5cbiAgICAgICYtLW1ldGEsXG4gICAgICAmLS10aXRsZSB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDUwJTtcblxuICAgICAgICBzcGFuLFxuICAgICAgICBwIHtcbiAgICAgICAgICBmb250LXNpemU6IDEyNSU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJi0tdGl0bGUge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxNSU7XG5cbiAgICAgICAgLmstaGVhZGxpbmUge1xuICAgICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC14bCkge1xuICAuay1oZXJvLS1ibG9nc2luZ2xlIHtcbiAgICAuay1oZXJvIHtcbiAgICAgICYtLW1haW4ge1xuICAgICAgICBwYWRkaW5nOiAkcGFkZGluZy1sZyAwICRwYWRkaW5nLXhzO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmstaGVyby0tY29udGFjdCB7XG4gIC5rLWhlcm8ge1xuICAgICYtLW1haW4ge1xuICAgICAgcGFkZGluZzogJHBhZGRpbmctc20gMDtcblxuICAgICAgKiB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLS10aXRsZSB7XG4gICAgICAuay1oZWFkbGluZSB7XG4gICAgICAgIG1hcmdpbjogMWVtIDA7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmstcHJlaGVhZGluZyB7XG4gICAgY29sb3I6ICRoaWdobGlnaHQ7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1sZykge1xuICAuay1oZXJvLS1jb250YWN0IHtcbiAgICAuay1oZXJvIHtcbiAgICAgICYtLW1haW4ge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgICAgICBwYWRkaW5nOiAkcGFkZGluZy1tZCAwICRwYWRkaW5nLXhzO1xuICAgICAgfVxuXG4gICAgICAmLS10aXRsZSB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAzJTtcbiAgICAgIH1cblxuICAgICAgJi0tdGl0bGUge1xuICAgICAgICAuay1oZWFkbGluZSB7XG4gICAgICAgICAgbWFyZ2luOiAwLjVlbSAwIDAgMDtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMC45O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICYtLWJvZHkge1xuICAgICAgICBmb250LXNpemU6IDExNSU7XG4gICAgICAgIGZsZXgtYmFzaXM6IDM1JTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC14bCkge1xuICAuay1oZXJvLS1jb250YWN0IHtcbiAgICAuay1oZXJvIHtcbiAgICAgICYtLW1haW4ge1xuICAgICAgICBwYWRkaW5nOiAkcGFkZGluZy1sZyAwICRwYWRkaW5nLXhzO1xuICAgICAgfVxuXG4gICAgICAmLS1ib2R5IHtcbiAgICAgICAgbWF4LXdpZHRoOiAyMmVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmstYnV0dG9uIHtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbG9yOiAkdHJ1ZS13aGl0ZTtcbiAgcGFkZGluZzogMS4yNWVtIDEuMTVlbTtcbiAgYm9yZGVyLXJhZGl1czogMC40ZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyOiAxcHggc29saWQ7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMXMgJGVhc2Utb3V0LWNpcmMsIGNvbG9yIDFzICRlYXNlLW91dC1jaXJjLFxuICAgIGJvcmRlci1jb2xvciAxcyAkZWFzZS1vdXQtY2lyYztcblxuICAmOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYmFja2dyb3VuZDogJHRydWUtd2hpdGU7XG4gICAgY29sb3I6ICRwcmltYXJ5O1xuICB9XG5cbiAgJi0tcHJpbWFyeSB7XG4gICAgYmFja2dyb3VuZDogJHByaW1hcnk7XG4gICAgYm9yZGVyLWNvbG9yOiAkcHJpbWFyeTtcbiAgfVxuXG4gICYtLXNlY29uZGFyeSB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG5cbiAgICAmLm9uLWxpZ2h0IHtcbiAgICAgIGJvcmRlci1jb2xvcjogI2NjYztcbiAgICAgIGNvbG9yOiAjY2NjO1xuICAgIH1cbiAgfVxuXG4gICYtLWRlZmF1bHQge1xuICAgIGJhY2tncm91bmQ6ICR0cnVlLXdoaXRlO1xuICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgICBib3JkZXItY29sb3I6ICRhY2NlbnQtdGV4dDtcblxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogJHByaW1hcnk7XG4gICAgICBjb2xvcjogJHRydWUtd2hpdGU7XG4gICAgfVxuICB9XG5cbiAgJi0tZGFyayB7XG4gICAgYmFja2dyb3VuZDogJGJnLWRhcms7XG4gICAgYm9yZGVyLWNvbG9yOiAkYmctZGFyaztcblxuICAgICY6aG92ZXIge1xuICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgYm9yZGVyLWNvbG9yOiAkcHJpbWFyeTtcbiAgICAgIGJhY2tncm91bmQ6ICRiZy1kYXJrO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXNtKSB7XG4gIC5rLWJ1dHRvbiB7XG4gICAgcGFkZGluZzogMS4yNWVtIDJlbTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cbn1cbiIsIi5rLXByb2R1Y3RjYXJkIHtcbiAgLmstZmlndXJlIHtcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogYXV0bztcblxuICAgICYtLWxpbmVyIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgIH1cbiAgfVxuXG4gICYtLWxpbmVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cblxuICAmLS13aWRlaW1nIHtcbiAgICAuay1maWd1cmUge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBib3JkZXItcmFkaXVzOiAwLjMzZW07XG5cbiAgICAgICYtLWxpbmVyIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDY1LjIlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICYtLXRpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMWVtO1xuXG4gICAgaDMge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgZm9udC1zaXplOiAxMjAlO1xuICAgICAgLy8gd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgIC8vIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAvLyB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcblxuICAgICAgYSB7XG4gICAgICAgIGNvbG9yOiAkYmxhY2s7XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICRwcmltYXJ5ICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBwIHtcbiAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgfVxuICB9XG5cbiAgJi0tYWN0aW9uIHtcbiAgICBtYXJnaW4tdG9wOiAyZW07XG5cbiAgICAuay1idXR0b24ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjb2xvcjogJHRydWUtd2hpdGUgIWltcG9ydGFudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmLS1yZXZpZXdzIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICAuay1hY2NlbnQtdGV4dCB7XG4gICAgICBmb250LXNpemU6IDgwJTtcbiAgICB9XG5cbiAgICB1bCB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIGxlZnQ6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICB9XG5cbiAgICBsaSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxuXG4gICAgc3ZnIHtcbiAgICAgIHdpZHRoOiAxZW07XG4gICAgfVxuICB9XG4gICY6aG92ZXIge1xuICAgIGgzID4gYSB7XG4gICAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgfVxuICAgIC5rLWJ1dHRvbiB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeTtcbiAgICB9XG4gIH1cbn1cbiIsIi5rLWFydGljbGVjYXJkIHtcbiAgKiB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG5cbiAgLmstZmlndXJlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgYm9yZGVyLXJhZGl1czogMC4zM2VtO1xuICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMXMgJGVhc2Utb3V0LXF1YXJ0O1xuXG4gICAgJi0tbGluZXIge1xuICAgICAgcGFkZGluZy1ib3R0b206IDY1LjIlO1xuICAgIH1cblxuICAgIGltZyB7XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMnMgJGVhc2Utb3V0LWNpcmM7XG4gICAgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICBib3gtc2hhZG93OiAwIDAgMTVweCAycHggI2RkZDtcblxuICAgICAgaW1nIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICYtLW1ldGEge1xuICAgIG1hcmdpbi1ib3R0b206IDEuNWVtO1xuXG4gICAgc3BhbiB7XG4gICAgICBmb250LXNpemU6IDgwJTtcbiAgICB9XG4gIH1cblxuICAmLS10aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMS41ZW07XG5cbiAgICBhIHtcbiAgICAgIGNvbG9yOiAkYmxhY2s7XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjb2xvcjogJHByaW1hcnkgIWltcG9ydGFudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmLS1leGNlcnB0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjVlbTtcbiAgfVxufVxuIiwiLmstcHJvbW9zbGlkZXIge1xuICAmID4gLmstaW5uZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuXG4gICYtLXRpdGxlcm93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIG1hcmdpbi1ib3R0b206IDJlbTtcblxuICAgICoge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cblxuICAgIGEge1xuICAgICAgY29sb3I6ICRibGFjaztcbiAgICB9XG5cbiAgICAmX19pdGVtIHtcbiAgICAgICY6bnRoLWNoaWxkKDEpLFxuICAgICAgJjpudGgtY2hpbGQoMykge1xuICAgICAgICBvcmRlcjogMTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgICAgfVxuXG4gICAgICAmOm50aC1jaGlsZCgyKSB7XG4gICAgICAgIG9yZGVyOiAyO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICZfX2NvbnRyb2xzIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB6LWluZGV4OiA1O1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuXG4gICAgc3ZnIHtcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBhbGw7XG4gICAgICBmaWxsOiB0cmFuc3BhcmVudDtcbiAgICAgIHN0cm9rZTogJHByaW1hcnk7XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIH1cblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuay1wcm9kdWN0Y2FyZCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZy1ib3R0b206IDJlbTtcbiAgICBib3R0b206IDAgIWltcG9ydGFudDtcblxuICAgICYtLWxpbmVyIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDEuNWVtO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXNtKSB7XG4gIC5rLXByb21vc2xpZGVyIHtcbiAgICAmLS10aXRsZXJvdyB7XG4gICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgIHNwYW4sXG4gICAgICBhIHtcbiAgICAgICAgZm9udC1zaXplOiA4MCU7XG4gICAgICB9XG5cbiAgICAgICZfX2l0ZW0ge1xuICAgICAgICAmOm50aC1jaGlsZCgxKSxcbiAgICAgICAgJjpudGgtY2hpbGQoMiksXG4gICAgICAgICY6bnRoLWNoaWxkKDMpIHtcbiAgICAgICAgICBvcmRlcjogMTtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgJjpudGgtY2hpbGQoMSksXG4gICAgICAgICY6bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgICBmbGV4LWJhc2lzOiAxNSU7XG4gICAgICAgIH1cblxuICAgICAgICAmOm50aC1jaGlsZCgyKSB7XG4gICAgICAgICAgZmxleC1iYXNpczogNjAlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgLmstcHJvbW9zbGlkZXIge1xuICAgIC5rLXByb2R1Y3RjYXJkIHtcbiAgICAgIHdpZHRoOiA1MCU7XG4gICAgfVxuXG4gICAgJl9fY29udHJvbHMge1xuICAgICAgbGVmdDogLTUlO1xuICAgICAgd2lkdGg6IDExMCU7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgLmstcHJvbW9zbGlkZXIge1xuICAgICYtLXRpdGxlcm93IHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDRlbTtcbiAgICB9XG5cbiAgICAuay1wcm9kdWN0Y2FyZCB7XG4gICAgICB3aWR0aDogMzMuMzMzMyU7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAteGwpIHtcbiAgLmstcHJvbW9zbGlkZXIge1xuICAgICYtLXRpdGxlcm93IHtcbiAgICAgIG1hcmdpbi1ib3R0b206ICRwYWRkaW5nLXNtO1xuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuXG4gICAgICBzcGFuLFxuICAgICAgYSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICAgIH1cblxuICAgICAgJl9faXRlbSB7XG4gICAgICAgICY6bnRoLWNoaWxkKDEpLFxuICAgICAgICAmOm50aC1jaGlsZCgyKSB7XG4gICAgICAgICAgZmxleC1iYXNpczogMTAlO1xuICAgICAgICB9XG5cbiAgICAgICAgJjpudGgtY2hpbGQoMikge1xuICAgICAgICAgIGZsZXgtYmFzaXM6IDcwJTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC5rLXByb2R1Y3RjYXJkIHtcbiAgICAgIHdpZHRoOiAyNSU7XG4gICAgfVxuXG4gICAgJl9fY29udHJvbHMge1xuICAgICAgd2lkdGg6IDExNSU7XG4gICAgICBsZWZ0OiAtNy41JTtcbiAgICB9XG4gIH1cbn1cbiIsIi5rLXRlc3RpbW9uaWFsc2xpZGVyIHtcbiAgJi0tc2xpZGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tcmlnaHQ6IDJlbTtcblxuICAgIC5rLWZpZ3VyZSB7XG4gICAgICBtYXgtd2lkdGg6IDguMDVlbTtcbiAgICAgIG1hcmdpbjogYXV0bztcblxuICAgICAgJi0tbGluZXIge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmLS1jaXRlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG5cbiAgLmZsaWNraXR5LXBhZ2UtZG90cyB7XG4gICAgYm90dG9tOiAtNGVtO1xuICB9XG59IiwiLmstY3RhYmFubmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gIC5rLWlubmVyLS14bCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuNzVlbTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIGJhY2tncm91bmQ6ICRibGFjaztcbiAgICAgIG9wYWNpdHk6IDAuMzM7XG4gICAgICB6LWluZGV4OiAtMTtcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgfVxuICB9XG5cbiAgJi0tYmdpbWcge1xuICAgIEBpbmNsdWRlIGZpbGwtcGFyZW50KCk7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgei1pbmRleDogLTI7XG4gIH1cblxuICAmLS1jb250ZW50IHtcbiAgICBjb2xvcjogJHRydWUtd2hpdGU7XG4gICAgbWF4LXdpZHRoOiA0MGVtO1xuXG4gICAgLmstaW5uZXIge1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgfVxuXG4gICAgLmstcHJlaGVhZGluZyB7XG4gICAgICBjb2xvcjogJGhpZ2hsaWdodDtcbiAgICB9XG4gIH1cblxuICAmLS10YWtlb3ZlciB7XG4gICAgLmstYnV0dG9uIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcblxuICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLmstY3RhLS1zdWJzY3JpYmUge1xuICBtYXJnaW46IDVlbSAwIDhlbSAwO1xuXG4gIC5rLWlubmVyIHtcbiAgICBiYWNrZ3JvdW5kOiAkYmxhY2s7XG4gICAgYm9yZGVyLXJhZGl1czogMC43NWVtO1xuICB9XG5cbiAgLmstY3RhLS1wcmVoZWFkaW5nIHtcbiAgICBjb2xvcjogJGhpZ2hsaWdodDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXNtKSB7XG4gIC5rLWN0YWJhbm5lci0tdGFrZW92ZXIge1xuICAgIC5rLWJ1dHRvbiB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1tZCkge1xuICAuay1jdGFiYW5uZXIge1xuICAgIC5rLWlubmVyLS14bCB7XG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi0tdGFrZW92ZXIge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgICAuay1jdGFiYW5uZXItLWJnaW1nIHtcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogYm90dG9tIGNlbnRlcjtcbiAgICAgIH1cblxuICAgICAgLmstY3RhYmFubmVyLS1jb250ZW50IHtcbiAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgbWF4LXdpZHRoOiA1NGVtO1xuICAgICAgICBtYXJnaW46IGF1dG87XG4gICAgICAgIHBhZGRpbmc6ICRwYWRkaW5nLWxnIDAgJHBhZGRpbmctc20gMDtcbiAgICAgIH1cblxuICAgICAgLmstYnV0dG9uIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDAuNWVtO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmstY3RhLS1zdWJzY3JpYmUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgICYtLWhlYWRsaW5lIHtcbiAgICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgfVxuXG4gICAgLmstY3RhLS1jb250ZW50IHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIC5rLWN0YS0tcHJlaGVhZGluZyxcbiAgICAuay1oZWFkbGluZSxcbiAgICAuay1idXR0b24ge1xuICAgICAgbWFyZ2luOiBhdXRvO1xuICAgIH1cblxuICAgIC5rLWN0YS0tcHJlaGVhZGluZyB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICB9XG5cbiAgICAuay1oZWFkbGluZSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgICBtYXgtd2lkdGg6IDc1JTtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1sZykge1xuICAuay1jdGEtLXN1YnNjcmliZSB7XG4gICAgLmstaGVhZGxpbmUge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgICAgbWF4LXdpZHRoOiA1MCU7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAteGwpIHtcbiAgLmstY3RhYmFubmVyIHtcbiAgICAmLS10YWtlb3ZlciB7XG4gICAgICAuay1jdGFiYW5uZXItLWNvbnRlbnQge1xuICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXh4bCkge1xuICAuay1jdGFiYW5uZXIge1xuICAgICYtLXRha2VvdmVyIHtcbiAgICAgIC5rLWN0YWJhbm5lci0tY29udGVudCB7XG4gICAgICAgIHBhZGRpbmc6IDI1ZW0gMCAxMmVtIDA7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIvKlxuKiBOb3RlOiB0aGlzIG1vZHVsZSB3YXMgb3JpZ2luYWxseSBmb3IgZGlzcGxheWluZyB2aWRlb3MsIGJ1dCBpcyBubyBsb25nZXIgdGhlIGNhc2UuXG4qIEl0J3MgYSBsaXR0bGUgdHJpY2t5IHRvIHJlbmFtZSB0aGUgY2xhc3NlcyBhdCB0aGlzIHBvaW50LCBzbyB0aGUgZmlsZW5hbWUgaGFzIHVwZGF0ZWQsXG4qIGJ1dCBub3QgYW55IG9mIHRoZSBDU1MgY2xhc3Nlcy5cbiovXG4uay12aWRlb2dhbGxlcnkge1xuICAucGx5ciB7XG4gICAgQGluY2x1ZGUgZmlsbC1wYXJlbnQoKTtcbiAgICB6LWluZGV4OiAxO1xuICB9XG5cbiAgLmstcGxheS1idXR0b24ge1xuICAgIHotaW5kZXg6IDM7XG4gIH1cblxuICAmLnZpZGVvLXBsYXlpbmcge1xuICAgIC5rLXZpZGVvZ2FsbGVyeS0tdmlkZW8ge1xuICAgICAgLmstZmlndXJlIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgIH1cblxuICAgICAgJjphZnRlciB7XG4gICAgICAgIG9wYWNpdHk6IDAgIWltcG9ydGFudDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuay1wbGF5LWJ1dHRvbiB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cblxuICAmID4gLmstaW5uZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgfVxuXG4gICYtLWl0ZW0ge1xuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICB9XG5cbiAgJi0tdGl0bGUge1xuICAgIG9yZGVyOiAxO1xuXG4gICAgLmstaGVhZGxpbmUge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG4gIH1cblxuICAmLS12aWRlbyB7XG4gICAgb3JkZXI6IDI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuNjY3ZW07XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgIC5rLWZpZ3VyZSB7XG4gICAgICB6LWluZGV4OiAyO1xuXG4gICAgICAmLS1saW5lciB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA2Mi41JTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmLS1hY3Rpb25zIHtcbiAgICBvcmRlcjogMTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcblxuICAgICZfX2l0ZW0ge1xuICAgICAgZmxleC1iYXNpczogMTYuNjclO1xuICAgICAgaGVpZ2h0OiA0ZW07XG4gICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRiZy1ncmF5O1xuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRiZy1ncmF5O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcblxuICAgICAgKiB7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgfVxuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5O1xuXG4gICAgICAgIC5rLXZpZGVvZ2FsbGVyeS0tYWN0aW9uc19faWNvbiB7XG4gICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJGhpZ2hsaWdodDtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHNjYWxlKDEuMjUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkYmctZ3JheTtcbiAgICAgIH1cblxuICAgICAgJi5hY3RpdmUge1xuICAgICAgICAuay12aWRlb2dhbGxlcnktLWFjdGlvbnNfX2ljb24ge1xuICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRoaWdobGlnaHQ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgxLjI1KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19pY29uIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgIG1heC13aWR0aDogMWVtO1xuXG4gICAgICAua29pLXN2ZyB7XG4gICAgICAgIHdpZHRoOiAxZW07XG4gICAgICB9XG5cbiAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHdpZHRoOiAyLjVlbTtcbiAgICAgICAgaGVpZ2h0OiAyLjVlbTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgYmFja2dyb3VuZDogJGJnLWdyYXk7XG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyAkZWFzZS1vdXQtY2lyYywgYmFja2dyb3VuZCAxcyAkZWFzZS1vdXQtY2lyYztcbiAgICAgIH1cblxuICAgICAgcGF0aCB7XG4gICAgICAgIGZpbGw6ICRibGFjaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX190aXRsZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuXG4gICYtLWRlc2NyaXB0aW9uIHtcbiAgICBvcmRlcjogMjtcblxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwIDAgMmVtIDA7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAteGwpIHtcbiAgLmstdmlkZW9nYWxsZXJ5IHtcbiAgICAmID4gLmstaW5uZXIge1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgfVxuXG4gICAgJi0taXRlbSB7XG4gICAgICBmbGV4LWJhc2lzOiA0OC41JTtcbiAgICAgIG9yZGVyOiAxO1xuICAgIH1cblxuICAgICYtLXRpdGxlLFxuICAgICYtLXZpZGVvIHtcbiAgICAgIG1hcmdpbi1ib3R0b206ICRwYWRkaW5nLXhzO1xuICAgIH1cblxuICAgICYtLWFjdGlvbnMge1xuICAgICAgZmxleC1mbG93OiByb3cgd3JhcDtcblxuICAgICAgJl9faXRlbSB7XG4gICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICBmbGV4LWJhc2lzOiA0OC41JTtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG5cbiAgICAgICAgJi5hY3RpdmUge1xuICAgICAgICAgIC5rLXZpZGVvZ2FsbGVyeS0tYWN0aW9uc19faWNvbiB7XG4gICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6ICRoaWdobGlnaHQ7XG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSBzY2FsZSgxLjUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIC5rLXZpZGVvZ2FsbGVyeS0tYWN0aW9uc19faWNvbiB7XG4gICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSBzY2FsZSgxLjUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmX19pY29uIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuXG4gICAgICAgIC5rb2ktc3ZnIHtcbiAgICAgICAgICB3aWR0aDogMi41ZW07XG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICZfX3RpdGxlIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiA0ZW07XG5cbiAgICAgICAgcCB7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi0tZGVzY3JpcHRpb24ge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IC0zZW07XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICBiYWNrZ3JvdW5kOiAkaGlnaGxpZ2h0O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXh4bCkge1xuICAuay12aWRlb2dhbGxlcnkge1xuICAgICYtLXRpdGxlLFxuICAgICYtLXZpZGVvIHtcbiAgICAgIG1hcmdpbi1ib3R0b206ICRwYWRkaW5nLXNtO1xuICAgIH1cblxuICAgICYtLXRpdGxlIHtcbiAgICAgIGZsZXgtYmFzaXM6IDM1JTtcbiAgICB9XG5cbiAgICAmLS12aWRlbyxcbiAgICAmLS1kZXNjcmlwdGlvbiB7XG4gICAgICBmbGV4LWJhc2lzOiA0NSU7XG4gICAgfVxuXG4gICAgJi0tZGVzY3JpcHRpb24ge1xuICAgICAgJjpiZWZvcmUge1xuICAgICAgICB0b3A6IC0zZW07XG4gICAgICAgIHdpZHRoOiA0Mi41JTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbi5rLXZpZGVvZ2FsbGVyeS52aWRlby1wbGF5aW5nIC5rLXZpZGVvZ2FsbGVyeS0tdmlkZW8gLmstZmlndXJlIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG4iLCIuay1wcm9kdWN0aGVybyB7XG4gIC5rLWlubmVyLS14bCB7XG4gICAgYmFja2dyb3VuZDogJGJnLWdyYXk7XG4gICAgYm9yZGVyLXJhZGl1czogMC41ZW07XG4gIH1cblxuICAmLS1idW5kbGUge1xuICAgIC5rLXByb2R1Y3Rmb3JtLS1wcmljZSB7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgcGFkZGluZy1sZWZ0OiAyZW07XG4gICAgfVxuICB9XG5cbiAgJi0tZ2FsbGVyeSB7XG4gICAgcGFkZGluZy10b3A6IDJlbTtcbiAgfVxuXG4gICYtLXNsaWRlIHtcbiAgICB3aWR0aDogMTAwJTtcblxuICAgIC5rLWZpZ3VyZSB7XG4gICAgICB3aWR0aDogODAlO1xuICAgICAgbWFyZ2luOiBhdXRvO1xuXG4gICAgICAmLS1saW5lciB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICYtLXJldmlld3Mge1xuICAgIHAsXG4gICAgZGl2IHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG5cbiAgICBhIHtcbiAgICAgIGNvbG9yOiAkcHJpbWFyeTtcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAkcHJpbWFyeS1kYXJrICFpbXBvcnRhbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJi0tZGV0YWlscyB7XG4gICAgJl9fY29udGVudCB7XG4gICAgICBwYWRkaW5nOiAyZW0gMWVtO1xuICAgIH1cbiAgfVxuXG4gICZfX2NvbnRyb2xzIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgd2lkdGg6IDk1JTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiAyLjUlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICB6LWluZGV4OiA5O1xuXG4gICAgc3ZnIHtcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBhbGw7XG4gICAgICBzdHJva2U6ICRhY2NlbnQtdGV4dDtcbiAgICAgIGZpbGw6IHRyYW5zcGFyZW50O1xuXG4gICAgICAmOm50aC1jaGlsZCgyKSB7XG4gICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIH1cblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIHN0cm9rZTogJHByaW1hcnk7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLmstcHJvZHVjdGZvcm0ge1xuICBidXR0b25bZGlzYWJsZWRdIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogJGJsYWNrO1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgfVxuICB9XG5cbiAgJi0tbGluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuXG4gICYtLWJ1bmRsZSB7XG4gICAgLmstcHJvZHVjdGZvcm0ge1xuICAgICAgJi0tYnVuZGxlc2VsZWN0IHtcbiAgICAgICAgZmxleC1iYXNpczogMTAwJTtcbiAgICAgIH1cblxuICAgICAgJi0tc3VibWl0LFxuICAgICAgJi0tcHJpY2Uge1xuICAgICAgICBmbGV4LWJhc2lzOiA1MCU7XG4gICAgICB9XG5cbiAgICAgICYtLXByaWNlIHtcbiAgICAgICAgb3JkZXI6IDI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJi0taGVhZGluZyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gIH1cblxuICAmLS12YXJpYW50cyB7XG4gICAgZmxleC1iYXNpczogMTAwJTtcblxuICAgIGlucHV0W3R5cGU9J3JhZGlvJ10ge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuXG4gICAgICAmICsgbGFiZWwge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwLjI1ZW07XG4gICAgICAgIGNvbG9yOiAjY2NjO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIHBhZGRpbmc6IDAuNjY3ZW0gMS4xNWVtO1xuICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjRzICRlYXNlLW91dC1jaXJjO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIHNwYW4ge1xuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICB6LWluZGV4OiAyO1xuICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgICB9XG5cbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAkYmctZGFyaztcbiAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC40cyAkZWFzZS1vdXQtY2lyYztcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEsIDApO1xuICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IGJvdHRvbSBjZW50ZXI7XG4gICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJi5zZWxlY3RlZCxcbiAgICAgICY6Y2hlY2tlZCB7XG4gICAgICAgICYgKyBsYWJlbCB7XG4gICAgICAgICAgY29sb3I6ICR0cnVlLXdoaXRlO1xuXG4gICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyAkZWFzZS1vdXQtY2lyYztcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSwgMSk7XG4gICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiB0b3AgY2VudGVyO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICYtLXZhcmlhbnRzZWxlY3Qge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcblxuICAgIGxhYmVsIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgJi5rLW91dC1vZi1zdG9jayxcbiAgICAmLmhhcy1xdWFudGl0eSB7XG4gICAgICBtYXJnaW4tdG9wOiAxLjVlbTtcblxuICAgICAgLmstcHJvZHVjdGZvcm0tLXZhcmlhbnR0b2dnbGUge1xuICAgICAgICBwYWRkaW5nLXRvcDogMWVtO1xuICAgICAgfVxuICAgIH1cblxuICAgICYuay1vdXQtb2Ytc3RvY2sge1xuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuXG4gICAgLmstYmFkZ2Uge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgei1pbmRleDogMjtcbiAgICAgIGNvbG9yOiAkdHJ1ZS13aGl0ZTtcblxuICAgICAgJi0tbGluZXIge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHBhZGRpbmc6IDAuMjVlbSAxZW07XG4gICAgICB9XG5cbiAgICAgICYtLXF1YW50aXR5IHtcbiAgICAgICAgdG9wOiAtMWVtO1xuICAgICAgICByaWdodDogLTAuNWVtO1xuXG4gICAgICAgIC5rLWJhZGdlLS1saW5lciB7XG4gICAgICAgICAgd2lkdGg6IDJlbTtcbiAgICAgICAgICBoZWlnaHQ6IDJlbTtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAkcHJpbWFyeTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgIH1cblxuICAgICAgICBzcGFuIHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICYtLW91dG9mc3RvY2sge1xuICAgICAgICB0b3A6IC0wLjg1ZW07XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcblxuICAgICAgICAuay1iYWRnZS0tbGluZXIge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICRoaWdobGlnaHQ7XG4gICAgICAgICAgZm9udC1zaXplOiA3NSU7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJi0tcXVhbnRpdHksXG4gICYtLXByaWNlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDQ4LjUlO1xuICB9XG5cbiAgJi0tcXVhbnRpdHkge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW4tdG9wOiAwLjVlbTtcblxuICAgIGlucHV0W3R5cGU9J251bWJlciddIHtcbiAgICAgIGFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgcGFkZGluZzogMS4yNWVtIDNlbTtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRiZy1kYXJrO1xuICAgICAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgIGJhY2tncm91bmQ6ICR0cnVlLXdoaXRlO1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG5cbiAgICAjay1yZWR1Y2UsXG4gICAgI2staW5jcmVhc2Uge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICBsZWZ0OiAwLjVlbTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgIGFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAjay1pbmNyZWFzZSB7XG4gICAgICByaWdodDogMC41ZW07XG4gICAgICBsZWZ0OiBhdXRvO1xuICAgIH1cbiAgfVxuXG4gICYtLXByaWNlIHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICBwIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgIH1cblxuICAgICNrLWJ1bmRsZS1wcmljZS1wcmVmaXgsXG4gICAgc3VwIHtcbiAgICAgIGZvbnQtc2l6ZTogNTAlO1xuICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgIH1cblxuICAgICNrLWJ1bmRsZS1wcmljZS1wcmVmaXgge1xuICAgICAgbWFyZ2luLWJvdHRvbTogLTFlbTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIHN1cCB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDFlbTtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiB0ZXh0LXRvcDtcbiAgICAgIG1hcmdpbi10b3A6IDEuMzNlbTtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG4gIH1cblxuICAmLS1zdWJtaXQge1xuICAgIG9yZGVyOiAyO1xuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgbWFyZ2luLXRvcDogMWVtO1xuXG4gICAgLmstYnV0dG9uIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbiAgfVxufVxuXG4uay1wcm9kdWN0Zm9ybS0tYnVuZGxlc2VsZWN0IHtcbiAgJl9faXRlbSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcblxuICAgIGlucHV0LFxuICAgIGxhYmVsIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1pbi13aWR0aDogYXV0bztcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpbnB1dCB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcbiAgICB9XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG5cbiAgICAmLS1kcmF3ZXIge1xuICAgICAgaGVpZ2h0OiAwO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIHRyYW5zaXRpb246IGhlaWdodCAwLjJzICRlYXNlLW91dC1jaXJjO1xuXG4gICAgICAuay1wcm9kdWN0Zm9ybS0tYnVuZGxlc2VsZWN0X192YXJpYW50IHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG5cbiAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaW5wdXRbdHlwZT0ncmFkaW8nXSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcblxuICAgICYgKyBsYWJlbCB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgICBib3JkZXItcmFkaXVzOiAwLjI1ZW07XG4gICAgICBjb2xvcjogI2NjYztcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6IDAuNjY3ZW0gMS4xNWVtO1xuICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC40cyAkZWFzZS1vdXQtY2lyYztcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICB9XG5cbiAgICAgIHNwYW4ge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHotaW5kZXg6IDI7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgfVxuXG4gICAgICAmOmFmdGVyIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgYmFja2dyb3VuZDogJGJnLWRhcms7XG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzICRlYXNlLW91dC1jaXJjO1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEsIDApO1xuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b20gY2VudGVyO1xuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5zZWxlY3RlZCxcbiAgICAmOmNoZWNrZWQge1xuICAgICAgJiArIGxhYmVsIHtcbiAgICAgICAgY29sb3I6ICR0cnVlLXdoaXRlO1xuXG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzICRlYXNlLW91dC1jaXJjO1xuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSwgMSk7XG4gICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogdG9wIGNlbnRlcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXNtKSB7XG4gIC5rLXByb2R1Y3RoZXJvIHtcbiAgICAmLS1kZXRhaWxzIHtcbiAgICAgICZfX2NvbnRlbnQge1xuICAgICAgICBwYWRkaW5nOiAyZW07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmstcHJvZHVjdGZvcm0ge1xuICAgICYtLWl0ZW0ge1xuICAgICAgb3JkZXI6IDEgIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAmLS1xdWFudGl0eSxcbiAgICAmLS1wcmljZSxcbiAgICAmLS1zdWJtaXQge1xuICAgICAgbWFyZ2luLXRvcDogMC41ZW07XG4gICAgfVxuXG4gICAgJi0tcXVhbnRpdHksXG4gICAgJi0tcHJpY2Uge1xuICAgICAgZmxleC1iYXNpczogMjUlO1xuICAgIH1cblxuICAgICYtLXN1Ym1pdCB7XG4gICAgICBmbGV4LWJhc2lzOiA0MCU7XG4gICAgfVxuICB9XG5cbiAgLmstcHJvZHVjdGZvcm0tLWJ1bmRsZXNlbGVjdCB7XG4gICAgJl9faXRlbSB7XG4gICAgICAmLS1mbGV4IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgICAgICBwYWRkaW5nOiAxZW0gMDtcblxuICAgICAgICAuay1wcm9kdWN0Zm9ybS0tYnVuZGxlc2VsZWN0X192YXJpYW50IHtcbiAgICAgICAgICBmbGV4LWJhc2lzOiA0OC41JTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLW1kKSB7XG4gIC5rLXByb2R1Y3Rmb3JtIHtcbiAgICAmLS12YXJpYW50cyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgICAgIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICAgIH1cblxuICAgICYtLXZhcmlhbnRzZWxlY3Qge1xuICAgICAgZmxleC1iYXNpczogNDguNSU7XG4gICAgfVxuXG4gICAgJi0tcXVhbnRpdHksXG4gICAgJi0tc3VibWl0LFxuICAgICYtLXByaWNlIHtcbiAgICAgIG1hcmdpbi10b3A6IDJlbTtcbiAgICB9XG5cbiAgICAmLS1xdWFudGl0eSB7XG4gICAgICBmbGV4LWJhc2lzOiAxNSU7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDEwJTtcbiAgICB9XG5cbiAgICAmLS1zdWJtaXQge1xuICAgICAgZmxleC1iYXNpczogNTAlO1xuICAgIH1cblxuICAgICYtLXF1YW50aXR5IHtcbiAgICAgIGlucHV0W3R5cGU9J251bWJlciddIHtcbiAgICAgICAgcGFkZGluZzogMS4yNWVtIDA7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgLmstcHJvZHVjdGhlcm8ge1xuICAgIC5rLWlubmVyIHtcbiAgICAgIEBpbmNsdWRlIGNsZWFyZml4KCk7XG4gICAgICBwYWRkaW5nOiA0ZW0gNSU7XG4gICAgfVxuXG4gICAgJi0tZ2FsbGVyeSxcbiAgICAmLS1kZXRhaWxzIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgIH1cblxuICAgICYtLWdhbGxlcnkge1xuICAgICAgd2lkdGg6IDQwJTtcbiAgICAgIG1hcmdpbi1yaWdodDogNSU7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgIH1cblxuICAgICYtLWRldGFpbHMge1xuICAgICAgd2lkdGg6IDUwJTtcblxuICAgICAgJl9fY29udGVudCB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmstcHJvZHVjdGZvcm0ge1xuICAgICYtLXF1YW50aXR5IHtcbiAgICAgIGZsZXgtYmFzaXM6IDIwJTtcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICB9XG5cbiAgICAmLS1zdWJtaXQge1xuICAgICAgZmxleC1iYXNpczogNDUlO1xuICAgIH1cblxuICAgICYtLXByaWNlIHtcbiAgICAgIGZsZXgtYmFzaXM6IDIwJTtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC14eGwpIHtcbiAgLmstcHJvZHVjdGhlcm8ge1xuICAgIC5rLWlubmVyIHtcbiAgICAgIHBhZGRpbmc6IDhlbSA1JTtcbiAgICB9XG5cbiAgICAmLS1nYWxsZXJ5IHtcbiAgICAgIG1hcmdpbi1yaWdodDogMTUlO1xuICAgIH1cblxuICAgICYtLWRldGFpbHMge1xuICAgICAgd2lkdGg6IDQ1JTtcbiAgICB9XG5cbiAgICAuay1ydGUtY29udGVudCxcbiAgICAuay1wcm9kdWN0Zm9ybSB7XG4gICAgICB3aWR0aDogNzUlO1xuICAgIH1cbiAgfVxuXG4gIC5rLXByb2R1Y3Rmb3JtIHtcbiAgICAmLS12YXJpYW50c2VsZWN0IHtcbiAgICAgIC8vIGZsZXgtYmFzaXM6IDIyLjUlO1xuICAgIH1cbiAgfVxufVxuIiwiLmstcHJvZHVjdGRldGFpbHMge1xuICAmLS1pbWFnZSB7XG4gICAgLmstZmlndXJlIHtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDAuNjY3ZW07XG5cbiAgICAgICYtLWxpbmVyIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDEyOC41NyU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJi0tYWNjb3JkaW9uIHtcbiAgICB1bCB7XG4gICAgICBAaW5jbHVkZSB1bnN0eWxlLWxpc3QoKTtcbiAgICB9XG5cbiAgICBsaSB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDFlbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuXG4gICAgICBwIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBmb250LXNpemU6IDEyNSU7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgICB9XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICB9XG5cbiAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMS4xZW07XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHdpZHRoOiAwLjEyNWVtO1xuICAgICAgICBoZWlnaHQ6IDAuMTI1ZW07XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgYmFja2dyb3VuZDogJGJsYWNrO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9faXRlbSB7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYztcblxuICAgICAgJi5vcGVuIHtcbiAgICAgICAgc3BhbiB7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHJvdGF0ZSg0MDVkZWcpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fdHJpZ2dlciB7XG4gICAgICBwYWRkaW5nOiAxZW0gMDtcblxuICAgICAgcCB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMTI1JTtcbiAgICAgIH1cblxuICAgICAgc3BhbiB7XG4gICAgICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICByaWdodDogLTFlbTtcbiAgICAgICAgdG9wOiA0Mi41JTtcbiAgICAgICAgZm9udC1zaXplOiAxNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgcm90YXRlKDApO1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41cyAkZWFzZS1vdXQtYmFjaztcbiAgICAgIH1cblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19kcmF3ZXIge1xuICAgICAgaGVpZ2h0OiAwO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIHRyYW5zaXRpb246IGhlaWdodCAwLjJzICRlYXNlLW91dC1jaXJjO1xuXG4gICAgICB1bCB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxZW07XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgLmstcHJvZHVjdGRldGFpbHMge1xuICAgICYtLWhlYWRsaW5lIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG5cbiAgICAmLS1tYWluIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgICAgIHBhZGRpbmctdG9wOiAyZW07XG4gICAgfVxuXG4gICAgJi0tYWNjb3JkaW9uLFxuICAgICYtLWltYWdlIHtcbiAgICAgIGZsZXgtYmFzaXM6IDQ1JTtcbiAgICB9XG5cbiAgICAmLS1pbWFnZSB7XG4gICAgICBvcmRlcjogMjtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC14bCkge1xuICAuay1wcm9kdWN0ZGV0YWlscyB7XG4gICAgJi0tYWNjb3JkaW9uIHtcbiAgICAgIGZsZXgtYmFzaXM6IDM1JTtcbiAgICB9XG5cbiAgICAmLS1pbWFnZSB7XG4gICAgICBmbGV4LWJhc2lzOiA1MCU7XG4gICAgfVxuICB9XG59XG4iLCIuay1sYXRlc3RiYXRjaCB7XG4gICYtLXRpdGxlIHtcbiAgICAuay1oZWFkbGluZSB7XG4gICAgICBtYXJnaW4tdG9wOiAwO1xuICAgIH1cbiAgfVxuXG4gICYtLWludHJvIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gIH1cblxuICAmLS10YWJzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuXG4gICAgJl9fdGFiIHtcbiAgICAgIGZsZXgtYmFzaXM6IDI1JTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjO1xuICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2NjYztcbiAgICAgIHBhZGRpbmc6IDAuNWVtIDA7XG4gICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuNHMgJGVhc2Utb3V0LWNpcmM7XG5cbiAgICAgIHNwYW4ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgZm9udC1zaXplOiA3NSU7XG4gICAgICAgIGNvbG9yOiAkYWNjZW50LXRleHQ7XG4gICAgICB9XG5cbiAgICAgICYuYWN0aXZlIHtcbiAgICAgICAgYmFja2dyb3VuZDogJGJnLWRhcms7XG5cbiAgICAgICAgc3BhbiB7XG4gICAgICAgICAgY29sb3I6ICR0cnVlLXdoaXRlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICY6Zmlyc3QtY2hpbGQsXG4gICAgICAmOm50aC1jaGlsZCg1KSxcbiAgICAgICY6bnRoLWNoaWxkKDkpLFxuICAgICAgJjpudGgtY2hpbGQoMTMpIHtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICYtLXJlc3VsdHMge1xuICAgICZfX2xpbmVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICRiZy1ncmF5LWxpZ2h0O1xuICAgICAgcGFkZGluZzogMWVtO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgICB9XG5cbiAgICAmX19jb2x1bW4ge1xuICAgICAgZmxleC1iYXNpczogMTAwJTtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xuICAgICAgcGFkZGluZzogMWVtIDA7XG5cbiAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICBwYWRkaW5nLXRvcDogMDtcbiAgICAgIH1cblxuICAgICAgJjpudGgtY2hpbGQoMykge1xuICAgICAgICBwIHtcbiAgICAgICAgICBmb250LXNpemU6IDIwMCU7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcblxuICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgZm9udC1zaXplOiAwLjVlbTtcbiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiB0ZXh0LXRvcDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMWVtO1xuICAgICAgICBwYWRkaW5nOiAyZW0gMDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBiYWNrZ3JvdW5kOiByZWQ7XG4gICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC40cyAkZWFzZS1vdXQtY2lyYztcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMC4zM2VtO1xuXG4gICAgICAgIGEge1xuICAgICAgICAgIEBpbmNsdWRlIGZpbGwtcGFyZW50KCk7XG4gICAgICAgIH1cblxuICAgICAgICBzcGFuIHtcbiAgICAgICAgICBjb2xvcjogJHRydWUtd2hpdGU7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiBkYXJrZW4ocmVkLCA1JSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZGl2IHtcbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHAge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtc20pIHtcbiAgLmstbGF0ZXN0YmF0Y2gge1xuICAgICYtLXRhYnMge1xuICAgICAgJl9fdGFiIHtcbiAgICAgICAgcGFkZGluZzogMWVtO1xuXG4gICAgICAgIHNwYW4ge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLWxnKSB7XG4gIC5rLWxhdGVzdGJhdGNoIHtcbiAgICAmLS1pbnRybyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgIH1cblxuICAgICYtLXRpdGxlLFxuICAgICYtLWRlc2NyaXB0aW9uIHtcbiAgICAgIGZsZXgtYmFzaXM6IDQ4LjUlO1xuICAgIH1cblxuICAgICYtLWRlc2NyaXB0aW9uIHtcbiAgICAgIHA6Zmlyc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXhsKSB7XG4gIC5rLWxhdGVzdGJhdGNoIHtcbiAgICAmLS1pbnRybyB7XG4gICAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG4gICAgfVxuXG4gICAgJi0tdGFicyB7XG4gICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgIH1cblxuICAgICYtLXJlc3VsdHMge1xuICAgICAgJl9fbGluZXIge1xuICAgICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gICAgICAgIHBhZGRpbmc6IDMuNzVlbTtcbiAgICAgIH1cblxuICAgICAgJl9fY29sdW1uIHtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDUlO1xuXG4gICAgICAgIHAge1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjE7XG4gICAgICAgIH1cblxuICAgICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICBmbGV4LWJhc2lzOiAxMCU7XG4gICAgICAgIH1cblxuICAgICAgICAmOm50aC1jaGlsZCgyKSB7XG4gICAgICAgICAgZmxleC1iYXNpczogMzAlO1xuICAgICAgICB9XG5cbiAgICAgICAgJjpudGgtY2hpbGQoMykge1xuICAgICAgICAgIGZsZXgtYmFzaXM6IDI1JTtcblxuICAgICAgICAgIHA6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICBtYXJnaW46IDAgMCAwIGF1dG87XG4gICAgICAgICAgZmxleC1iYXNpczogMjAlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAteHhsKSB7XG4gIC5rLWxhdGVzdGJhdGNoIHtcbiAgICAmLS1pbnRybyB7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICBtYXJnaW4tYm90dG9tOiA2ZW07XG4gICAgfVxuXG4gICAgJi0tdGl0bGUge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxLjUlO1xuICAgIH1cblxuICAgICYtLWRlc2NyaXB0aW9uIHtcbiAgICAgIGZsZXgtYmFzaXM6IDM1JTtcbiAgICB9XG5cbiAgICAmLS1yZXN1bHRzIHtcbiAgICAgICZfX2xpbmVyIHtcbiAgICAgICAgcGFkZGluZzogNGVtO1xuICAgICAgfVxuXG4gICAgICAmX19jb2x1bW4ge1xuICAgICAgICBkaXY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIuMzNlbTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgICBmbGV4LWJhc2lzOiAyNSU7XG4gICAgICAgIH1cblxuICAgICAgICAmOm50aC1jaGlsZCgzKSB7XG4gICAgICAgICAgZmxleC1iYXNpczogMzUlO1xuXG4gICAgICAgICAgcCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDI1MCU7XG5cbiAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICBmb250LXNpemU6IDAuNWVtO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgZmxleC1iYXNpczogMTUlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuay1wcm9kdWN0ZmFxIHtcbiAgLmstaW5uZXItLXhsIHtcbiAgICBiYWNrZ3JvdW5kOiAkYmctZ3JheTtcbiAgICBib3JkZXItcmFkaXVzOiAuNzVlbTtcbiAgfVxuXG4gICYtLXRpdGxlIHtcbiAgICAuay1oZWFkbGluZSB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICB9XG5cbiAgJi0tYWNjb3JkaW9uIHtcbiAgICB1bCB7XG4gICAgICBAaW5jbHVkZSB1bnN0eWxlLWxpc3QoKTtcbiAgICB9XG5cbiAgICAmX19pdGVtIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xuXG4gICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgLmstcHJvZHVjdGZhcS0tYWNjb3JkaW9uX190cmlnZ2VyIHtcbiAgICAgICAgICBwYWRkaW5nLXRvcDogMDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgfVxuXG4gICAgICAuay1oZWFkbGluZSB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgIH1cblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX190cmlnZ2VyIHtcbiAgICAgIHBhZGRpbmc6IDJlbSAwIDFlbSAwO1xuICAgIH1cblxuICAgICZfX2RyYXdlciB7XG4gICAgICBoZWlnaHQ6IDA7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgdHJhbnNpdGlvbjogaGVpZ2h0IC4ycyAkZWFzZS1vdXQtY2lyYztcblxuICAgICAgJi0tbGluZXIge1xuICAgICAgICBwYWRkaW5nOiAwIDAgMmVtIDA7XG4gICAgICB9XG5cbiAgICAgIHAge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYShtaW4td2lkdGg6ICRicC1sZykge1xuICAuay1wcm9kdWN0ZmFxIHtcbiAgICAuay1pbm5lci0tbWQge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgICB9XG5cbiAgICAmLS10aXRsZSB7XG4gICAgICBmbGV4LWJhc2lzOiAyNSU7XG4gICAgfVxuICAgIFxuICAgICYtLWFjY29yZGlvbiB7XG4gICAgICBmbGV4LWJhc2lzOiA2Mi41JTtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhKG1pbi13aWR0aDogJGJwLXhsKSB7XG4gIC5rLXByb2R1Y3RmYXEge1xuICAgICYtLWFjY29yZGlvbiB7XG4gICAgICAmX19kcmF3ZXIge1xuICAgICAgICBwIHtcbiAgICAgICAgICBtYXgtd2lkdGg6IDc1JTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmstcHJvZHVjdHJldmlld3Mge1xuICAmLS10aXRsZSB7XG4gICAgLmstaGVhZGxpbmUge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgfVxuXG4gICYtLW1haW4ge1xuICAgIGEge1xuICAgICAgY29sb3I6ICRwcmltYXJ5O1xuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5LWRhcms7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi5rLXJldmlldyB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xuXG4gICY6bGFzdC1jaGlsZCB7XG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgfVxuXG4gICoge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuXG4gICYtLWxpbmVyIHtcbiAgICBwYWRkaW5nOiAzZW0gMDtcbiAgfVxuXG4gICYtLXRpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG5cbiAgICBoMyB7XG4gICAgICBmb250LWZhbWlseTogJGJvZHktZm9udDtcbiAgICB9XG4gIH1cblxuICAmLS1ib2R5IHtcbiAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gIH1cblxuICAmLS1tZXRhLFxuICAmLS1hY3Rpb25zIHtcbiAgICBwIHtcbiAgICAgIGNvbG9yOiAkYWNjZW50LXRleHQ7XG4gICAgfVxuICB9XG5cbiAgJi0tbWV0YSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICB9XG5cbiAgJi0tYWN0aW9ucyB7XG4gICAgJl9faXRlbSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cbiAgICAgIC5rLWFycm93IHtcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuXG4gICAgICAgICAgY2lyY2xlLFxuICAgICAgICAgIHBvbHlsaW5lLFxuICAgICAgICAgIGxpbmUge1xuICAgICAgICAgICAgc3Ryb2tlOiAjY2NjY2NjO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAqIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgfVxuXG4gICAgICAuay1hcnJvdyB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMC41ZW07XG4gICAgICB9XG5cbiAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDJlbTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1sZykge1xuICAuay1wcm9kdWN0cmV2aWV3cyB7XG4gICAgLmstaW5uZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgICB9XG5cbiAgICAuay1yZXZpZXcge1xuICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDFlbTtcblxuICAgICAgICAuay1yZXZpZXctLWxpbmVyIHtcbiAgICAgICAgICBwYWRkaW5nLXRvcDogMDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAuay1yZXZpZXctLWxpbmVyIHtcbiAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgICYtLXRpdGxlIHtcbiAgICAgIGZsZXgtYmFzaXM6IDI1JTtcbiAgICB9XG5cbiAgICAmLS1tYWluIHtcbiAgICAgIGZsZXgtYmFzaXM6IDYyLjUlO1xuICAgIH1cbiAgfVxufVxuIiwiLmstcHJvZHVjdHZpZGVvIHtcbiAgJi0tdGl0bGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAyZW07XG5cbiAgICAuay1oZWFkbGluZSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cbiAgfVxuXG4gICYtLXZpZGVvaGVhZGluZyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIHBhZGRpbmctdG9wOiAyZW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMC41ZW07XG4gICAgICBsZWZ0OiAwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDAuMzNlbTtcbiAgICAgIGJhY2tncm91bmQ6ICRoaWdobGlnaHQ7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgfVxuXG4gICAgKiB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICB9XG5cbiAgJi0tYm9keSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuXG4gICAgLmstYnV0dG9uIHtcbiAgICAgIG1hcmdpbi10b3A6IDFlbTtcbiAgICB9XG4gIH1cblxuICAmLS12aWRlbyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxNWVtO1xuICAgIG1hcmdpbjogYXV0bztcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLW1kKSB7XG4gIC5rLXByb2R1Y3R2aWRlbyB7XG4gICAgJi0tdGl0bGUge1xuICAgICAgbWFyZ2luLWJvdHRvbTogNGVtO1xuICAgIH1cblxuICAgICYtLW1haW4ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG5cbiAgICAmLS12aWRlb2hlYWRpbmcge1xuICAgICAgZmxleC1iYXNpczogMzMlO1xuICAgIH1cblxuICAgICYtLWJvZHkge1xuICAgICAgZmxleC1iYXNpczogNTAlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG5cbiAgICAmLS12aWRlbyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDA7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgLmstcHJvZHVjdHZpZGVvIHtcbiAgICAmLS10aXRsZSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiA1ZW07XG4gICAgfVxuXG4gICAgJi0tdmlkZW9oZWFkaW5nIHtcbiAgICAgIGZsZXgtYmFzaXM6IDQ1JTtcbiAgICB9XG5cbiAgICAmLS12aWRlb2hlYWRpbmcge1xuICAgICAgcGFkZGluZy10b3A6IDNlbTtcbiAgICB9XG5cbiAgICAmLS1ib2R5IHtcbiAgICAgIGZsZXgtYmFzaXM6IDQ1JTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgfVxuXG4gICAgJi0tdmlkZW8ge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAwO1xuICAgIH1cbiAgfVxufVxuIiwiLmstdmlkZW9lbWJlZCB7XG4gIC5rLWZpZ3VyZSB7XG4gICAgJi0tbGluZXIge1xuICAgICAgcGFkZGluZy1ib3R0b206IDYyLjUlO1xuICAgIH1cbiAgfVxuXG4gICY6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxufSIsIi5rLWNhcnQge1xuICBiYWNrZ3JvdW5kOiAkYmctZ3JheTtcblxuICAmX19ub3RpY2VzIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAud29vY29tbWVyY2Utbm90aWNlcy13cmFwcGVyLFxuICAgIHVsIHtcbiAgICAgIHBhZGRpbmctdG9wOiAzZW07XG4gICAgfVxuXG4gICAgdWwge1xuICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgfVxuXG4gICYtLW1ldGEge1xuICAgIHBhZGRpbmctYm90dG9tOiAwICFpbXBvcnRhbnQ7XG5cbiAgICBpbnB1dCB7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xuICAgICAgcGFkZGluZzogMWVtO1xuICAgIH1cblxuICAgICZfX2NvdXBvbiB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG5cbiAgICAgIGxhYmVsLFxuICAgICAgaW5wdXQge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWluLXdpZHRoOiAxMDAlO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2FjdGlvbnMge1xuICAgICAgLmstYnV0dG9uIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJi0tcXVhbnRpdHkge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW4tdG9wOiAwLjVlbTtcblxuICAgIGlucHV0W3R5cGU9J251bWJlciddIHtcbiAgICAgIGFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgcGFkZGluZzogMS4yNWVtIDNlbTtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRiZy1kYXJrO1xuICAgICAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgIGJhY2tncm91bmQ6ICR0cnVlLXdoaXRlO1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG5cbiAgICAuay1yZWR1Y2UsXG4gICAgLmstaW5jcmVhc2Uge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICBsZWZ0OiAwLjVlbTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgIGFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuay1pbmNyZWFzZSB7XG4gICAgICByaWdodDogMC41ZW07XG4gICAgICBsZWZ0OiBhdXRvO1xuICAgIH1cbiAgfVxuXG4gICYtLXRpdGxlcm93IHtcbiAgICBkaXNwbGF5OiBub25lO1xuXG4gICAgcCB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICB9XG5cbiAgJi0taXRlbSB7XG4gICAgcGFkZGluZzogM2VtIDA7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICB9XG5cbiAgICAmX19saW5lciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgICB9XG5cbiAgICAmX190aHVtYm5haWwsXG4gICAgJl9fdGl0bGUge1xuICAgICAgZmxleC1iYXNpczogMTAwJTtcbiAgICB9XG5cbiAgICAmX19xdWFudGl0eSxcbiAgICAmX19wcmljZSB7XG4gICAgICBmbGV4LWJhc2lzOiA0OC41JTtcbiAgICB9XG5cbiAgICAmX19xdWFudGl0eSB7XG4gICAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xuICAgIH1cblxuICAgICZfX3ByaWNlIHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIH1cblxuICAgICZfX3RodW1ibmFpbCB7XG4gICAgICBpbWcge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX3RpdGxlIHtcbiAgICAgIC5rLWhlYWRsaW5lIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX3RpdGxlIHtcbiAgICAgIGEge1xuICAgICAgICBjb2xvcjogJGJsYWNrO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgICZfX3F1YW50aXR5IHtcbiAgICAgIGxhYmVsIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB9XG5cbiAgICAgIC5rLXByb2R1Y3Rmb3JtLS1xdWFudGl0eSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX3ByaWNlIHtcbiAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC43NWVtO1xuXG4gICAgICAuay1iaWd0ZXh0IHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBmb250LXNpemU6IDEuNWVtO1xuICAgICAgfVxuICAgIH1cblxuICAgIHVsIHtcbiAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgfVxuXG4gICAgJl9fYnVuZGxlZGl0ZW0ge1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZWRlZGU7XG4gICAgICBwYWRkaW5nOiAwLjVlbSAwO1xuXG4gICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDA7XG4gICAgICB9XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgICB9XG5cbiAgICAgICZfX3ByaWNlIHtcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcblxuICAgICAgICBzdXAge1xuICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAxZW07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmLS1zaWRlYmFyIHtcbiAgICBtYXJnaW46IDJlbSAwO1xuICAgIGJhY2tncm91bmQ6ICR0cnVlLXdoaXRlO1xuXG4gICAgLmstdmV0ZXJhbi1jb3Vwb24ge1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZWRlZGU7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMC41ZW07XG5cbiAgICAgICZfX2xpbmVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgfVxuXG4gICAgICAmX190aXRsZSB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDc1JTtcblxuICAgICAgICBwIHtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMS4yO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICZfX2Ftb3VudCB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDI1JTtcbiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG5cbiAgICAgICAgYSB7XG4gICAgICAgICAgY29sb3I6ICRwcmltYXJ5O1xuXG4gICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBjb2xvcjogcmVkICFpbXBvcnRhbnQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fbGluZXIge1xuICAgICAgcGFkZGluZzogMmVtO1xuICAgIH1cblxuICAgICoge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cblxuICAgIC5rLWJpZ3RleHQge1xuICAgICAgZm9udC1zaXplOiAyMDAlO1xuICAgICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgfVxuXG4gICAgLmstY291cG9uIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMWVtO1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZWRlZGU7XG5cbiAgICAgICZfX3RpdGxlLFxuICAgICAgJl9fZGlzY291bnQge1xuICAgICAgICBmbGV4LWJhc2lzOiA0OC41JTtcbiAgICAgIH1cblxuICAgICAgJl9fZGlzY291bnQge1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcblxuICAgICAgICBhIHtcbiAgICAgICAgICBjb2xvcjogJHByaW1hcnk7XG5cbiAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGNvbG9yOiByZWQgIWltcG9ydGFudDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAuay1idXR0b24ge1xuICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgICYtLXByaW1hcnkge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19tZXRhIHtcbiAgICAgIG1hcmdpbi10b3A6IDFlbTtcblxuICAgICAgcCB7XG4gICAgICAgIGZvbnQtc2l6ZTogOTAlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICYtLWFjdGlvbnMge1xuICAgIG1hcmdpbi10b3A6IDJlbTtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwJTtcblxuICAgIHNwYW4ge1xuICAgICAgc3BhbiB7XG4gICAgICAgIGNvbG9yOiByZWQ7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJl9fc3VidG90YWwge1xuICAgIHBhZGRpbmctdG9wOiAxZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgfVxuXG4gICZfX2NvbnRpbnVlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIH1cblxuICAmX19tZXRhIHtcbiAgICBwIHtcbiAgICAgIGZvbnQtc2l6ZTogODAlO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMztcbiAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcblxuICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBhIHtcbiAgICAgIGNvbG9yOiAkcHJpbWFyeTtcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAkcHJpbWFyeS1kYXJrICFpbXBvcnRhbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgLmstY2FydCB7XG4gICAgJi0taXRlbSB7XG4gICAgICAmX190aXRsZSxcbiAgICAgICZfX3RodW1ibmFpbCB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDQ4LjUlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLWxnKSB7XG4gIC5rLWNhcnQge1xuICAgICYgPiAuay1pbm5lciB7XG4gICAgICBAaW5jbHVkZSBjbGVhcmZpeCgpO1xuICAgIH1cblxuICAgICZfX2hlYWRsaW5lIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiA0ZW07XG5cbiAgICAgIGgxIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLS1tYWluLFxuICAgICYtLXNpZGViYXIge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuXG4gICAgJi0tbWFpbiB7XG4gICAgICB3aWR0aDogNjUlO1xuICAgIH1cblxuICAgICYtLXNpZGViYXIge1xuICAgICAgd2lkdGg6IDMwJTtcbiAgICAgIG1hcmdpbi1sZWZ0OiA1JTtcbiAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgICAgdG9wOiAxMGVtO1xuICAgIH1cblxuICAgICYtLXRpdGxlcm93IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcblxuICAgICAgLmstY2FydC0tdGl0bGVpdGVtIHtcbiAgICAgICAgZmxleC1iYXNpczogMjIuNSU7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMWVtO1xuXG4gICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgIGZsZXgtYmFzaXM6IDMyLjUlO1xuICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLS1xdWFudGl0eSB7XG4gICAgICBtYXJnaW4tdG9wOiAwO1xuICAgIH1cblxuICAgICYtLWl0ZW0ge1xuICAgICAgJl9fcXVhbnRpdHksXG4gICAgICAmX19wcmljZSB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDIyLjUlO1xuICAgICAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xuICAgICAgfVxuXG4gICAgICAmX190aHVtYm5haWwge1xuICAgICAgICBmbGV4LWJhc2lzOiAxMCU7XG4gICAgICB9XG5cbiAgICAgICZfX3RpdGxlIHtcbiAgICAgICAgZmxleC1iYXNpczogMzIuNSU7XG4gICAgICB9XG5cbiAgICAgICZfX3ByaWNlIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLS1tZXRhIHtcbiAgICAgIHdpZHRoOiA1MCU7XG4gICAgICBtYXgtd2lkdGg6IDI1ZW07XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAteHhsKSB7XG4gIC5rLWNhcnQge1xuICAgICYtLW1haW4ge1xuICAgICAgd2lkdGg6IDcwJTtcbiAgICB9XG5cbiAgICAmLS1zaWRlYmFyIHtcbiAgICAgIHdpZHRoOiAyNSU7XG4gICAgfVxuICB9XG59XG4iLCIuay1wcm9kdWN0bGlzdGluZyB7XG4gIC5rLXByb2R1Y3RjYXJkIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1tZCkge1xuICAuay1wcm9kdWN0bGlzdGluZyB7XG4gICAgLmstaW5uZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgfVxuXG4gICAgLmstcHJvZHVjdGNhcmQge1xuICAgICAgZmxleC1iYXNpczogNDguNSU7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDAuNzUlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogNmVtO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXhsKSB7XG4gIC5rLXByb2R1Y3RsaXN0aW5nIHtcbiAgICAuay1wcm9kdWN0Y2FyZCB7XG4gICAgICBmbGV4LWJhc2lzOiAzMiU7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDElO1xuICAgIH1cbiAgfVxufVxuIiwiLmstYmxvZ3Byb21vIHtcbiAgLmstYXJ0aWNsZWNhcmQge1xuICAgIG1hcmdpbi1ib3R0b206IDNlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXNtKSB7XG4gIC5rLWJsb2dwcm9tbyB7XG4gICAgJi0tYXJ0aWNsZXMge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgfVxuXG4gICAgLmstYXJ0aWNsZWNhcmQge1xuICAgICAgZmxleC1iYXNpczogNDguNSU7XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgLmstYmxvZ3Byb21vIHtcbiAgICAmLS1hcnRpY2xlcyB7XG4gICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgfVxuXG4gICAgLmstYXJ0aWNsZWNhcmQge1xuICAgICAgZmxleC1iYXNpczogMzIuMjUlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG4gIH1cbn1cbiIsIi5rLXNlYXJjaHRyaWdnZXIge1xuICAmOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cblxuLmstbW9kYWwge1xuICAmID4gLmstaW5uZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuXG4gICYtLXNlYXJjaCxcbiAgJi0tY2FydCB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHotaW5kZXg6IC0xMDA7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzICRlYXNlLW91dC1xdWFydDtcblxuICAgICYuay1tb2RhbC0tb3BlbiB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgICAgei1pbmRleDogMTAwO1xuICAgICAgcG9pbnRlci1ldmVudHM6IGFsbDtcbiAgICB9XG4gIH1cblxuICAmLS1zY3JvbGxoaW50IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgcmlnaHQ6IC0xLjVlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpIHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgZGlzcGxheTogbm9uZTsgLy8gSlMgd2lsbCBkaXNwbGF5IHRoaXMgZWxlbWVudCBpZiB0aGVyZSdzIG1vcmUgdGhhbiAxIGl0ZW0gaW4gdGhlIGNhcnRcblxuICAgIHNwYW4ge1xuICAgICAgZm9udC1zaXplOiAyMDAlO1xuICAgICAgY29sb3I6ICRoaWdobGlnaHQ7XG4gICAgfVxuICB9XG5cbiAgJi0tY2xvc2Uge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDFlbTtcbiAgICByaWdodDogMmVtO1xuICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICAmX19saW5lciB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgfVxuXG4gICAgLmstaGVhZGxpbmUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAtNDBweDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuNHMgJGVhc2UtaW4tb3V0LXF1aW50O1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyO1xuICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgZm9udC1zaXplOiA2ZW07XG4gICAgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICAuay1oZWFkbGluZSB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi5rLW1vZGFsLS1zZWFyY2gge1xuICBmb3JtIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cblxuICBsYWJlbCxcbiAgYnV0dG9uIHtcbiAgICBmb250LWZhbWlseTogJGhlYWRpbmctZm9udDtcbiAgICBmb250LXNpemU6IDIwMCU7XG4gIH1cblxuICBpbnB1dCxcbiAgYnV0dG9uIHtcbiAgICBjb2xvcjogJHByaW1hcnk7XG4gIH1cblxuICBpbnB1dCB7XG4gICAgcGFkZGluZzogMC41ZW0gMDtcbiAgICBmb250LWZhbWlseTogJGhlYWRpbmctZm9udDtcbiAgICBmb250LXNpemU6IDIwMCU7XG5cbiAgICAmOmZvY3VzIHtcbiAgICAgIG91dGxpbmU6IG5vbmU7XG5cbiAgICAgICYgKyBsYWJlbCB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwJSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgbGFiZWwsXG4gIGJ1dHRvbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICB9XG5cbiAgbGFiZWwge1xuICAgIGNvbG9yOiAkdHJ1ZS13aGl0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGluZS1oZWlnaHQ6IDI7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgJGVhc2Utb3V0LWNpcmM7XG4gIH1cblxuICBidXR0b24ge1xuICAgIHRvcDogNTAlO1xuICAgIHJpZ2h0OiAwO1xuICAgIGFwcGVhcmFuY2U6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG5cbiAgICAmOmZvY3VzIHtcbiAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgfVxuICB9XG5cbiAgLmstbW9kYWwtLWNsb3NlIHtcbiAgICB0b3A6IC0zZW07XG4gICAgcmlnaHQ6IDA7XG4gICAgY29sb3I6ICR0cnVlLXdoaXRlO1xuICB9XG59XG5cbi5rLW1vZGFsLS1yZXZpZXcge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMTBlbTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAxNTAlKTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNHMgJGVhc2Utb3V0LWNpcmMsIG9wYWNpdHkgMC40cyAkZWFzZS1vdXQtY2lyYztcbiAgd2lkdGg6IDkwJTtcbiAgbWF4LXdpZHRoOiAzMmVtO1xuICBtYXgtaGVpZ2h0OiA2MHZoO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIHotaW5kZXg6IC0xMDA7XG4gIGJvcmRlci1yYWRpdXM6IDAuMzNlbTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIG9wYWNpdHk6IDA7XG5cbiAgJi5rLW1vZGFsLS1vcGVuIHtcbiAgICB6LWluZGV4OiAxMDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCk7XG4gICAgb3BhY2l0eTogMTtcbiAgICBwb2ludGVyLWV2ZW50czogYWxsO1xuICB9XG5cbiAgJi5rLW1vZGFsLS1zdWJtaXR0aW5nLFxuICAmLmstbW9kYWwtLXN1Y2Nlc3Mge1xuICAgIC5rLWZvcm0ge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICB9XG4gIH1cblxuICAmLmstbW9kYWwtLXN1Y2Nlc3Mge1xuICAgIC5rLWZvcm0ge1xuICAgICAgaGVpZ2h0OiAwO1xuICAgIH1cblxuICAgIC5rLW1vZGFsX19zdWNjZXNzbXNnIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuICB9XG5cbiAgLmstbW9kYWxfX3N1Y2Nlc3Ntc2cge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDJlbTtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyAkZWFzZS1vdXQtY2lyYztcblxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgfVxuXG4gIC5rLW1vZGFsLS1jb250ZW50IHtcbiAgICBiYWNrZ3JvdW5kOiAkdHJ1ZS13aGl0ZTtcbiAgICBwYWRkaW5nOiAzZW0gMmVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuXG4gIC5rLW1vZGFsX19jbG9zZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMC41ZW07XG4gICAgcmlnaHQ6IDAuNWVtO1xuICAgIGZvbnQtZmFtaWx5OiAkaGVhZGluZy1mb250O1xuICAgIGZvbnQtc2l6ZTogMjAwJTtcbiAgICBtYXJnaW46IDA7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGNvbG9yOiByZWQ7XG4gICAgfVxuICB9XG5cbiAgLmstaGVhZGxpbmUge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuXG4gIC5rLXJldmlld19fcHJvZHVjdHRpdGxlIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICBjb2xvcjogJHByaW1hcnk7XG4gIH1cblxuICAuay1yZXZpZXdfX3JhdGluZyB7XG4gICAgcCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICB9XG4gIH1cblxuICAuay1mb3JtIHtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHMgJGVhc2Utb3V0LWNpcmMsIGhlaWdodCAwLjRzICRlYXNlLW91dC1jaXJjO1xuICAgIG9wYWNpdHk6IDE7XG5cbiAgICAmX19ncm91cCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG5cbiAgICAgICYtLXRleHRhcmVhIHtcbiAgICAgICAgbGFiZWwge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuMjVlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRleHRhcmVhIHtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fYWN0aW9ucyB7XG4gICAgICBtYXJnaW4tdG9wOiAyZW07XG5cbiAgICAgIC5rLWJ1dHRvbiB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5rLXJldmlld19fcmF0aW5naXRlbSB7XG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi10b3A6IDAuMzNlbTtcbiAgICB9XG4gIH1cblxuICAuay1pbnB1dCB7XG4gICAgJiArIGxhYmVsIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMWVtO1xuICAgIH1cblxuICAgICY6Zm9jdXMge1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG4gIH1cblxuICB0ZXh0YXJlYSB7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuMzNlbTtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogJGJnLWdyYXk7XG5cbiAgICAmOmZvY3VzIHtcbiAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgLmstbW9kYWwtLXJldmlldyB7XG4gICAgd2lkdGg6IDYwJTtcbiAgICB0b3A6IDE1ZW07XG4gIH1cbn1cbiIsIi5rLWZ1bGx3aWR0aHZpZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmLnZpZGVvLXBsYXlpbmcge1xuICAgIC5rLWZ1bGx3aWR0aHZpZCB7XG4gICAgICAmLS1saW5lciB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5rLXBsYXktYnV0dG9uIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICB9XG5cbiAgICAmOmFmdGVyIHtcbiAgICAgIG9wYWNpdHk6IDAgIWltcG9ydGFudDtcbiAgICB9XG4gIH1cblxuICAuay1pbm5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuNzVlbTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICB9XG5cbiAgLmstcGxheS1idXR0b24ge1xuICAgIHotaW5kZXg6IDM7XG4gIH1cblxuICAmLS1iZ2ltZyB7XG4gICAgQGluY2x1ZGUgZmlsbC1wYXJlbnQoKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyAkZWFzZS1vdXQtY2lyYztcblxuICAgICYubGF6eWxvYWQtLWNvbXBsZXRlIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuICB9XG5cbiAgJi0tbGluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nLWJvdHRvbTogNTYuMjUlO1xuICAgIGJhY2tncm91bmQ6ICRibGFjaztcblxuICAgIHotaW5kZXg6IDI7XG4gIH1cblxuICAucGx5ciB7XG4gICAgQGluY2x1ZGUgZmlsbC1wYXJlbnQoKTtcbiAgICB6LWluZGV4OiAxO1xuICB9XG59XG5cbi5wbHlyX19jb250cm9sIHtcbiAgYmFja2dyb3VuZDogJHByaW1hcnk7XG5cbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogJHByaW1hcnktZGFyayAhaW1wb3J0YW50O1xuICB9XG5cbiAgJi5wbHlyX190YWItZm9jdXMge1xuICAgIGJhY2tncm91bmQ6ICRwcmltYXJ5LWRhcmsgIWltcG9ydGFudDtcbiAgfVxufVxuXG4ucGx5ci0tZnVsbC11aSBpbnB1dFt0eXBlPSdyYW5nZSddIHtcbiAgY29sb3I6ICRwcmltYXJ5O1xufVxuIiwiLmstY2FydC1zaWRlYmFyIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogNzUlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICB6LWluZGV4OiAxMDE7XG4gIGJhY2tncm91bmQ6ICR0cnVlLXdoaXRlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoXG4gICAgMTAxJVxuICApOyAvLyB0aGUgZXh0cmEgMSUgc29sdmVzIHNvbWUgdHJhbnNsYXRlIGluY29uc2lzdGVuY2llcyBvbiBzb21lIGJyb3dzZXJzXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzICRlYXNlLW91dC1jaXJjO1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNkZGQ7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG91dGxpbmUtY29sb3I6ICRwcmltYXJ5O1xuXG4gICYtLW9wZW4ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICBwb2ludGVyLWV2ZW50czogYWxsO1xuICB9XG5cbiAgJl9fbGluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAwIDFlbTtcbiAgfVxuXG4gICZfX2NvbnRlbnQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuXG4gICZfX3N1YnRvdGFsIHtcbiAgICBtYXJnaW46IDA7XG4gIH1cblxuICAmX19hY3Rpb25zIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYm90dG9tOiAwO1xuICAgIGJhY2tncm91bmQ6ICR0cnVlLXdoaXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJveC1zaGFkb3c6IDAgMCAwLjI1ZW0gI2RlZGVkZTtcblxuICAgIC5rLWxpbmVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgcGFkZGluZzogMWVtO1xuXG4gICAgICAmOmZpcnN0LW9mLXR5cGUge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuay1idXR0b24ge1xuICAgICAgZmxleC1iYXNpczogMTAwJTtcbiAgICAgIHBhZGRpbmc6IDAuNWVtIDA7XG5cbiAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjI1ZW07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJl9faXRlbS1hY3Rpb25zIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgLmstcHJvZHVjdGZvcm0tLXF1YW50aXR5IHtcbiAgICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG4gICAgICBmbGV4LWJhc2lzOiBhdXRvICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgaW5wdXRbdHlwZT0nbnVtYmVyJ10ge1xuICAgICAgcGFkZGluZzogMC41ZW0gMWVtO1xuICAgICAgbWF4LXdpZHRoOiA4Y2g7XG4gICAgfVxuXG4gICAgLmstcmVkdWNlIHtcbiAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gICAgICBAZXh0ZW5kICNrLXJlZHVjZTtcbiAgICB9XG5cbiAgICAuay1pbmNyZWFzZSB7XG4gICAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuICAgICAgQGV4dGVuZCAjay1pbmNyZWFzZTtcbiAgICB9XG5cbiAgICAuay1iaWd0ZXh0IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIH1cbiAgfVxuXG4gICZfX3F1YW50aXR5IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDFlbSAhaW1wb3J0YW50O1xuICB9XG5cbiAgJl9faXRlbS11cGRhdGUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDAlO1xuICAgIHJpZ2h0OiAwJTtcbiAgICBwYWRkaW5nOiAwLjVlbTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC42NXMgJGVhc2Utb3V0LWNpcmM7XG5cbiAgICAmLS1hY3RpdmUge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAgIH1cbiAgfVxuXG4gICZfX2Nsb3NlLFxuICAmX190aXRsZSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDFlbTtcblxuICAgICoge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgfVxuXG4gICZfX3RpdGxlIHtcbiAgICBsZWZ0OiAxZW07XG4gICAgY29sb3I6ICRwcmltYXJ5XG4gIH1cblxuICAmX19jbG9zZSB7XG4gICAgcmlnaHQ6IDFlbTtcbiAgICB0b3A6IDA7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNHMgJGVhc2UtaW4tb3V0LXF1aW50O1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXI7XG4gICAgY29sb3I6ICRwcmltYXJ5O1xuICAgIGZvbnQtc2l6ZTogMmVtO1xuXG4gICAgJjpob3ZlciB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgIH1cbiAgfVxuXG4gICNrLWFqYXhjYXJ0LWNhcnRpdGVtcyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogM2VtO1xuICAgIGJvdHRvbTogNmVtO1xuICAgIG92ZXJmbG93OiBzY3JvbGw7XG4gICAgbWFyZ2luOiAyZW0gMDtcblxuICAgICY6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICAgIHdpZHRoOiAwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICB9XG4gIH1cblxuICAmX19pdGVtIHtcbiAgICBmb250LXNpemU6IDgwJTtcbiAgICBwYWRkaW5nOiAxZW0gMDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcblxuICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIH1cblxuICAgICoge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cblxuICAgICZfX2xpbmVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG5cbiAgICBpbWcsXG4gICAgaDMge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIH1cblxuICAgIGltZyB7XG4gICAgICBmbGV4LWJhc2lzOiAyZW07XG4gICAgICBtYXgtd2lkdGg6IDZlbTtcbiAgICB9XG5cbiAgICBoMyB7XG4gICAgICBmbGV4LWJhc2lzOiA2OCU7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcblxuICAgICAgYSB7XG4gICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcCB7XG4gICAgICAvLyBmbGV4LWJhc2lzOiA1MCU7XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLW1kKSB7XG4gIC5rLWNhcnQtc2lkZWJhciB7XG4gICAgd2lkdGg6IDUwJTtcblxuICAgICZfX2xpbmVyIHtcbiAgICAgIHBhZGRpbmc6IDAgM2VtO1xuICAgIH1cblxuICAgICZfX2Nsb3NlLFxuICAgICZfX3RpdGxlIHtcbiAgICAgIHRvcDogMmVtO1xuICAgIH1cblxuICAgICZfX2Nsb3NlIHtcbiAgICAgIHJpZ2h0OiAxZW07XG4gICAgICB0b3A6IDFyZW07XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fdGl0bGUge1xuICAgICAgbGVmdDogMmVtO1xuICAgIH1cblxuICAgICZfX2l0ZW0ge1xuICAgICAgcGFkZGluZzogMmVtIDA7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAteGwpIHtcbiAgLmstY2FydC1zaWRlYmFyIHtcbiAgICB3aWR0aDogMzMlO1xuXG4gICAgJl9fbGluZXIge1xuICAgICAgcGFkZGluZzogMCAzZW07XG4gICAgfVxuXG4gICAgJl9fc3VtbWFyeSB7XG4gICAgICBoNCB7XG4gICAgICAgIG1hcmdpbjogMC41ZW0gMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19hY3Rpb25zIHtcbiAgICAgIC5rLWxpbmVyIHtcbiAgICAgICAgcGFkZGluZzogMWVtIDNlbTtcblxuICAgICAgICAmOmZpcnN0LW9mLXR5cGUge1xuICAgICAgICAgIHBhZGRpbmc6IDFlbSAzZW0gMDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAuay1idXR0b24ge1xuICAgICAgICBwYWRkaW5nOiAxLjI1ZW0gMmVtO1xuXG4gICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9faXRlbSB7XG4gICAgICBpbWcge1xuICAgICAgICBmbGV4LWJhc2lzOiAyNSU7XG4gICAgICAgIG1heC13aWR0aDogMjUlO1xuICAgICAgfVxuXG4gICAgICBoMyB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jbG9zZSB7XG4gICAgICByaWdodDogMWVtO1xuICAgIH1cblxuICAgICZfX3RpdGxlIHtcbiAgICAgIGxlZnQ6IDNlbTtcbiAgICB9XG4gIH1cbn1cbiIsIi5rLXByb2Nlc3Mge1xuICAuay1pbm5lciB7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkZGQ7XG4gICAgcGFkZGluZy10b3A6ICRwYWRkaW5nLXhzO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuXG4gICZfX2ljb25yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuXG4gICAgJl9faXRlbSB7XG4gICAgICBmbGV4LWJhc2lzOiAyMSU7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgICAgLmstcHJvY2Vzc19faWNvbnJvd19faWNvbiB7XG4gICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHNjYWxlKDEuMjUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmLmFjdGl2ZSB7XG4gICAgICAgIC5rLXByb2Nlc3NfX2ljb25yb3dfX2ljb24ge1xuICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRoaWdobGlnaHQ7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgc2NhbGUoMS4yNSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9faWNvbiB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBtYXJnaW46IGF1dG87XG4gICAgICB3aWR0aDogNjYuNjclO1xuXG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgd2lkdGg6IDIuNWVtO1xuICAgICAgICBoZWlnaHQ6IDIuNWVtO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgYmFja2dyb3VuZDogJGJnLWdyYXk7XG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyAkZWFzZS1vdXQtY2lyYywgYmFja2dyb3VuZCAxcyAkZWFzZS1vdXQtY2lyYztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX190aXRsZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuXG4gICZfX2Nhcm91c2VsIHtcbiAgICAmX19zbGlkZSB7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW46IDAgMWVtO1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyAkZWFzZS1pbi1jaXJjO1xuXG4gICAgICAmLmlzLXNlbGVjdGVkIHtcbiAgICAgICAgb3BhY2l0eTogMTtcblxuICAgICAgICAuay1wcm9jZXNzX19jYXJvdXNlbCB7XG4gICAgICAgICAgJl9fdGV4dCxcbiAgICAgICAgICAmX19pbWFnZSB7XG4gICAgICAgICAgICAvLyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fdGV4dCB7XG4gICAgICAvLyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTAxJSk7XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC44cyAkZWFzZS1vdXQtY2lyYztcbiAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcblxuICAgICAgaDIge1xuICAgICAgICBmb250LWZhbWlseTogJGJvZHktZm9udDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19pbWFnZSB7XG4gICAgICAvLyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTAxJSk7XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC44cyAkZWFzZS1vdXQtY2lyYztcbiAgICB9XG5cbiAgICAuay1maWd1cmUge1xuICAgICAgJi0tbGluZXIge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNzEuNDIlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICZfX2NvbnRyb2xzIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgJl9fcHJldixcbiAgJl9fbmV4dCB7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgLmstcHJvY2VzcyB7XG4gICAgJl9faWNvbnJvdyB7XG4gICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cbiAgICAgICZfX2l0ZW0ge1xuICAgICAgICBmbGV4LWJhc2lzOiA3JTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19jYXJvdXNlbCB7XG4gICAgICAmX19zbGlkZSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIH1cblxuICAgICAgJl9fdGV4dCxcbiAgICAgICZfX2ltYWdlIHtcbiAgICAgICAgZmxleC1iYXNpczogNTAlO1xuICAgICAgfVxuXG4gICAgICAmX190ZXh0IHtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMmVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLWxnKSB7XG4gIC5rLXByb2Nlc3Mge1xuICAgICZfX2ljb25yb3cge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTBlbTtcblxuICAgICAgJl9faXRlbSB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIH1cblxuICAgICAgJl9fdGl0bGUge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB3aWR0aDogMTUwJTtcbiAgICAgICAgbGVmdDogLTI1JTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBsaW5lLWhlaWdodDogMS40O1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2Nhcm91c2VsIHtcbiAgICAgICZfX3RleHQge1xuICAgICAgICBwYWRkaW5nOiAwIDcuNSU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAteHhsKSB7XG4gIC5rLXByb2Nlc3Mge1xuICAgICZfX2NvbnRyb2xzIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBmb250LXNpemU6IDEyNSU7XG4gICAgICB3aWR0aDogNTAlO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBib3R0b206IC0zZW07XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWF4KSB7XG4gIC5rLXByb2Nlc3Mge1xuICAgICZfX2Nhcm91c2VsIHtcbiAgICAgICZfX3NsaWRlIHtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmstcmVzb3VyY2VzY2FsbG91dCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOmJlZm9yZSxcbiAgJl9fYmdpbWcge1xuICAgIEBpbmNsdWRlIGZpbGwtcGFyZW50KCk7XG4gIH1cblxuICAmOmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgb3BhY2l0eTogMC41O1xuICAgIGJhY2tncm91bmQ6ICRibGFjaztcbiAgICB6LWluZGV4OiAtMTtcbiAgfVxuXG4gICZfX2JnaW1nIHtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICB6LWluZGV4OiAtMjtcbiAgfVxuXG4gICZfX2l0ZW0ge1xuICAgIG1hcmdpbi1ib3R0b206IDNlbTtcbiAgfVxuXG4gICZfX2Rlc2NyaXB0aW9uIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIH1cblxuICBoMiB7XG4gICAgY29sb3I6ICRoaWdobGlnaHQ7XG4gIH1cblxuICBwIHtcbiAgICBjb2xvcjogJHRydWUtd2hpdGU7XG4gIH1cblxuICBhIHtcbiAgICBjb2xvcjogJHByaW1hcnk7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAkaGlnaGxpZ2h0ICFpbXBvcnRhbnQ7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgLmstcmVzb3VyY2VzY2FsbG91dCB7XG4gICAgJl9fY29udGVudCB7XG4gICAgICBtYXJnaW4tbGVmdDogNTAlO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXhsKSB7XG4gIC5rLXJlc291cmNlc2NhbGxvdXQge1xuICAgICZfX2NvbnRlbnQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDcwJTtcbiAgICB9XG4gIH1cbn1cbiIsIi5rLWN0YSB7XG4gICYtLXN1YnNjcmliZSB7XG4gICAgLmstY3RhLS1jb250ZW50IHtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cbiAgfVxuXG4gICYtLWZhZGluZyB7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjc1cyBlYXNlLW91dDtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG5cbiAgJl9fc3Vic2NyaWJlLWNvbnRlbnQge1xuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gIH1cblxuICAmX19mb3JtLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC43NXMgZWFzZS1pbjtcblxuICAgICYtLW9wZW4ge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG5cbiAgICAuay1pbm5lciB7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIGZvcm0ge1xuICAgICAgbWluLXdpZHRoOiA1MCU7XG4gICAgfVxuXG4gICAgZmllbGRzZXQge1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcblxuICAgICAgJjpsYXN0LW9mLXR5cGUge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFiZWwge1xuICAgICAgY29sb3I6ICR0cnVlLXdoaXRlO1xuICAgIH1cblxuICAgIGlucHV0IHtcbiAgICAgIGNvbG9yOiAkdHJ1ZS13aGl0ZTtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1sZykge1xuICAuay1jdGEge1xuICAgICZfX2Zvcm0tY29udGFpbmVyIHtcbiAgICAgIGZvcm0ge1xuICAgICAgICBtaW4td2lkdGg6IDMzJTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi5rLWJyZWFkY3J1bWIge1xuICBhIHtcbiAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICY6aG92ZXIge1xuICAgICAgY29sb3I6ICRiZy1kYXJrICFpbXBvcnRhbnQ7XG4gICAgfVxuICB9XG59IiwiLmstb3ZlcnZpZXcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgJi0taXRlbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuXG4gICAgLmstZmlndXJlIHtcbiAgICAgIHdpZHRoOiA5MCU7XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICB9XG5cbiAgICAuay1oZWFkbGluZSBhIHtcbiAgICAgIGNvbG9yOiAkYmxhY2s7XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjb2xvcjogJHByaW1hcnkgIWltcG9ydGFudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmLS1pbnRybyB7XG4gICAgLmstcHJlaGVhZGluZyB7XG4gICAgICBzcGFuIHtcbiAgICAgICAgY29sb3I6ICRoaWdobGlnaHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fdGV4dCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxLjVlbTtcbiAgICB9XG5cbiAgICAmX19jYXJkIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgLmstZmlndXJlIHtcbiAgICAgICAgJi0tbGluZXIge1xuICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxNDQuMjMlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC5rLWNvcm5lcmltZyB7XG4gICAgICAgIGJvdHRvbTogLTIuNWVtO1xuICAgICAgICByaWdodDogLTEwJTtcbiAgICAgICAgd2lkdGg6IDQwJTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuay1jb3JuZXJpbWcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgfVxuXG4gICYtLXRvcGljYWxzIHtcbiAgICAuay1maWd1cmUge1xuICAgICAgJi0tbGluZXIge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNjIuOTYlO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5rLWNvcm5lcmltZyB7XG4gICAgICBib3R0b206IC0yLjVlbTtcbiAgICAgIHJpZ2h0OiAtMTAlO1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICB9XG4gIH1cblxuICAmLS1wZXRzIHtcbiAgICAuay1maWd1cmUge1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAgICYtLWxpbmVyIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDE1MS4xOCU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJi0tZWRpYmxlcyB7XG4gICAgLmstZmlndXJlIHtcbiAgICAgICYtLWxpbmVyIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDU4LjgyJTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuay1jb3JuZXJpbWcge1xuICAgICAgYm90dG9tOiAtMi41ZW07XG4gICAgICByaWdodDogLTI1JTtcbiAgICAgIHdpZHRoOiA1MCU7XG4gICAgfVxuICB9XG5cbiAgJi0tdmFwZSB7XG4gICAgJl9fY2FyZCB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG5cbiAgICAuay1maWd1cmUge1xuICAgICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgICBmbGV4LWJhc2lzOiA0MCU7XG5cbiAgICAgICYtLWxpbmVyIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDE0NC42NCU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fdGV4dCB7XG4gICAgICBmbGV4LWJhc2lzOiA1MCU7XG5cbiAgICAgIC5rLWhlYWRsaW5lIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuay1jb3JuZXJpbWcge1xuICAgICAgYm90dG9tOiAtMi41ZW07XG4gICAgICByaWdodDogLTEwJTtcbiAgICAgIHdpZHRoOiA0MCU7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgLmstb3ZlcnZpZXcge1xuICAgICYtLWl0ZW0ge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcblxuICAgICAgLmstZmlndXJlIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi0taW50cm8ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuICAgICAgJl9fdGV4dCB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDU1JTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgIH1cblxuICAgICAgJl9fY2FyZCB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDQwJTtcblxuICAgICAgICAuay1jb3JuZXJpbWcge1xuICAgICAgICAgIHJpZ2h0OiAtMTYuNSU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLmstdGV4dGJvZHkge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi0tdG9waWNhbHMge1xuICAgICAgd2lkdGg6IDU1JTtcbiAgICAgIG1hcmdpbi10b3A6IC04ZW07XG4gICAgfVxuXG4gICAgJi0tcGV0cyB7XG4gICAgICBtYXJnaW46IDAgMCAyZW0gNjUlO1xuICAgIH1cblxuICAgICYtLWVkaWJsZXMge1xuICAgICAgd2lkdGg6IDU1JTtcbiAgICAgIG1hcmdpbi10b3A6IC0xNWVtO1xuXG4gICAgICAmX190ZXh0IHtcbiAgICAgICAgbWF4LXdpZHRoOiAyNC43MmVtO1xuICAgICAgfVxuICAgIH1cblxuICAgICYtLXZhcGUge1xuICAgICAgbWFyZ2luOiAyZW0gMCAwIDMzLjMzJTtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXhsKSB7XG4gIC5rLW92ZXJ2aWV3IHtcbiAgICAmLS1pbnRybyB7XG4gICAgICAmX190ZXh0IHtcbiAgICAgICAgbWF4LXdpZHRoOiAzOGVtO1xuICAgICAgfVxuXG4gICAgICAmX19jYXJkIHtcbiAgICAgICAgbWF4LXdpZHRoOiAyOGVtO1xuICAgICAgfVxuICAgIH1cblxuICAgICYtLXRvcGljYWxzIHtcbiAgICAgIG1hcmdpbi10b3A6IC0xMmVtO1xuICAgICAgbWF4LXdpZHRoOiAzMGVtO1xuICAgIH1cblxuICAgICYtLXBldHMge1xuICAgICAgbWFyZ2luOiAwIDAgMCBhdXRvO1xuICAgICAgbWF4LXdpZHRoOiAyMS42NmVtO1xuICAgIH1cblxuICAgICYtLWVkaWJsZXMge1xuICAgICAgbWF4LXdpZHRoOiA0MmVtO1xuICAgICAgbWFyZ2luLXRvcDogLTI1ZW07XG4gICAgfVxuXG4gICAgJi0tdmFwZSB7XG4gICAgICBtYXJnaW4tbGVmdDogMzMuMzNlbTtcbiAgICAgIG1hcmdpbi10b3A6IDBlbTtcbiAgICAgIG1heC13aWR0aDogNDQuMTZlbTtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1tYXgpIHtcbiAgLmstb3ZlcnZpZXcge1xuICAgICYtLWludHJvIHtcbiAgICAgICZfX3RleHQge1xuICAgICAgICBtYXgtd2lkdGg6IDQ1ZW07XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuay1ibG9nbGlzdCB7XG4gIC5rLWFydGljbGVjYXJkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzZW07XG4gIH1cbn1cblxuLmstYmxvZ25hdiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmLS1maWx0ZXJieSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogM2VtO1xuICAgIHJpZ2h0OiA1JTtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgfVxuXG4gIHNlbGVjdCB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIC1tcy1leHBhbmQ6IG5vbmU7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgbWluLXdpZHRoOiBhdXRvO1xuXG4gICAgJjpmb2N1cyB7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICAgIH1cblxuICAgICY6aG92ZXIge1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgLmstYmxvZ2xpc3Qge1xuICAgIC5rLWlubmVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgfVxuXG4gICAgLmstYXJ0aWNsZWNhcmQge1xuICAgICAgZmxleC1iYXNpczogNDguNSU7XG4gICAgfVxuICB9XG5cbiAgLmstYmxvZ25hdiB7XG4gICAgJi0tZmlsdGVyYnkge1xuICAgICAgcmlnaHQ6IDEyLjUlO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLWxnKSB7XG4gIC5rLWJsb2dsaXN0IHtcbiAgICAuay1pbm5lciB7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgfVxuXG4gICAgLmstYXJ0aWNsZWNhcmQge1xuICAgICAgZmxleC1iYXNpczogMzEuNSU7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDEuMzMlO1xuICAgIH1cbiAgfVxufVxuIiwiLmstYmxvZ2NvbnRlbnQge1xufVxuXG4uay1zaWRlYmFyIHtcbiAgZGlzcGxheTogbm9uZTtcblxuICAmLS1uZXdzbGV0dGVyIHtcbiAgICAmX19jb250ZW50IHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG5cbiAgICAmX19iZ2ltZyB7XG4gICAgICBAaW5jbHVkZSBmaWxsLXBhcmVudCgpO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgICAgei1pbmRleDogLTE7XG4gICAgfVxuICB9XG5cbiAgLmstZm9ybSB7XG4gICAgaW5wdXQsXG4gICAgYnV0dG9uLFxuICAgIGxhYmVsLFxuICAgIC5rLWZvcm0tLW1lc3NhZ2Uge1xuICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzICRlYXNlLW91dC1jaXJjO1xuICAgIH1cblxuICAgIGlucHV0LFxuICAgIGJ1dHRvbixcbiAgICBsYWJlbCB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cblxuICAgIC5rLWZvcm0tLW1lc3NhZ2Uge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICB9XG5cbiAgICAmLS1zdWJtaXR0aW5nLFxuICAgICYtLXN1Ym1pdHRlZCB7XG4gICAgICBpbnB1dCxcbiAgICAgIGJ1dHRvbixcbiAgICAgIGxhYmVsIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLS1zdWJtaXR0ZWQge1xuICAgICAgLmstZm9ybS0tbWVzc2FnZSB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgLmstYmxvZ2NvbnRlbnQge1xuICAgICYgPiAuay1pbm5lciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgIH1cbiAgfVxuXG4gIC5rLXNpZGViYXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZsZXgtYmFzaXM6IDQ1JTtcblxuICAgIC5rLXByb2R1Y3RjYXJkIHtcbiAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA0ZW0pO1xuICAgIH1cblxuICAgICYtLW5ld3NsZXR0ZXIge1xuICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgIHRvcDogMDtcblxuICAgICAgJl9fY29udGVudCB7XG4gICAgICAgIHBhZGRpbmc6ICRwYWRkaW5nLXNtIDJlbSAyZW07XG4gICAgICB9XG5cbiAgICAgIHNwYW4ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5rLWZvcm0ge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICBsYWJlbCB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwLjY2N2VtO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBjb2xvcjogJHRydWUtd2hpdGU7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAkaGVhZGluZy1mb250O1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyAkZWFzZS1vdXQtY2lyYztcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICAgIGZvbnQtc2l6ZTogMTI1JTtcbiAgICAgIH1cblxuICAgICAgaW5wdXQge1xuICAgICAgICBmb250LXNpemU6IDEyNSU7XG4gICAgICAgIGNvbG9yOiAkdHJ1ZS13aGl0ZTtcbiAgICAgICAgZm9udC1mYW1pbHk6ICRoZWFkaW5nLWZvbnQ7XG5cbiAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgICAgb3V0bGluZTogbm9uZTtcblxuICAgICAgICAgICYgKyBsYWJlbCB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEuNWVtKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgYnV0dG9uIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDAuNjY3ZW07XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBmb250LXNpemU6IDEyNSU7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICBjb2xvcjogJHRydWUtd2hpdGU7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5rLWFydGljbGUge1xuICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXhsKSB7XG4gIC5rLWJsb2djb250ZW50IHtcbiAgICAuay1zaWRlYmFyIHtcbiAgICAgIGZsZXgtYmFzaXM6IDM1JTtcblxuICAgICAgJi0tbmV3c2xldHRlciB7XG4gICAgICAgICZfX2NvbnRlbnQge1xuICAgICAgICAgIHBhZGRpbmc6ICRwYWRkaW5nLW1kIDRlbSA0ZW07XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLmstcHJvZHVjdGNhcmQge1xuICAgICAgfVxuICAgIH1cblxuICAgIC5rLWFydGljbGUge1xuICAgICAgZmxleC1iYXNpczogNTUlO1xuICAgICAgcGFkZGluZy1yaWdodDogMTUlO1xuICAgIH1cbiAgfVxufVxuIiwiLmstY2hlY2tvdXQge1xuICAmX19oZWFkbGluZSB7XG4gICAgcGFkZGluZzogNGVtIDA7XG5cbiAgICBoMSB7XG4gICAgICBtYXJnaW4tdG9wOiAwO1xuICAgIH1cbiAgfVxuXG4gICZfX2Zvcm1zIHtcbiAgICBib3JkZXItdG9wOiAwLjI1ZW0gc29saWQgJHByaW1hcnk7XG4gICAgYm94LXNoYWRvdzogMCAwIDVweCAjZGVkZWRlO1xuXG4gICAgJiA+IC5rLWxpbmVyIHtcbiAgICAgIHBhZGRpbmc6IDFlbSAyZW07XG4gICAgICBiYWNrZ3JvdW5kOiAkdHJ1ZS13aGl0ZTtcbiAgICB9XG4gIH1cbn1cblxuLnBhZ2UtdGVtcGxhdGUtcGFnZS1jaGVja291dCB7XG4gIGJhY2tncm91bmQ6ICRiZy1ncmF5O1xuXG4gICNzaGlwLXRvLWRpZmZlcmVudC1hZGRyZXNzIHtcbiAgICBpbnB1dCxcbiAgICBzcGFuIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG5cbiAgICBpbnB1dCB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcbiAgICB9XG4gIH1cblxuICAuay1mb3JtLS1jb2x1bW5zIHtcbiAgICAmX19jb2wge1xuICAgICAgYmFja2dyb3VuZDogJHRydWUtd2hpdGU7XG4gICAgICBwYWRkaW5nOiAxZW07XG4gICAgICBib3gtc2hhZG93OiAwIDAgMnB4IC0xcHggIzIyMjtcbiAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgICB9XG5cbiAgICBpbnB1dCB7XG4gICAgICAmOmZvY3VzIHtcbiAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuay1jaGVja291dC0tc2hpcHBpbmdfX2hlYWRlciB7XG4gICAgbWFyZ2luLWxlZnQ6IDJlbTtcblxuICAgIGlucHV0LFxuICAgIGxhYmVsIHtcbiAgICAgIG1pbi13aWR0aDogYXV0bztcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaW5wdXQge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxZW07XG4gICAgfVxuXG4gICAgbGFiZWwge1xuICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICBmb250LXdlaWdodDogNDAwO1xuICAgIH1cbiAgfVxuXG4gIC5zaGlwcGluZ19hZGRyZXNzIHtcbiAgICBoZWlnaHQ6IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0cmFuc2l0aW9uOiBoZWlnaHQgMC40cyAkZWFzZS1vdXQtcXVhcnQ7XG4gIH1cbn1cblxuLmstcmV2aWV3LW9yZGVyIHtcbiAgJi0tdGl0bGVyb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG5cbiAgICBwIHtcbiAgICAgIGZsZXgtYmFzaXM6IDUwJTtcbiAgICAgIGNvbG9yOiAkcHJpbWFyeTtcblxuICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJi0taXRlbSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgIHBhZGRpbmc6IDJlbSAwO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xuXG4gICAgLnByb2R1Y3QtbmFtZSxcbiAgICAucHJvZHVjdC10b3RhbCB7XG4gICAgICBmbGV4LWJhc2lzOiA1MCU7XG4gICAgfVxuXG4gICAgLnByb2R1Y3QtYnVuZGxlZGl0ZW1zIHtcbiAgICAgIGZsZXgtYmFzaXM6IDEwMCU7XG5cbiAgICAgIHVsIHtcbiAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgfVxuXG4gICAgICBsaSB7XG4gICAgICAgIHBhZGRpbmc6IDFlbTtcblxuICAgICAgICAmOm50aC1jaGlsZChvZGQpIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAkYmctZ3JheTtcbiAgICAgICAgfVxuXG4gICAgICAgIGEge1xuICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGNvbG9yOiAkcHJpbWFyeS1kYXJrICFpbXBvcnRhbnQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcCB7XG4gICAgICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgICAgIG1hcmdpbjogMDtcblxuICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBzdXAge1xuICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAxZW07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAucHJvZHVjdC10b3RhbCB7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcblxuICAgICAgdWwge1xuICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLnByb2R1Y3QtcXVhbnRpdHkge1xuICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgfVxuXG4gIC5rLWJpZ3RleHQge1xuICAgIG1hcmdpbjogMDtcbiAgICBmb250LXNpemU6IDEyNSU7XG4gIH1cblxuICAud29vY29tbWVyY2UtcmVtb3ZlLWNvdXBvbiB7XG4gICAgY29sb3I6ICRwcmltYXJ5O1xuICAgIGZvbnQtc2l6ZTogNzUlO1xuICAgIHZlcnRpY2FsLWFsaWduOiBzdXBlcjtcblxuICAgICY6aG92ZXIge1xuICAgICAgY29sb3I6IHJlZCAhaW1wb3J0YW50O1xuICAgIH1cbiAgfVxufVxuXG4ud29vY29tbWVyY2UtZm9ybS1sb2dpbi10b2dnbGUge1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG5cbiAgYSB7XG4gICAgY29sb3I6ICRwcmltYXJ5O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogJHByaW1hcnktZGFyayAhaW1wb3J0YW50O1xuICAgIH1cbiAgfVxufVxuXG4ud2NfcGF5bWVudF9tZXRob2RzLnBheW1lbnRfbWV0aG9kcyB7XG4gIEBpbmNsdWRlIHVuc3R5bGUtbGlzdCgpO1xufVxuXG4ud29vY29tbWVyY2UtY2hlY2tvdXQtcGF5bWVudCB7XG4gIG1hcmdpbi10b3A6ICRwYWRkaW5nLXNtO1xuXG4gICoge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cblxuICBzcGFuIHtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICB9XG5cbiAgaW5wdXRbdHlwZT0ndGV4dCddLFxuICBpbnB1dFt0eXBlPSd0ZWwnXSB7XG4gICAgcGFkZGluZy1sZWZ0OiAxZW07XG4gIH1cblxuICAuY2hlY2tib3gge1xuICAgIGlucHV0W3R5cGU9J2NoZWNrYm94J10ge1xuICAgICAgJjpjaGVja2VkIHtcbiAgICAgICAgJiArIC53b29jb21tZXJjZS10ZXJtcy1hbmQtY29uZGl0aW9ucy1jaGVja2JveC10ZXh0OmJlZm9yZSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHByaW1hcnk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAud29vY29tbWVyY2UtdGVybXMtYW5kLWNvbmRpdGlvbnMtY2hlY2tib3gtdGV4dCB7XG4gICAgICBtYXJnaW4tbGVmdDogMmVtO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IC0yZW07XG4gICAgICAgIHdpZHRoOiAxZW07XG4gICAgICAgIGhlaWdodDogMWVtO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xuICAgICAgICBiYWNrZ3JvdW5kOiAkdHJ1ZS13aGl0ZTtcbiAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjRzICRlYXNlLW91dC1jaXJjO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4uay1wYXltZW50LW1ldGhvZC1zZWxlY3Qge1xuICBpbnB1dCxcbiAgbGFiZWwge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxuXG4gIGlucHV0IHtcbiAgICB3aWR0aDogMmVtO1xuICB9XG5cbiAgbGFiZWwge1xuICAgIG1pbi13aWR0aDogYXV0bztcbiAgfVxufVxuXG4ud29vY29tbWVyY2UtY2hlY2tvdXQtcmV2aWV3LW9yZGVyIHtcbiAgYm9yZGVyLXRvcDogMC4yNWVtIHNvbGlkICRwcmltYXJ5O1xuICBib3gtc2hhZG93OiAwIDAgNXB4ICNkZWRlZGU7XG4gIG1hcmdpbi10b3A6IDJlbTtcbiAgYmFja2dyb3VuZDogJHRydWUtd2hpdGU7XG4gIHBhZGRpbmc6IDFlbTtcbn1cblxuLndvb2NvbW1lcmNlLXRlcm1zLWFuZC1jb25kaXRpb25zLWNoZWNrYm94LXRleHQ6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgLmstY2hlY2tvdXQge1xuICAgICZfX2Zvcm1zIHtcbiAgICAgICYgPiAuay1saW5lciB7XG4gICAgICAgIHBhZGRpbmc6IDRlbSAzZW07XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fYmlsbGluZyxcbiAgICAmX19zaGlwcGluZyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgIH1cblxuICAgICZfX2JpbGxpbmcge1xuICAgICAgcGFkZGluZy1ib3R0b206IDRlbTtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGVkZWRlO1xuICAgIH1cblxuICAgICZfX3NoaXBwaW5nIHtcbiAgICAgIG1hcmdpbi10b3A6IDRlbTtcbiAgICAgIHBhZGRpbmctdG9wOiA0ZW07XG4gICAgfVxuXG4gICAgJl9fdGl0bGUge1xuICAgICAgZmxleC1iYXNpczogNDAlO1xuXG4gICAgICAuay1saW5lciB7XG4gICAgICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgICAgIHRvcDogMTBlbTtcbiAgICAgIH1cblxuICAgICAgaDMge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9fZmllbGRzIHtcbiAgICAgIGZsZXgtYmFzaXM6IDUwJTtcblxuICAgICAgLmZvcm0tcm93IHtcbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgfVxuXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4uay10b2dnbGUtc2hpcHBpbmcge1xuICBtYXJnaW4tdG9wOiAxZW07XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgLmstY2hlY2tvdXQge1xuICB9XG5cbiAgLndvb2NvbW1lcmNlLWNoZWNrb3V0LXJldmlldy1vcmRlciB7XG4gICAgcGFkZGluZzogNGVtIDNlbTtcbiAgfVxufVxuIiwiLmstc2VhcmNocmVzdWx0cyB7XG4gICYtLWl0ZW0ge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcblxuICAgICZfX2xpbmVyIHtcbiAgICAgIHBhZGRpbmc6IDJlbSAwIDRlbSAwO1xuICAgIH1cblxuICAgICZfX3RpdGxlIGEge1xuICAgICAgY29sb3I6ICRibGFjaztcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB1bCB7XG4gICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgIH1cblxuICAgIGxpIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1tZCkge1xuICAuay1zZWFyY2hyZXN1bHRzIHtcbiAgICAmLS1pdGVtIHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG5cbiAgICAgICZfX2xpbmVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICB9XG5cbiAgICAgICZfX2ltYWdlIHtcbiAgICAgICAgZmxleC1iYXNpczogMTAlO1xuICAgICAgfVxuXG4gICAgICAmX190aXRsZSB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDM1JTtcbiAgICAgIH1cblxuICAgICAgJl9fcmV2aWV3cyB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDEwJTtcbiAgICAgIH1cblxuICAgICAgJl9fcHJpY2Uge1xuICAgICAgICBmbGV4LWJhc2lzOiAxNSU7XG4gICAgICB9XG5cbiAgICAgICZfX2FjdGlvbiB7XG4gICAgICAgIGZsZXgtYmFzaXM6IGF1dG87XG4gICAgICB9XG5cbiAgICAgIC5rLWJpZ3RleHQge1xuICAgICAgICBmb250LXNpemU6IDE1MCU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIuay1sb2dpbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmX19iZ2ltZyB7XG4gICAgQGluY2x1ZGUgZmlsbC1wYXJlbnQoKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICB6LWluZGV4OiAxO1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAmX19taWRpbWcge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAmX19mb3JtcyB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAuay1saW5lciB7XG4gICAgICB3aWR0aDogODAlO1xuICAgICAgbWFyZ2luOiBhdXRvO1xuICAgIH1cbiAgfVxuXG4gICZfX2Zvcm0ge1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyAkZWFzZS1vdXQtY2lyYywgdHJhbnNmb3JtIDAuNHMgJGVhc2Utb3V0LWNpcmMsXG4gICAgICBoZWlnaHQgMC40cyAkZWFzZS1vdXQtY2lyYztcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAmLmlzLXZpc2libGUge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICB9XG5cbiAgICAud29vY29tbWVyY2UtZm9ybS1yb3cge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICAgIH1cbiAgfVxuXG4gIGZvcm0ge1xuICAgIC5mb3JtLXJvdyB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgfVxuXG4gICAgaW5wdXRbdHlwZT0ndGV4dCddLFxuICAgIGlucHV0W3R5cGU9J2VtYWlsJ10sXG4gICAgaW5wdXRbdHlwZT0ncGFzc3dvcmQnXSB7XG4gICAgICBib3JkZXItcmFkaXVzOiAwO1xuXG4gICAgICAmICsgbGFiZWwge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMWVtO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBjb2xvcjogJGFjY2VudC10ZXh0O1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyAkZWFzZS1vdXQtY2lyYztcbiAgICAgIH1cblxuICAgICAgJjpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG5cbiAgICAgICAgJiArIGxhYmVsIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaW5wdXRbdHlwZT0nY2hlY2tib3gnXSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgfVxuXG4gICAgICAmICsgbGFiZWwge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIG1pbi13aWR0aDogYXV0bztcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgYSB7XG4gICAgICBjb2xvcjogJGFjY2VudC10ZXh0O1xuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4uay1kYXNoYm9hcmQge1xuICBiYWNrZ3JvdW5kOiAkYmctZ3JheTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAmID4gLmstaW5uZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xuICB9XG5cbiAgJi0tbWFpbl9fbGluZXIsXG4gICYtLXNpZGViYXJfX2xpbmVyIHtcbiAgICBib3JkZXItcmFkaXVzOiAwLjMzZW07XG4gIH1cbiAgJi0tbWFpbl9fbGluZXIge1xuXG4gICAgLm15LWRhc2hib2FyZCB7XG4gICAgICBiYWNrZ3JvdW5kOiAkdHJ1ZS13aGl0ZTtcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwwLDAsLjEpO1xuICAgICAgcGFkZGluZzogMmVtO1xuICAgICAgZm9udC1zaXplOiAxLjFlbTtcbiAgICAgIG1hcmdpbjogMCAwIDFlbSAwO1xuICAgICAgYm9yZGVyLXJhZGl1czogMC4zM2VtO1xuICAgICAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAuNXMgZWFzZTtcbiAgICAgJjpudGgtY2hpbGQoMikge1xuICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgY29udGVudDogJ015IEFjY291bnQnO1xuICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgdG9wOiA1JTtcbiAgICAgICAgIGxlZnQ6IDUlO1xuICAgICAgIH1cbiAgICAgfVxuICAgICAgLmstYnV0dG9uLCAuay1idXR0b24tLXByaW1hcnkge1xuICAgICAgICBwYWRkaW5nOiAuM2VtIDJlbTtcbiAgICAgIH1cbiAgICAgIHNwYW4ge1xuICAgICAgICBtYXJnaW46IDFlbSAwO1xuICAgICAgfVxuICAgICAgJjpudGgtY2hpbGQoMykge1xuICAgICAgICBhIHtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgICBjb2xvcjogJHRydWUtYmxhY2s7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCAyMHB4IHJnYmEoMCwwLDAsLjIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICYtLXNpZGViYXIge1xuICAgIG1hcmdpbjogMmVtIDA7XG5cbiAgICAmX19saW5lciB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAgIHVsIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB6LWluZGV4OiAyO1xuICAgICAgfVxuICAgICAgbGkge1xuICAgICAgICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IC41cyBlYXNlO1xuICAgICAgICBhIHtcbiAgICAgICAgICBwYWRkaW5nOiAuNWVtO1xuICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDAuMzNlbTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwwLDAsLjEpO1xuXG4gICAgICAgIH1cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgYm94LXNoYWRvdzogMCAwIDIwcHggcmdiYSgwLDAsMCwuMik7XG4gICAgICAgICAgYSB7XG4gICAgICAgICAgICBjb2xvcjogJHByaW1hcnk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgdWwge1xuICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogMDtcbiAgICB9XG5cbiAgICBsaSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgYSB7XG4gICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgZm9udC1mYW1pbHk6ICRoZWFkaW5nLWZvbnQ7XG4gICAgfVxuICB9XG59XG5cbi53b29jb21tZXJjZS1NeUFjY291bnQtbmF2aWdhdGlvbi1saW5rLndvb2NvbW1lcmNlLU15QWNjb3VudC1uYXZpZ2F0aW9uLWxpbmstLXBheW1lbnQtbWV0aG9kcyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgLmstbG9naW4ge1xuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDkuNzVlbSk7XG4gICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuXG4gICAgJl9fYmdpbWcge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgJl9fbWlkaW1nIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAyZW07XG4gICAgICBsZWZ0OiA0OC42JTsgLy8gIHNvIHRoYXQgdGhlIGltYWdlIGxpbmVzIHVwIFwianVzdCByaWdodFwiXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICB3aWR0aDogMjAlO1xuICAgICAgei1pbmRleDogMztcblxuICAgICAgLmstZmlndXJlLS1saW5lciB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2Zvcm1zIHtcbiAgICAgIC8vIHRvcDogLTkuNzVlbTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHdpZHRoOiA1MCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBiYWNrZ3JvdW5kOiAkdHJ1ZS13aGl0ZTtcbiAgICAgIHotaW5kZXg6IDI7XG5cbiAgICAgIC5rLWxpbmVyIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHdpZHRoOiA2Ni42NyU7XG4gICAgICAgIG1heC13aWR0aDogMjcuNWVtO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX3JlbWVtYmVybWUge1xuICAgICAgbWFyZ2luLXRvcDogMmVtICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgJl9fZm9ybSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHRvcDogNTAlO1xuXG4gICAgICAmLmlzLXZpc2libGUge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgICB9XG5cbiAgICAgIGJ1dHRvblt0eXBlPSdzdWJtaXQnXSB7XG4gICAgICAgIG1hcmdpbjogMmVtIDAgMWVtIDA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgfVxuXG4gICAgICBwIHtcbiAgICAgICAgbWFyZ2luOiAwIDAgMC41ZW0gMDtcbiAgICAgIH1cblxuICAgICAgYSB7XG4gICAgICAgIGNvbG9yOiAkYWNjZW50LXRleHQ7XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmstZGFzaGJvYXJkIHtcbiAgICAmID4gLmstaW5uZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgfVxuXG4gICAgJi0tc2lkZWJhciB7XG4gICAgICBmbGV4LWJhc2lzOiAyNSU7XG4gICAgICBtYXJnaW46IDAgMCAyZW0gMDtcbiAgICB9XG5cbiAgICAmLS1tYWluIHtcbiAgICAgIGZsZXgtYmFzaXM6IDcwJTtcbiAgICB9XG4gICAgJi0tbWFpbl9fbGluZXIge1xuXG4gICAgICBwIHtcbiAgICAgICAgJjpudGgtY2hpbGQoMikge1xuICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6ICdNeSBBY2NvdW50JztcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogMTIlO1xuICAgICAgICAgICAgbGVmdDogMzIlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmstZmFxIHtcbiAgJiA+IC5rLWlubmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cblxuICAmLS1oZWFkaW5nIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDUlO1xuICB9XG5cbiAgJi0tc2lkZWJhciB7XG4gICAgb3JkZXI6IDI7XG5cbiAgICB1bCB7XG4gICAgICBAaW5jbHVkZSB1bnN0eWxlLWxpc3QoKTtcbiAgICB9XG5cbiAgICBhIHtcbiAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgfVxuXG4gICAgcCB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICB9XG5cbiAgJi0taXRlbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogM2VtO1xuXG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgfVxuXG4gICAgJi5pcy1vcGVuIHtcbiAgICAgIC5rLWZhcS0taXRlbV9fc3RhdHVzIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHJvdGF0ZSg0MDVkZWcpO1xuICAgICAgfVxuICAgIH1cblxuICAgICZfX2hlYWRpbmcge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAuMjVzIGVhc2U7XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgICAgIH1cblxuICAgICAgaDIge1xuICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICBtYXJnaW46IDAgMCAxZW0gMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19zdGF0dXMge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICByaWdodDogMDtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgIGZvbnQtc2l6ZTogMjAwJTtcbiAgICAgIGNvbG9yOiAkcHJpbWFyeTtcbiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjVzICRlYXNlLW91dC1iYWNrO1xuICAgIH1cblxuICAgICZfX2RyYXdlciB7XG4gICAgICBoZWlnaHQ6IDA7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuMnMgJGVhc2Utb3V0LWNpcmM7XG5cbiAgICAgIHAge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9faGVpZ2h0dGFyZ2V0IHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAyZW07XG4gICAgfVxuICB9XG59XG5cbi5rLWNvbnRhY3R1cyB7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgdHJhbnNpdGlvbjogaGVpZ2h0IDFzICRlYXNlLW91dC1xdWFydDtcblxuICAuay1pbm5lci0teGwge1xuICAgIGJhY2tncm91bmQ6ICRiZy1ncmF5O1xuICAgIGJvcmRlci1yYWRpdXM6IDAuNzVlbTtcbiAgfVxuXG4gIC5rLWZpZ3VyZSB7XG4gICAgZGlzcGxheTogbm9uZTtcblxuICAgICYtLWxpbmVyIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiA2Ny4xNyU7XG4gICAgfVxuICB9XG5cbiAgJi0tbWFpbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG5cbiAgLmstZm9ybSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRyYW5zaXRpb246IGhlaWdodCAxcyAkZWFzZS1vdXQtcXVhcnQ7XG5cbiAgICAmLS1zdWJtaXR0aW5nLFxuICAgICYtLXN1Ym1pdHRlZCB7XG4gICAgICBmaWVsZHNldCxcbiAgICAgIGJ1dHRvbiB7XG4gICAgICAgIG9wYWNpdHk6IDAgIWltcG9ydGFudDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLS1zdWJtaXR0ZWQge1xuICAgICAgaGVpZ2h0OiAwO1xuXG4gICAgICAmICsgLmstZm9ybS0tbWVzc2FnZSB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi0tZ3JvdXAge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIH1cblxuICAgIGlucHV0IHtcbiAgICAgIHBhZGRpbmctdG9wOiAwLjc1ZW07XG4gICAgICBmb250LWZhbWlseTogJGhlYWRpbmctZm9udDtcbiAgICAgIGZvbnQtc2l6ZTogMTQwJTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG5cbiAgICAgICY6Zm9jdXMge1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhYmVsIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgfVxuXG4gICAgZmllbGRzZXQsXG4gICAgYnV0dG9uIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHMgJGVhc2Utb3V0LWNpcmM7XG4gICAgfVxuXG4gICAgJi0tbWVzc2FnZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyAkZWFzZS1vdXQtY2lyYztcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1tZCkge1xuICAuay1mYXEge1xuICAgICYtLWhlYWRpbmcge1xuICAgICAgcGFkZGluZy1sZWZ0OiAxMCU7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbGcpIHtcbiAgLmstZmFxIHtcbiAgICAmID4gLmstaW5uZXIge1xuICAgICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIH1cblxuICAgICYtLWhlYWRpbmcge1xuICAgICAgcGFkZGluZy1sZWZ0OiA1MCU7XG4gICAgfVxuXG4gICAgJi0tc2lkZWJhcixcbiAgICAmLS1hY2NvcmRpb24ge1xuICAgICAgb3JkZXI6IDE7XG4gICAgfVxuXG4gICAgJi0tc2lkZWJhciB7XG4gICAgICBmbGV4LWJhc2lzOiA0NSU7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDUlO1xuXG4gICAgICAmX19saW5lciB7XG4gICAgICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgICAgIHRvcDogMTJlbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLS1hY2NvcmRpb24ge1xuICAgICAgZmxleC1iYXNpczogNTAlO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXhsKSB7XG4gIC5rLWZhcSB7XG4gICAgJi0taGVhZGluZyB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDQxLjc1JTtcbiAgICB9XG5cbiAgICAmLS1zaWRlYmFyIHtcbiAgICAgIGZsZXgtYmFzaXM6IDM1JTtcbiAgICB9XG5cbiAgICAmLS1hY2NvcmRpb24ge1xuICAgICAgZmxleC1iYXNpczogNjAlO1xuICAgIH1cblxuICAgICYtLWl0ZW0ge1xuICAgICAgJl9fc3RhdHVzIHtcbiAgICAgICAgZm9udC1zaXplOiAzMDAlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5rLWNvbnRhY3R1cyB7XG4gICAgLmstaW5uZXItLXhsIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG5cbiAgICAuay1maWd1cmUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIGxlZnQ6IC01JTtcbiAgICAgIHdpZHRoOiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgfVxuXG4gICAgJi0tdGl0bGUsXG4gICAgJi0tbWFpbiB7XG4gICAgICB3aWR0aDogNTAlO1xuICAgICAgbWFyZ2luLWxlZnQ6IDUwJTtcbiAgICB9XG4gIH1cbn1cbiIsIi5rLWhlcm8tLWFib3V0dXMge1xuICBiYWNrZ3JvdW5kOiBub25lO1xufVxuXG4uay10d291cC10ZXh0IHtcbiAgYmFja2dyb3VuZDogJGJnLWdyYXk7XG5cbiAgLmstaGVhZGxpbmUge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gIH1cblxuICAuay1iaWd0ZXh0IHtcbiAgICBmb250LXNpemU6IDE0MCU7XG4gIH1cblxuICAuay10d291cC1pbWFnZXJvdyB7XG4gICAgaW1nIHtcbiAgICAgIG1heC13aWR0aDogMTAwcHg7XG4gICAgICB3aWR0aDogMzAlO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cbiAgfVxufVxuXG4uay1wcmVzc3Byb21vIHtcbiAgYmFja2dyb3VuZDogJGJnLWdyYXk7XG5cbiAgJi0taW1hZ2Uge1xuICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICAuay1maWd1cmUtLWxpbmVyIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiA2Ny4xNyU7XG4gICAgfVxuICB9XG5cbiAgJi0tdGl0bGUge1xuICAgIGgyIHtcbiAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgfVxuICB9XG5cbiAgJi0tY2FyZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuXG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgfVxuXG4gICAgLmstaGVhZGxpbmUgYSB7XG4gICAgICBjb2xvcjogJGJsYWNrO1xuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5ICFpbXBvcnRhbnQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmstcHJlaGVhZGluZyB7XG4gICAgICBjb2xvcjogJGhpZ2hsaWdodDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgfVxuXG4gICAgJl9fYm9keSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxZW07XG4gICAgfVxuXG4gICAgJl9fYWN0aW9uIHtcbiAgICAgIGEge1xuICAgICAgICBjb2xvcjogJGFjY2VudC10ZXh0O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLW1kKSB7XG4gIC5rLXR3b3VwLXRleHQge1xuICAgICYgPiAuay1pbm5lciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgIH1cblxuICAgICYtLXRpdGxlLFxuICAgICYtLWJvZHkge1xuICAgICAgZmxleC1iYXNpczogNDguNSU7XG4gICAgfVxuICB9XG5cbiAgLmstcHJlc3Nwcm9tbyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgJi0taW1hZ2Uge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogNDAlO1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICB9XG5cbiAgICAmLS1tYWluIHtcbiAgICAgIHdpZHRoOiA1NSU7XG4gICAgICBtYXJnaW4tbGVmdDogNDUlO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXhsKSB7XG4gIC5rLXByZXNzcHJvbW8ge1xuICAgICYtLWNhcmRzIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgfVxuXG4gICAgJi0tY2FyZCB7XG4gICAgICBmbGV4LWJhc2lzOiA0NSU7XG4gICAgfVxuICB9XG59XG4iLCJAbWVkaWEgKG1pbi13aWR0aDogJGJwLW1kKSB7XG4gIC5rLWFsbC1wcm9kdWN0cyB7XG4gICAgLmstaW5uZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgfVxuXG4gICAgLmstcHJvZHVjdGNhcmQge1xuICAgICAgZmxleC1iYXNpczogNDguNSU7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDAuNzUlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuXG4gICAgICAmLS10aXRsZSB7XG4gICAgICAgIC5rLXJ0ZS1jb250ZW50IHtcbiAgICAgICAgICAqIHtcbiAgICAgICAgICAgIGNvbG9yOiAkYWNjZW50LXRleHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAteGwpIHtcbiAgLmstYWxsLXByb2R1Y3RzIHtcbiAgICAuay1wcm9kdWN0Y2FyZCB7XG4gICAgICBmbGV4LWJhc2lzOiAzMiU7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDElO1xuICAgIH1cbiAgfVxufVxuIiwiLmstaGVyby0tbGFicmVzdWx0cyB7XG4gIC5rLXByZWhlYWRpbmcge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNvbG9yOiAkaGlnaGxpZ2h0O1xuICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICB9XG5cbiAgLmstaGVybyB7XG4gICAgJl9fbWFpbiB7XG4gICAgICBwYWRkaW5nOiAkcGFkZGluZy1zbSAwO1xuICAgIH1cbiAgfVxufVxuXG4uay1sYWJyZXN1bHRzIHtcbiAgJl9fc2VhcmNoZm9ybSB7XG4gICAgLmstcHJlaGVhZGluZyB7XG4gICAgICBjb2xvcjogJGhpZ2hsaWdodDtcbiAgICB9XG5cbiAgICAuay1mb3JtIHtcbiAgICAgIGJ1dHRvblt0eXBlPSdzdWJtaXQnXSB7XG4gICAgICAgIG1hcmdpbi10b3A6IDAuNWVtO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgIH1cblxuICAgICAgaW5wdXRbdHlwZT0ndGV4dCddIHtcbiAgICAgICAgZm9udC1zaXplOiAyMDAlO1xuICAgICAgICBmb250LWZhbWlseTogJGhlYWRpbmctZm9udDtcbiAgICAgICAgcGFkZGluZzogMC41ZW0gMCAwO1xuXG4gICAgICAgICY6Zm9jdXMge1xuICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuay1sYXRlc3RiYXRjaC0tcmVzdWx0cyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgLmstaGVyby0tbGFicmVzdWx0cyB7XG4gICAgLmstaGVybyB7XG4gICAgICAmX19tYWluIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgICAgIHBhZGRpbmc6ICRwYWRkaW5nLWxnIDAgJHBhZGRpbmctc207XG4gICAgICB9XG5cbiAgICAgICZfX2hlYWRpbmcge1xuICAgICAgICBmbGV4LWJhc2lzOiA0MCU7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTAlO1xuXG4gICAgICAgIC5rLWhlYWRsaW5lIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJl9fYm9keSB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDMwJTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuay1sYWJyZXN1bHRzIHtcbiAgICAmX19zZWFyY2hmb3JtIHtcbiAgICAgIC5rLWZvcm0ge1xuICAgICAgICAmX19jb250ZW50IHtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIH1cblxuICAgICAgICBpbnB1dFt0eXBlPSd0ZXh0J10ge1xuICAgICAgICAgIG1heC13aWR0aDogNzUlO1xuICAgICAgICAgIG1pbi13aWR0aDogNzUlO1xuICAgICAgICAgIGZvbnQtc2l6ZTogNDAwJTtcbiAgICAgICAgICBwYWRkaW5nOiAwLjI1ZW0gMDtcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICBidXR0b25bdHlwZT0nc3VibWl0J10ge1xuICAgICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAkYnAteGwpIHtcbiAgLmstbGFicmVzdWx0cyB7XG4gICAgJl9fc2VhcmNoZm9ybSB7XG4gICAgICAuay1mb3JtIHtcbiAgICAgICAgYnV0dG9uW3R5cGU9J3N1Ym1pdCddIHtcbiAgICAgICAgICByaWdodDogMy43NWVtO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmstbGF0ZXN0YmF0Y2gtLXJlc3VsdHMge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcblxuICAgICAgJl9fbGluZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdHJ1ZS13aGl0ZTtcbiAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjRzICRlYXNlLW91dC1jaXJjO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RlZGVkZTtcblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmctZ3JheS1saWdodDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmstb3JkZXJyZWNlaXZlZCB7XG4gICZfX2hlYWQsXG4gICZfX2l0ZW0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICAmID4gZGl2IHtcbiAgICAgIGZsZXgtYmFzaXM6IDUwJTtcblxuICAgICAgJjpudGgtY2hpbGQoMikge1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBwLFxuICAgIGgzIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICB9XG5cbiAgICBhIHtcbiAgICAgIGNvbG9yOiAkcHJpbWFyeTtcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAkcHJpbWFyeS1kYXJrICFpbXBvcnRhbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJl9faGVhZCB7XG4gICAgYmFja2dyb3VuZDogI2RlZGVkZTtcbiAgICBwYWRkaW5nOiAwLjY2N2VtIDFlbTtcbiAgfVxuXG4gICZfX2l0ZW0ge1xuICAgIHBhZGRpbmc6IDAuNjY3ZW0gMWVtO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGVkZWRlO1xuXG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgfVxuXG4gICAgLmstYmlndGV4dCB7XG4gICAgICBmb250LXNpemU6IDEyNSU7XG4gICAgfVxuICB9XG59XG4iLCIucGFnZS10ZW1wbGF0ZS12ZXRlcmFuLXNpZ251cCB7XG4gIC5rLWludHJvdGV4dCB7XG4gICAgcGFkZGluZy1ib3R0b206IDJlbTtcblxuICAgIGgyIHtcbiAgICAgIG1hcmdpbjogMCAwIDFlbSAwO1xuICAgIH1cbiAgfVxufVxuXG4uay12ZXRlcmFucyB7XG4gIC5rLWZvcm1fX2FjdGlvbnMge1xuICAgIG1hcmdpbi10b3A6IDJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cblxuICAmX19mb3JtcyB7XG4gICAgYmFja2dyb3VuZDogJHRydWUtd2hpdGU7XG4gICAgYm9yZGVyLXRvcDogMC4yNWVtIHNvbGlkICRwcmltYXJ5O1xuICAgIGJveC1zaGFkb3c6IDAgMCA1cHggI2RlZGVkZTtcbiAgfVxuXG4gICZfX2Zvcm0ge1xuICAgICYgPiAuay1saW5lciB7XG4gICAgICBwYWRkaW5nOiAxZW0gMmVtO1xuICAgIH1cblxuICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZWRlZGU7XG4gICAgfVxuXG4gICAgaW5wdXRbdHlwZT0nZmlsZSddIHtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG5cbiAgICAgICYuaGFzLXZhbHVlIHtcbiAgICAgICAgJiArIGxhYmVsIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAkaGlnaGxpZ2h0O1xuXG4gICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICBjb250ZW50OiAnR290IGl0ISc7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgIHJpZ2h0OiAtNTAlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRiZy1kYXJrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmOmZvY3VzIHtcbiAgICAgICAgJiArIGxhYmVsIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmICsgbGFiZWwge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwKTtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBhbGw7XG4gICAgICAgIGJhY2tncm91bmQ6ICRiZy1kYXJrO1xuICAgICAgICBjb2xvcjogJHRydWUtd2hpdGU7XG4gICAgICAgIHBhZGRpbmc6IDFlbSAxLjVlbTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMC4zM2VtO1xuICAgICAgICBtaW4td2lkdGg6IGF1dG87XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjRzICRlYXNlLW91dC1jaXJjO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5rLWlucHV0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG5cbiAgICAmICsgbGFiZWwge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAxZW07XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC40cyAkZWFzZS1vdXQtY2lyYztcbiAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICBjb2xvcjogJGFjY2VudC10ZXh0O1xuICAgIH1cblxuICAgICY6Zm9jdXMge1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6ICRicC1tZCkge1xuICAuay12ZXRlcmFucyB7XG4gICAgJl9fZm9ybSB7XG4gICAgICAmID4gLmstbGluZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgIHBhZGRpbmc6IDRlbSAzZW07XG4gICAgICB9XG4gICAgfVxuXG4gICAgJl9faGVhZGluZyB7XG4gICAgICBmbGV4LWJhc2lzOiA0MCU7XG5cbiAgICAgIC5rLWxpbmVyIHtcbiAgICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgICAgdG9wOiAxMGVtO1xuICAgICAgfVxuXG4gICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMWVtO1xuICAgICAgfVxuXG4gICAgICBoMyB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmX19maWVsZHMge1xuICAgICAgZmxleC1iYXNpczogNTAlO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogJGJwLXhsKSB7XG4gIC5wYWdlLXRlbXBsYXRlLXZldGVyYW4tc2lnbnVwIHtcbiAgfVxufVxuIiwiLnBhZ2UtdGVtcGxhdGUtbG9jYXRpb24tZmluZGVyIHtcbiAgLmstY3RhYmFubmVyLFxuICAuay1mb290ZXIge1xuICAgIHotaW5kZXg6IDk5O1xuICAgIGJhY2tncm91bmQ6ICR0cnVlLXdoaXRlO1xuICB9XG4gIC5tYXBib3hnbC1wb3B1cC1hbmNob3ItYm90dG9tIHtcbiAgICB6LWluZGV4OiA5OTtcbiAgfVxuXG4gICNsZmUtcm9vdCB7XG4gICAgZm9ybSBsYWJlbCB7XG4gICAgICBtaW4td2lkdGg6IDA7XG4gICAgfVxuICB9XG59XG4iLCIucGFnZS10ZW1wbGF0ZS1jYXJ0IHtcbiAgLmstaGVhZGVyIHtcbiAgICB0b3A6IDAgIWltcG9ydGFudDtcblxuICAgICYtLXRvcCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgICYtLW5hdiB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgICYtLW5hdnRvZ2dsZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgICYtLWxvZ28ge1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjcpO1xuICAgIH1cbiAgfVxuXG4gIC5rLWNhcnQge1xuICAgICZfX2hlYWRsaW5lIGgxIHtcbiAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgfVxuICB9XG5cbiAgLmstY3RhYmFubmVyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4iLCIua29pLWVycm9yIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogODV2aDtcbiAgbWFyZ2luOiAwIDAgMmVtIDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAgMWVtO1xuICAmOmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY29udGVudDogJyc7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwwLDAsLjUpO1xuICAgIHotaW5kZXg6IDI7XG4gIH1cbiAgaW1nIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIHotaW5kZXg6IDE7XG4gIH1cbiAgaDEge1xuICAgIHotaW5kZXg6IDM7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogM2VtO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfVxuICBwIHtcbiAgICB6LWluZGV4OiAzO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDEuM2VtO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiAwIDJlbTtcbiAgfVxuICBhIHtcbiAgICBtYXJnaW46IDNlbSAwIDAgMDtcbiAgICB6LWluZGV4OiAzO1xuICB9XG59XG4iXX0= */
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
