{"version":3,"sources":["constants.js","components/Loader.js","components/ViewToggle.js","components/TextInput.js","components/Button.js","components/SearchForm.js","components/ResultItem.js","components/SearchResults.js","components/LoadMore.js","components/PopupHtml.js","components/MapBox.js","components/Layout.js","lib/api-client.js","lib/utilities.js","App.js","AppRoute.js","index.js"],"names":["userConfig","window","__lfeConfig","getConfig","prop","CONTENT_DEFAULTS","heading","subheading","MAP_DEFAULTS","viewPosition","latitude","longitude","zoom","maxZoom","minZoom","scrollZoom","RESULT_DEFAULTS","locationColumn","portalId","tableId","process","limit","absoluteLimit","showPhone","RESULT_KEYS_MAP","COLORS","BREAKPOINTS","rotateLoader","keyframes","loaderAnimation","css","LoaderEl","styled","div","props","height","background","showing","Indicator","span","Loader","loading","error","defaultProps","TabParent","aside","ViewToggle","onMapClick","onListClick","type","onClick","InputWrapper","hasValue","Input","input","TextInput","useState","focused","setFocused","focus","value","length","htmlFor","id","label","onChange","onFocus","onBlur","ButtonEl","button","Button","children","FormWrapper","Form","form","SearchForm","searchTerm","setSearchTerm","showGeolocate","onGeolocate","onSubmit","localError","setLocalError","prevTerm","useRef","onFormSubmit","useCallback","e","preventDefault","current","target","className","disabled","AddressHtml","address","Address","result","address_1","address_2","address_3","city","state","zipcode","ArrowElement","active","ArrowIcon","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","points","Phone","ResultsList","ul","ResultsItem","Number","withRouter","searchResults","activeIndex","setActiveIndex","match","useEffect","params","index","parseInt","getLinkTo","map","key","count","getNumberDisplay","to","name","phone","WrapperEl","LoadedAll","LoadMore","Popup","ActionRow","PopupHtml","stopPropagation","alternateFields","encodeURIComponent","split","join","trim","includes","url","open","buildUrl","ControlWrapper","geo","MarkerHtml","MapBox","onViewPositionChange","onZoomChange","onActiveIndexChange","dragging","transitionDur","transitionFlyTo","onViewportChange","data","getCursor","isDragging","transitionDuration","transitionInterpolator","mapboxApiAccessToken","showCompass","i","Fragment","map_location","lat","long","offsetLeft","offsetTop","closeOnClick","captureClick","onClose","markers","ListingSection","section","ContentLiner","results","MapSection","Headings","HeadingContent","hubDbBase","mapBoxBase","request","a","fetchOptions","fetch","response","ok","json","body","Error","status","forwardGeocode","location","search","reverseGeocode","lng","reverseGeocodeUrl","getResultsByProximity","offset","getSearchResultsFromRows","rows","row","Object","keys","values","forEach","searchTermFromGeodata","geodata","filter","item","place_type","itemMatch","place_name","replace","roundToDecimals","decimals","Math","round","history","setLoading","loadingMore","setLoadingMore","allowGeolocate","setAllowGeolocate","setSearchResults","setViewPosition","setZoom","setError","page","pageTotal","getSearchResults","then","objects","ceil","total","catch","finally","getSearchTerm","term","features","parseFloat","onSearchFormSubmit","navigator","geolocation","getCurrentPosition","pos","coords","console","log","push","forcedTerm","feature","geometry","coordinates","geolocationClickHandler","loadMoreClickHandler","AppRoute","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cd0edd3.chunk.js","sourcesContent":["\n// -router paths\n// user loads page - geolocation attempt\n// denied - then go to '/'\n// accept - then go to '/search/lat/lng\n//\nexport const ROUTE_CONFIG = [\n  '/', \n  '/search/:term', // linking to a pre-filled search field\n  '/search/:latitude/:longitude/:index' // link to a store within a search\n];\n\n// Everything past this point can be overridden -\n// by providing a config property w/ the same name\nconst userConfig = window.__lfeConfig || {};\nconst getConfig = prop => userConfig[prop] || {};\n\n// content settings\nexport const CONTENT_DEFAULTS = {\n  heading: 'Locate a Koi CBD Distributor Near You',\n  subheading: 'Search below by city, state, zip to find the nearest distributor.',\n  ...getConfig('CONTENT_DEFAULTS'),\n};\n\n// map settings\nexport const MAP_DEFAULTS = {\n  viewPosition: {\n    latitude: 37.7577,\n    longitude: -122.4376,\n  },\n  zoom: 11,\n  maxZoom: 18,\n  minZoom: 2,\n  scrollZoom: false,\n  ...getConfig('MAP_DEFAULTS'),\n};\n\n// results listing settings\nexport const RESULT_DEFAULTS = {\n  locationColumn: 'map_location',\n  portalId: '5273025',\n  tableId: process.env.REACT_APP_HS_HUBDB_TABLE_ID,\n  limit: 15,\n  absoluteLimit: 100,\n  showPhone: false,\n  ...getConfig('RESULT_DEFAULTS'),\n};\n\n// map a row's value keys to meaningful names\nexport const RESULT_KEYS_MAP = {\n  '1': 'name',\n  '3': 'map_location',\n  '4': 'hours',\n  '6': 'country',\n  '7': 'email',\n  '8': 'phone',\n  '9': 'address_1',\n  '10': 'address_2',\n  '11': 'address_3',\n  '12': 'address_4',\n  '13': 'type',\n  '14': 'city',\n  '15': 'state',\n  '16': 'zipcode',\n  '17': 'website',\n};\n\n// style settings\nexport const COLORS = {\n  primary: '#f4b13e',\n  secondary: '#c0d8be',\n  error: '#d44646',\n  dark: '#444444',\n  light: '#f5f5f5',\n  white: '#ffffff',\n  gray: '#eeeeee',\n  darkGray: '#a5a5a5',\n  overlay: 'rgba(33,33,33,0.9)',\n};\nexport const BREAKPOINTS = {\n  small: '540px',\n  medium: '767px',\n  large: '992px',\n  xlarge: '1199px',\n  xxlarge: '1440px',\n};\nexport const EASING = {\n  outCirc: 'cubic-bezier(0.075, 0.82, 0.165, 1)'\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes, css } from 'styled-components';\nimport { COLORS } from '../constants';\n\nconst rotateLoader = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }`;\nconst loaderAnimation = css`animation: ${rotateLoader} 0.45s linear infinite`;\n\nconst LoaderEl = styled.div`\n  position: absolute;\n  z-index: 599;\n  top: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: ${props => props.height || '100%'};\n  background-color: ${props => props.background || COLORS.white};\n  opacity: ${props => props.showing ? '1' : '0'};\n  visibility: ${props => props.showing ? 'visible' : 'hidden'};\n  transition: all 0.25s ease;\n`;\nconst Indicator = styled.span`\n  display: block;\n  width: 1.75rem;\n  height: 1.75rem;\n  overflow: hidden;\n  text-indent: -499px;\n  border-radius: 50%;\n  border-top: 3px solid rgba(244, 177, 62, 0.25);\n  border-right: 3px solid rgba(244, 177, 62, 0.25);\n  border-bottom: 3px solid rgba(244, 177, 62, 0.25);\n  border-left: 3px solid ${COLORS.primary};\n  ${loaderAnimation};\n`;\n\nconst Loader = ({ loading, error, height, background }) => (\n  <LoaderEl showing={loading && !error} height={height} background={background}>\n    <Indicator>\n      Loading...\n    </Indicator>\n  </LoaderEl>\n);\n\nLoader.defaultProps = {\n  height: '100%',\n  background: COLORS.white,\n};\n\nLoader.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]).isRequired,\n  height: PropTypes.string,\n  background: PropTypes.string,\n};\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { COLORS } from '../constants';\n\nconst TabParent = styled.aside`\n  position: fixed;\n  z-index: 10001;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  display: none;\n  background: ${COLORS.white};\n  box-shadow: rgba(44,44,44,0.1) 0 -2px 7px;\n  > span {\n    display: block;\n    position: absolute;\n    width: 2px;\n    height: 100%;\n    top: 0;\n    left: 50%;\n    margin-left: -1px;\n    background: ${COLORS.gray};\n  }\n  button {\n    border: none;\n    outline: none;\n    font-size: 0.9rem;\n    display: block;\n    flex-basis: 50%;\n    padding: 1.5rem 0.5rem;\n    text-align: center;\n    font-weight: bold;\n    text-transform: uppercase;\n    cursor: pointer;\n  }\n`;\n\nconst ViewToggle = ({ onMapClick, onListClick }) => {\n\n  return (\n    <TabParent>\n      <span></span>\n      <button type=\"button\" onClick={onListClick}>\n        <span>List View</span>\n      </button>\n      <button type=\"button\" onClick={onMapClick}>\n        <span>Map View</span>\n      </button>\n    </TabParent>\n  );\n};\n\nViewToggle.defaultProps = {\n  onMapClick: () => {},\n  onListClick: () => {},\n};\n\nViewToggle.propTypes = {\n  onMapClick: PropTypes.func,\n  onListClick: PropTypes.func,\n};\n\nexport default ViewToggle;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { COLORS, BREAKPOINTS } from '../constants';\n\n\nconst InputWrapper = styled.div`\n  position: relative;\n  margin-bottom: 0.5rem;\n  \n  @media (min-width:${BREAKPOINTS.small}) {\n    flex-grow: 2;\n    margin-right: 1rem;\n    margin-bottom: 0;\n  }\n\n  label {\n    display: block;\n    position: absolute;\n    pointer-events: none;\n    font-size: 1.1rem;\n    top: 0.9rem;\n    left: 1.2rem;\n    background: ${COLORS.white};\n    transform-origin: left top;\n    color: ${COLORS.darkGray};\n    transform: ${props => props.hasValue ? 'translateY(-1.5rem) scale(0.7)' : 'none'};\n  }`;\n\nconst Input = styled.input`\n  outline: none;\n  appearance: none;\n  display: block;\n  width: 100%;\n  font-size: 1.1rem;\n  padding: 1rem;\n  border-radius: 6px;\n  border: 2px solid ${COLORS.gray};\n  transition: border-color 0.2s ease;\n  &:hover {\n    border-color: ${COLORS.darkGray};\n  }\n  &:focus {\n    border-color: ${COLORS.primary};\n    box-shadow: ${COLORS.gray} 0 0 7px;\n  }\n`;\n\n\nconst TextInput = props => {\n  const [focused, setFocused] = useState(false);\n\n  const onFocus = () => {\n    setFocused(true);\n    if (props.onFocus) props.onFocus();\n  };\n  const onBlur = () => {\n    setFocused(false);\n    if (props.onBlur) props.onBlur();\n  };\n\n  return (\n    <InputWrapper focus={focused} hasValue={props.value.length > 0}>\n      <label htmlFor={props.id}>\n        {props.label}\n      </label>\n      <Input\n       id={props.id}\n       type={props.type}\n       value={props.value}\n       onChange={props.onChange} \n       onFocus={onFocus} \n       onBlur={onBlur} />\n    </InputWrapper>\n  );\n};\n\nTextInput.defaultProps = {\n  type: 'text',\n  label: '',\n  id: '',\n};\n\nTextInput.propTypes = {\n  label: PropTypes.string,\n};\n\n\nexport default TextInput;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { COLORS } from '../constants';\n\nconst ButtonEl = styled.button`\n  border: none;\n  appearance: none;\n  cursor: pointer;\n  display: inline-block;\n  padding: 1rem 2rem;\n  line-height: 1;\n  font-size: 0.9rem;\n  text-transform: uppercase;\n  font-weight: bold;\n  border-radius: 6px;\n  background: ${COLORS.primary};\n  color: ${COLORS.light};\n  &[disabled] {\n    background: ${COLORS.light};\n    color: ${COLORS.darkGray};\n    cursor: wait;\n  }\n`\n\nconst Button = props => {\n\n  return (\n    <ButtonEl {...props}>\n      {props.children}\n    </ButtonEl>\n  );\n};\n\n\nexport default Button;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useCallback, useRef } from 'react';\nimport styled from 'styled-components';\nimport TextInput from './TextInput';\nimport Button from './Button';\nimport { COLORS, BREAKPOINTS } from '../constants';\n\nconst FormWrapper = styled.div`\n  position: relative;\n  > p {\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 100%;\n    line-height: 1;\n    padding: 0.5rem 0 0;\n    font-size: 0.85rem;\n    color: ${COLORS.error};\n  }\n`;\nconst Form = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  @media (min-width:${BREAKPOINTS.small}) {\n    flex-direction: row;\n  }\n`;\nconst InputWrapper = styled.div`\n  position: relative;\n  @media (min-width:${BREAKPOINTS.small}) {\n    flex-grow: 2;\n  }\n\n  > button {\n    position: absolute;\n    top: 50%;\n    right: 1.5rem;\n    transform: translateY(-50%);\n    padding: 0.6rem;\n    border: none;\n    background: none;\n    color: ${COLORS.darkGray};\n    cursor: pointer;\n    outline: none;\n    .icon-compass {\n      font-size: 1.5rem;\n    }\n    &:hover {\n      color: ${COLORS.primary};\n      > span {\n        visibility: visible;\n        opacity: 1;\n        transform: translateX(0);\n      }\n    }\n    > span {\n      display: block;\n      position: absolute;\n      left: -6rem;\n      top: 0;\n      width: 7.5rem;\n      padding: 10px;\n      border-radius: 4px;\n      background: ${COLORS.dark};\n      color: ${COLORS.light};\n      margin-left: -1.5rem;\n      margin-top: 0.25rem;\n      visibility: hidden;\n      opacity: 0;\n      font-size: 0.8rem;\n      transform: translateX(10px);\n      transition: all 0.2s ease;\n    }\n  }\n`;\n\nconst SearchForm = ({\n  loading,\n  searchTerm,\n  setSearchTerm,\n  showGeolocate,\n  onGeolocate,\n  onSubmit\n}) => {\n  const [localError, setLocalError] = useState(false);\n  const prevTerm = useRef(null); //track previous search term\n\n  const onFormSubmit = useCallback(e => {\n    e.preventDefault();\n    if (searchTerm.length === 0) {\n      setLocalError('Enter a location to search');\n      return;\n    }\n    if (prevTerm.current && prevTerm.current === searchTerm) {\n      setLocalError('Enter a new search term');\n      return;\n    }\n    onSubmit();\n    prevTerm.current = searchTerm;\n  }, [searchTerm]);\n\n  const onChange = useCallback(e => {\n    if (loading) { return; }\n    if ((searchTerm.length && localError) || \n    ((prevTerm.current && prevTerm.current !== searchTerm) && localError)) {\n      setLocalError(false);\n    }\n    setSearchTerm(e.target.value);\n  }, [searchTerm, localError, loading]);\n\n  return (\n    <FormWrapper>\n      <Form onSubmit={onFormSubmit}>\n        <InputWrapper>\n          <TextInput\n            label=\"Search For a Store\"\n            onChange={onChange}\n            value={searchTerm} />\n          {showGeolocate &&\n          <button type=\"button\" onClick={onGeolocate}>\n            <div className=\"icon-compass\"></div>\n            <span>Use My Location</span>\n          </button>}\n        </InputWrapper>\n        <Button type=\"submit\" disabled={loading}>\n          Search Now\n        </Button>\n      </Form>\n      {localError && <p>{localError}</p>}\n    </FormWrapper>\n  );\n};\n\nexport default SearchForm;","import React from 'react';\nimport styled from 'styled-components';\nimport { COLORS } from '../constants';\n\nconst AddressHtml = styled.address`\n  font-style: normal;\n  line-height: 1.2;\n  color: ${COLORS.darkGray};\n  font-size: 0.9rem;\n  margin: 0 0 0.5rem;\n  .lfe-street-addr {\n    span {\n      display: inline-block;\n      &:first-of-type {\n        margin-right: 5px;\n      }\n    }\n  }\n`;\nexport const Address = ({ result }) => (\n  <AddressHtml>\n    <div className=\"lfe-street-addr\">\n      <span>{result.address_1}</span>\n      {result.address_2.length > 0 &&\n      <span>{result.address_2}</span>}\n    </div>\n    {result.address_3 && \n      <small>{result.address_3}</small>}\n    <div className=\"lfe-city-state\">\n      <span>{result.city}, {result.state} {result.zipcode}</span>\n    </div>\n  </AddressHtml>\n);\n\n\nconst ArrowElement = styled.div`\n  display: block;\n  position: absolute;\n  width: 1rem;\n  height: 1rem;\n  top: 0;\n  right: 0;\n  color: ${props => props.active ? COLORS.primary : COLORS.dark};\n  transition: all 0.3s ease;\n  svg {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n`;\nexport const ArrowIcon  = ({ active }) => (\n  <ArrowElement active={active}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n      <polyline points=\"12 5 19 12 12 19\"></polyline>\n    </svg>\n  </ArrowElement>\n);\n\n\nexport const Phone = styled.div`\n  font-weight: bold;\n  color: ${COLORS.primary};\n`;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Link, withRouter } from 'react-router-dom';\nimport { ArrowIcon, Address, Phone } from './ResultItem';\nimport { RESULT_DEFAULTS, COLORS, EASING } from '../constants';\n\nconst ResultsList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  li {\n    position: relative;\n    display: block;\n    border-top: 2px solid ${COLORS.gray};\n    &:last-child {\n      border-bottom: 2px solid ${COLORS.gray};\n    }\n    a {\n      display: block;\n      position: absolute;\n      overflow: hidden;\n      text-indent: -499px;\n      z-index: 9;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n  }\n`;\nconst ResultsItem = styled.div`\n  padding: 2rem 1.5rem 1.5rem;\n  padding-left: 2.5rem;\n  transform: ${props => props.active ? 'translateX(1rem)' : 'translateX(0)'};\n  transition: transform 0.35s ${EASING.outCirc}, opacity 0.3s linear;\n  h3 {\n    font-size: 1.1rem;\n    margin: 0 0 0.75rem;\n    > span {\n      display: inline-block;\n      position: relative;\n      padding-right: 1.5rem;\n    }\n  }\n  + span {\n    opacity: ${props => props.active ? '1' : '1'};\n    transform: ${props => props.active ? 'translateX(0)' : 'translateX(0)'};\n  }\n`;\n\nconst Number = styled.span`\n  display: block;\n  position: absolute;\n  z-index: 1;\n  top: 1.5rem;\n  left: 0.5rem;\n  padding-top: 0.35rem;\n  font-size: 0.9rem;\n  color: ${COLORS.secondary};\n`;\n\n\nconst getNumberDisplay = index => {\n  const count = index + 1;\n  return count > 9 ? count : `0${count}`;\n};\n\nconst SearchResults = ({\n  searchResults,\n  activeIndex,\n  setActiveIndex,\n  match \n}) => {\n\n  useEffect(() => {\n    if (!match.params.index) return;\n    const index = parseInt(match.params.index);\n    if (index !== activeIndex) {\n      setActiveIndex(index);\n    }\n  }, [match]);\n\n  const getLinkTo = useCallback(index => {\n    return `/search/${match.params.latitude}/${match.params.longitude}/${index}`;\n  }, [match.params]);\n\n  return (\n    <ResultsList>\n      {searchResults.map((result, index) => \n      <li key={result.id}>\n        <Number>{getNumberDisplay(index)}</Number>\n        <Link to={getLinkTo(index)}>View Store on Map</Link>\n        <ResultsItem active={activeIndex === index}>\n          <h3>\n            <span>{result.name} <ArrowIcon active={activeIndex === index} /></span>\n          </h3>\n          <Address result={result} />\n          {RESULT_DEFAULTS.showPhone &&\n          <Phone>{result.phone}</Phone>}\n        </ResultsItem>\n      </li>)}\n    </ResultsList>\n  );\n};\n\nexport default withRouter(SearchResults);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from './Loader';\nimport { COLORS } from '../constants';\n\nconst WrapperEl = styled.div`\n  position: relative;\n  overflow: hidden;\n  height: 6rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  button {\n    display: inline-block;\n    border: none;\n    outline: none;\n    appearance: none;\n    padding: 1rem 2rem;\n    text-align: center;\n    background: none;\n    font-size: 1rem;\n    cursor: pointer;\n    font-weight: bold;\n    transition: color 0.3s ease, background 0.3s ease;\n    &:hover {\n      background: ${COLORS.light};\n      color: ${COLORS.primary};\n    }\n    &:active {\n      transform: translateY(1px);\n    }\n  }\n`;\n\nexport const LoadedAll = styled.div`\n  padding: 2rem 1rem;\n  text-align: center;\n  font-weight: bold;\n  font-size: 0.9rem;\n  color: ${COLORS.darkGray};\n`;\n\nconst LoadMore = ({ loading, onClick }) => (\n  <WrapperEl>\n    <Loader loading={loading} error={false} />\n    <button type=\"button\" onClick={onClick}>\n      <span>Load More</span>\n    </button>\n  </WrapperEl>\n);\n\nLoadMore.defaultProps = {\n  loading: false,\n};\n\nLoadMore.propTypes = {\n  loading: PropTypes.bool,\n};\n\nexport default LoadMore;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Address } from './ResultItem';\nimport { COLORS } from '../constants';\n\n\nconst Popup = styled.div`\n  padding: 1.5rem;\n  width: 300px;\n  h3 {\n    margin: 0 0 1rem;\n  }\n`;\n\nconst ActionRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 1.5rem;\n`;\n\nconst Button = styled.button`\n  width: 48%;\n  text-align: center;\n  border-radius: 4px;\n  font-size: 0.7rem;\n  text-transform: uppercase;\n  padding: 1rem 0.5em;\n  cursor: pointer;\n  font-weight: bold;\n  background: transparent;\n  border: 1px solid ${COLORS.darkGray};\n  color: ${COLORS.darkGray};\n  &:hover { \n    background: ${COLORS.gray};\n  }\n`;\n\nconst buildUrl = (result) => {\n\n  const alternateFields = {\n    name: encodeURIComponent(result.name.split(' ').join('+').trim()),\n    city: encodeURIComponent(result.city.split(' ').join('+').trim()),\n    state: encodeURIComponent(result.state.trim()),\n    zipcode: encodeURIComponent(result.zipcode.trim()),\n  }\n  // edge cases\n  if (alternateFields.name.includes('%7C')) {\n    alternateFields.name = alternateFields.name.split('%7C').join('');\n  }\n\n  const url = `https://www.google.com/maps/search/?api=1&query=${alternateFields.name}+${alternateFields.city}+${alternateFields.state}+${alternateFields.zipcode}`;\n  window.open(url, '_blank');\n}\n\nconst PopupHtml = ({ result }) => {\n\n  return (\n    <Popup onClick={e => e.stopPropagation()}>\n      <h3>{result.name}</h3>\n      <Address result={result} />\n      <ActionRow>\n        <Button onClick={() => { buildUrl(result) }}>Get Directions</Button>\n        {/* <Button>Store Hours</Button> */}\n      </ActionRow>\n    </Popup>\n  );\n};\n\nPopupHtml.propTypes = {\n  result: PropTypes.object.isRequired,\n};\n\nexport default PopupHtml;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ReactMapGL, { FlyToInterpolator, NavigationControl, Marker, Popup, TRANSITION_EVENTS } from 'react-map-gl';\nimport WebMercatorViewport from 'viewport-mercator-project';\nimport PopupHtml from './PopupHtml';\nimport { COLORS, MAP_DEFAULTS } from '../constants';\n\nconst ControlWrapper = styled.div`\n  position: absolute;\n  top: 5px;\n  right: ${props => props.geo ? 'auto' : '5px'};\n  left: ${props => props.geo ? '5px' : 'auto'};\n`;\nconst MarkerHtml = styled.div`\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  > div {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: ${COLORS.primary};\n    border-radius: 50%;\n    box-shadow: rgba(22, 22, 22, 0.15) 0 0 0 8px;\n    transition: opacity 0.2s ease;\n  }\n  > span {\n    position: relative;\n    z-index: 99;\n    display: block;\n    line-height: 2;\n    color: ${COLORS.light};\n    font-weight: bold;\n    font-size: 0.75rem;\n    text-align: center;\n  }\n`;\n\nconst MapBox = ({\n  viewPosition, \n  onViewPositionChange,\n  zoom,\n  onZoomChange,\n  searchResults,\n  activeIndex,\n  onActiveIndexChange,\n}) => {\n\n  const dragging = useRef(null);\n  const transitionDur = useRef(0);\n  const transitionFlyTo = useRef(null);\n\n  const onViewportChange = data => {\n    // console.log('Viewport change: ', data);\n    const { latitude, longitude, zoom } = data;\n    \n    onViewPositionChange({ latitude, longitude });\n    onZoomChange(zoom);\n\n    // if (!dragging.current) {\n    //   transitionDur.current = 500;\n    //   transitionFlyTo.current = new FlyToInterpolator();\n    // } else if (transitionDur.current > 0) {\n    //   transitionDur.current = 0;\n    //   transitionFlyTo.current = null;\n    // }\n  };\n\n  const onCursorState = state => {\n    dragging.current = state.isDragging;\n  };\n\n  return (\n    <ReactMapGL\n     width=\"100%\"\n     height=\"100%\"\n     zoom={zoom}\n     maxZoom={MAP_DEFAULTS.maxZoom}\n     minZoom={MAP_DEFAULTS.minZoom}\n     scrollZoom={MAP_DEFAULTS.scrollZoom}\n     latitude={viewPosition.latitude}\n     longitude={viewPosition.longitude}\n     onViewportChange={onViewportChange}\n     getCursor={onCursorState}\n     transitionDuration={transitionDur.current}\n     transitionInterpolator={transitionFlyTo.current}\n     mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_API_KEY}>\n      \n      <ControlWrapper>\n        <NavigationControl showCompass={false} />\n      </ControlWrapper>\n\n      {(searchResults.length > 0) && searchResults.map((result, i) =>\n      <React.Fragment key={`marker-${i}`}>\n        <Marker\n         latitude={result.map_location.lat} \n         longitude={result.map_location.long}\n         offsetLeft={-12}\n         offsetTop={5}>\n          <MarkerHtml \n            active={activeIndex === i}\n            onClick={() => onActiveIndexChange(i)}>\n            <div></div>\n            <span>{i + 1}</span>\n          </MarkerHtml>\n        </Marker>\n        {activeIndex === i &&\n        <Popup\n         latitude={result.map_location.lat}\n         longitude={result.map_location.long}\n         closeOnClick={false}\n         captureClick={true}\n         onClose={() => onActiveIndexChange(false)}>\n           <PopupHtml result={result} />\n        </Popup>}\n      </React.Fragment>)}\n\n    </ReactMapGL>\n  );\n};\n\nMapBox.defaultProps = {\n  markers: [],\n  activeIndex: false,\n};\n\nMapBox.propTypes = {\n  zoom: PropTypes.number.isRequired,\n  viewPosition: PropTypes.object.isRequired,\n  searchResults: PropTypes.array,\n  activeIndex: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n};\n\nexport default MapBox;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { COLORS, BREAKPOINTS, CONTENT_DEFAULTS } from '../constants';\n\n// listing & results section\nexport const ListingSection = styled.section`\n  position: relative;\n  min-height: 100vh;\n  padding-bottom: 4rem;\n  @media (min-width: ${BREAKPOINTS.large}) {\n    width: 50%;\n    z-index: 99;\n    box-shadow: rgba(44,44,44,0.1) 2px 0 7px;\n  }\n`;\nexport const ContentLiner = styled.div`\n  position: relative;\n  padding: 5rem 1rem 2rem;\n  min-height: ${props => props.results ? '400px' : '0'};\n  @media (min-width:${BREAKPOINTS.small}) {\n    padding-left: 2rem;\n    padding-right: 2rem;\n  }\n`;\n\n// map embed parent\nexport const MapSection = styled.section`\n  position: fixed;\n  top: 0;\n  left: -100%;\n  background: ${COLORS.dark};\n  width: 100%;\n  height: 100%;\n  @media (min-width: ${BREAKPOINTS.large}) {\n    left: auto;\n    right: 0;\n    width: 50%;\n  }\n`;\n\n// form headings\nconst Headings = styled.div`\n  padding: 0 0 3rem;\n  h2 {\n    font-weight: bold;\n    font-size: 2.8rem;\n    margin: 0 0 1.2rem;\n  }\n  p {\n    font-size: 1.1rem;\n  }\n`;\nexport const HeadingContent = () => (\n  <Headings>\n    <h2>{CONTENT_DEFAULTS.heading}</h2>\n    <p>{CONTENT_DEFAULTS.subheading}</p>\n  </Headings>\n);","import { RESULT_DEFAULTS } from '../constants';\nconst { portalId, tableId, locationColumn, limit } = RESULT_DEFAULTS;\n\nconst hubDbBase = `https://api.hubapi.com/hubdb/api/v2/tables/${tableId}/rows?portalId=${portalId}`;\nconst mapBoxBase = `https://api.mapbox.com/geocoding/v5/mapbox.places`;\nconst forwardGeocodeUrl = search => `${mapBoxBase}/${search}.json?access_token=${process.env.REACT_APP_MAPBOX_API_KEY}&types=place,locality,postcode`;\nconst reverseGeocodeUrl = (lat, lng) => `${mapBoxBase}/${lng},${lat}.json?access_token=${process.env.REACT_APP_MAPBOX_API_KEY}&types=place,locality,postcode`;\n\nconst request = async (url, fetchOptions = {}) => {\n  const response = await fetch(url, fetchOptions);\n  if (response.ok) {\n    const body = await response.json();\n    return body;\n  }\n  throw new Error(response.status);\n};\n\n\nexport const forwardGeocode = location => request(forwardGeocodeUrl(location));\nexport const reverseGeocode = (lat, lng) => request(reverseGeocodeUrl(lat, lng));\n\nexport const getResultsByProximity = async (latitude, longitude, offset = 0) => {\n  return request(`${hubDbBase}&limit=${limit}&offset=${offset}&orderBy=geo_distance(${locationColumn},${latitude},${longitude})`);\n};","import { RESULT_KEYS_MAP } from '../constants';\n\n// re-format search results w/ real key names\nexport const getSearchResultsFromRows = (rows) => rows.map(row => {\n  let result = { id: row.id };\n  Object.keys(row.values).forEach(key => {\n    const newKey = RESULT_KEYS_MAP[key];\n    result[newKey] = row.values[key];\n  });\n  return result;\n});\n\n// get autofilled searchterm after geolocation\nexport const searchTermFromGeodata = geodata => {\n  const [itemMatch] = geodata.filter(item => {\n    return item.place_type.includes('place');\n  });\n  return itemMatch ? itemMatch.place_name.replace(', United States', '') : '';\n};\n\n// round to 'x' number of decimal places\nexport const roundToDecimals = (value, decimals = 5) => Number(Math.round(value+'e'+decimals)+'e-'+decimals);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Loader from './components/Loader';\nimport ViewToggle from './components/ViewToggle';\nimport SearchForm from './components/SearchForm';\nimport SearchResults from './components/SearchResults';\nimport LoadMore, { LoadedAll } from './components/LoadMore';\nimport MapBox from './components/MapBox';\nimport { ListingSection, MapSection, ContentLiner, HeadingContent } from './components/Layout';\nimport { reverseGeocode, forwardGeocode, getResultsByProximity } from './lib/api-client';\nimport { getSearchResultsFromRows, searchTermFromGeodata, roundToDecimals } from './lib/utilities';\nimport { MAP_DEFAULTS, RESULT_DEFAULTS, COLORS } from './constants';\n\n\nconst App = ({ history, match, location }) => {\n  const [loading, setLoading] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [allowGeolocate, setAllowGeolocate] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [viewPosition, setViewPosition] = useState(MAP_DEFAULTS.viewPosition);\n  const [activeIndex, setActiveIndex] = useState(false);\n  const [zoom, setZoom] = useState(MAP_DEFAULTS.zoom);\n  const [error, setError] = useState(false);\n  const page = useRef(1);\n  const pageTotal = useRef(null);\n\n\n  const getSearchResults = async (latitude, longitude) => {\n    return getResultsByProximity(latitude, longitude).then(data => {\n      // console.log('Raw hubdb response: ', data);\n      const results = getSearchResultsFromRows(data.objects);\n      // console.log('Search results: ', results);\n      setSearchResults(results);\n      pageTotal.current = Math.ceil(data.total / RESULT_DEFAULTS.limit);\n    }).catch(error => {\n      // console.log('Request error: ', error);\n      setError('Problem getting results.');\n    }).finally(() => setLoading(false));\n  };\n  const getSearchTerm = async (latitude, longitude) => {\n    return reverseGeocode(latitude, longitude).then(data => {\n      const term = searchTermFromGeodata(data.features);\n      // console.log(term);\n      setSearchTerm(term);\n    }).catch(error => {\n      // console.log('Rev geocode err: ', error);\n    });\n  };\n\n  // app mounted - get users location\n  useEffect(() => {\n    // console.log('Location', location);\n    // console.log('Match: ', match);\n\n    // linking to already performed search\n    if (match.params.latitude && match.params.longitude) {\n      const latitude = parseFloat(match.params.latitude);\n      const longitude = parseFloat(match.params.longitude);\n      setViewPosition({ latitude, longitude });\n      (async () => {\n        await getSearchResults(latitude, longitude);\n        await getSearchTerm(latitude, longitude);\n      })();\n      return;\n\n    // pre-filled search from url term param\n    } else if (match.params.term && match.params.term.length > 1) {\n      setSearchTerm(match.params.term);\n      onSearchFormSubmit(match.params.term);\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(pos => {\n      const latitude = roundToDecimals(pos.coords.latitude);\n      const longitude = roundToDecimals(pos.coords.longitude);\n      console.log('Got coords: ', { latitude, longitude });\n      setViewPosition({ latitude, longitude });\n\n      history.push(`/search/${latitude}/${longitude}`);\n\n      (async () => {\n        await getSearchResults(latitude, longitude);\n        await getSearchTerm(latitude, longitude);\n      })();\n    }, () => {\n      setLoading(false);\n      setAllowGeolocate(false);\n    });\n  }, []);\n\n  // active index change \n  useEffect(() => {\n    // console.log(searchResults);\n    // console.log(activeIndex);\n    if (searchResults.length && activeIndex !== false) {\n      if (searchResults[activeIndex]) {\n        const { lat: latitude, long: longitude } = searchResults[activeIndex].map_location;\n        setViewPosition({ latitude, longitude });\n      }\n    }\n  }, [activeIndex]);\n\n  // search submit callback -\n  // called when no local errors exist in SearchForm\n  // and when search term is in route when app mounts\n  const onSearchFormSubmit = useCallback((forcedTerm = false) => {\n    setLoading(true);\n    if (!forcedTerm) {\n      setSearchResults([]);\n      setActiveIndex(false);\n    }\n    \n    forwardGeocode(forcedTerm || searchTerm).then(data => {\n      console.log('Forward geocode: ', data);\n      const feature = data.features[0];\n      if (feature) {\n        const latitude = feature.geometry.coordinates[1];\n        const longitude = feature.geometry.coordinates[0];\n        setViewPosition({ latitude, longitude });\n\n        history.push(`/search/${latitude}/${longitude}`);\n        \n        getResultsByProximity(latitude, longitude)\n          .then(data => {\n            // console.log('Raw hubdb response: ', data);\n            const results = getSearchResultsFromRows(data.objects);\n            // console.log('Search results: ', results);\n            setSearchResults(results);\n          })\n          .catch(error => {\n            // console.log('Request error: ', error);\n            setError('Problem getting results.');\n          })\n          .finally(() => setLoading(false));\n      } else {\n        setLoading(false);\n        setError(`Can't find location for ${searchTerm}`);\n      }\n    }).catch(error => {\n      setLoading(false);\n      setError(`Can't find location for ${searchTerm}`);\n      // console.log('Forward geocode err: ', error);\n    });\n  }, [searchTerm, history]);\n\n  // user initiated geolocation\n  const geolocationClickHandler = useCallback(e => {\n    setLoading(true);\n    navigator.geolocation.getCurrentPosition(pos => {\n      const latitude = roundToDecimals(pos.coords.latitude);\n      const longitude = roundToDecimals(pos.coords.longitude);\n      // console.log('Got coords: ', { latitude, longitude });\n      setViewPosition({ latitude, longitude });\n\n      history.push(`/search/${latitude}/${longitude}`);\n\n      (async () => {\n        await getSearchResults(latitude, longitude);\n        await getSearchTerm(latitude, longitude);\n      })();\n    }, () => {\n      setLoading(false);\n    });\n  });\n\n  // load more - gets results with offset\n  const loadMoreClickHandler = useCallback(e => {\n    e.preventDefault();\n    setLoadingMore(true);\n    const { latitude, longitude } = viewPosition;\n    const offset = page.current * RESULT_DEFAULTS.limit;\n\n    getResultsByProximity(latitude, longitude, offset)\n      .then(data => {\n        // console.log('Raw hubdb response: ', data);\n        const results = getSearchResultsFromRows(data.objects);\n        // console.log('Se/arch results: ', results);\n        page.current = page.current + 1;\n        setSearchResults([...searchResults, ...results]);\n      })\n      .catch(error => {\n        console.log('Request error: ', error);\n        setError('Problem getting results.');\n      })\n      .finally(() => setLoadingMore(false));\n\n  }, [searchResults]);\n  \n  return (\n    <React.Fragment>\n      <ListingSection>\n        <ContentLiner>\n          <HeadingContent />\n          <SearchForm\n           loading={loading}\n           setLoading={setLoading}\n           searchTerm={searchTerm}\n           setSearchTerm={setSearchTerm}\n           showGeolocate={allowGeolocate}\n           onGeolocate={geolocationClickHandler}\n           onSubmit={onSearchFormSubmit} />\n        </ContentLiner>\n        <ContentLiner>\n          <Loader loading={loading} error={error} height=\"320px\" />\n          {(searchResults.length > 0) &&\n          <SearchResults \n           searchResults={searchResults} \n           activeIndex={activeIndex} \n           setActiveIndex={setActiveIndex} />}\n          {page.current < pageTotal.current &&\n          <LoadMore\n           loading={loadingMore}\n           onClick={loadMoreClickHandler} />}\n          {page.current === pageTotal.current &&\n          <LoadedAll>Showing All Locations</LoadedAll>}\n        </ContentLiner>\n      </ListingSection>\n      <MapSection>\n        <Loader loading={loading} error={error} background={COLORS.gray} />\n        <MapBox \n         zoom={zoom}\n         searchResults={searchResults}\n         onZoomChange={zoom => setZoom(zoom)}\n         viewPosition={viewPosition} \n         onViewPositionChange={pos => setViewPosition(pos)}\n         activeIndex={activeIndex}\n         onActiveIndexChange={index => setActiveIndex(index)} />\n      </MapSection>\n      <ViewToggle />\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(App);\n","import React from 'react'\nimport { Route } from 'react-router-dom';\nimport App from './App';\n\nconst AppRoute = () => (\n  <Route exact path={[\n    '/', // geolocation denial / default empty results\n    '/search/:term', // linking to a pre-filled search field\n    '/search/:latitude/:longitude', // geolocation ok or forward geocoded \n    '/search/:latitude/:longitude/:index' // link to a store within a search\n  ]} component={App} />\n);\n\nexport default AppRoute;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport AppRoute from './AppRoute';\n\nimport './styles/index.sass';\n\nReactDOM.render(\n  <Router>\n    <AppRoute />\n  </Router>,\n  document.getElementById('lfe-root')\n);\n"],"sourceRoot":""}